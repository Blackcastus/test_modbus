ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccAGPAxU.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mbfuncother.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.eMBSetSlaveID,"ax",%progbits
  18              		.align	1
  19              		.global	eMBSetSlaveID
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	eMBSetSlaveID:
  25              	.LVL0:
  26              	.LFB65:
  27              		.file 1 "FreeModbus/functions/mbfuncother.c"
   1:FreeModbus/functions/mbfuncother.c **** /* 
   2:FreeModbus/functions/mbfuncother.c ****  * FreeModbus Libary: A portable Modbus implementation for Modbus ASCII/RTU.
   3:FreeModbus/functions/mbfuncother.c ****  * Copyright (c) 2006-2018 Christian Walter <cwalter@embedded-solutions.at>
   4:FreeModbus/functions/mbfuncother.c ****  * All rights reserved.
   5:FreeModbus/functions/mbfuncother.c ****  *
   6:FreeModbus/functions/mbfuncother.c ****  * Redistribution and use in source and binary forms, with or without
   7:FreeModbus/functions/mbfuncother.c ****  * modification, are permitted provided that the following conditions
   8:FreeModbus/functions/mbfuncother.c ****  * are met:
   9:FreeModbus/functions/mbfuncother.c ****  * 1. Redistributions of source code must retain the above copyright
  10:FreeModbus/functions/mbfuncother.c ****  *    notice, this list of conditions and the following disclaimer.
  11:FreeModbus/functions/mbfuncother.c ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:FreeModbus/functions/mbfuncother.c ****  *    notice, this list of conditions and the following disclaimer in the
  13:FreeModbus/functions/mbfuncother.c ****  *    documentation and/or other materials provided with the distribution.
  14:FreeModbus/functions/mbfuncother.c ****  * 3. The name of the author may not be used to endorse or promote products
  15:FreeModbus/functions/mbfuncother.c ****  *    derived from this software without specific prior written permission.
  16:FreeModbus/functions/mbfuncother.c ****  *
  17:FreeModbus/functions/mbfuncother.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  18:FreeModbus/functions/mbfuncother.c ****  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  19:FreeModbus/functions/mbfuncother.c ****  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  20:FreeModbus/functions/mbfuncother.c ****  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
  21:FreeModbus/functions/mbfuncother.c ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  22:FreeModbus/functions/mbfuncother.c ****  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  23:FreeModbus/functions/mbfuncother.c ****  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  24:FreeModbus/functions/mbfuncother.c ****  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  25:FreeModbus/functions/mbfuncother.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  26:FreeModbus/functions/mbfuncother.c ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  27:FreeModbus/functions/mbfuncother.c ****  *
  28:FreeModbus/functions/mbfuncother.c ****  * File: $Id: mbfuncother.c,v 1.8 2006/12/07 22:10:34 wolti Exp $
  29:FreeModbus/functions/mbfuncother.c ****  */
  30:FreeModbus/functions/mbfuncother.c **** 
  31:FreeModbus/functions/mbfuncother.c **** /* ----------------------- System includes ----------------------------------*/
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccAGPAxU.s 			page 2


  32:FreeModbus/functions/mbfuncother.c **** #include "stdlib.h"
  33:FreeModbus/functions/mbfuncother.c **** #include "string.h"
  34:FreeModbus/functions/mbfuncother.c **** 
  35:FreeModbus/functions/mbfuncother.c **** /* ----------------------- Platform includes --------------------------------*/
  36:FreeModbus/functions/mbfuncother.c **** #include "port.h"
  37:FreeModbus/functions/mbfuncother.c **** 
  38:FreeModbus/functions/mbfuncother.c **** /* ----------------------- Modbus includes ----------------------------------*/
  39:FreeModbus/functions/mbfuncother.c **** #include "mb.h"
  40:FreeModbus/functions/mbfuncother.c **** #include "mbframe.h"
  41:FreeModbus/functions/mbfuncother.c **** #include "mbproto.h"
  42:FreeModbus/functions/mbfuncother.c **** #include "mbconfig.h"
  43:FreeModbus/functions/mbfuncother.c **** 
  44:FreeModbus/functions/mbfuncother.c **** #if MB_FUNC_OTHER_REP_SLAVEID_ENABLED > 0
  45:FreeModbus/functions/mbfuncother.c **** 
  46:FreeModbus/functions/mbfuncother.c **** /* ----------------------- Static variables ---------------------------------*/
  47:FreeModbus/functions/mbfuncother.c **** static UCHAR    ucMBSlaveID[MB_FUNC_OTHER_REP_SLAVEID_BUF];
  48:FreeModbus/functions/mbfuncother.c **** static USHORT   usMBSlaveIDLen;
  49:FreeModbus/functions/mbfuncother.c **** 
  50:FreeModbus/functions/mbfuncother.c **** /* ----------------------- Start implementation -----------------------------*/
  51:FreeModbus/functions/mbfuncother.c **** 
  52:FreeModbus/functions/mbfuncother.c **** eMBErrorCode
  53:FreeModbus/functions/mbfuncother.c **** eMBSetSlaveID( UCHAR ucSlaveID, BOOL xIsRunning,
  54:FreeModbus/functions/mbfuncother.c ****                UCHAR const *pucAdditional, USHORT usAdditionalLen )
  55:FreeModbus/functions/mbfuncother.c **** {
  28              		.loc 1 55 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  56:FreeModbus/functions/mbfuncother.c ****     eMBErrorCode    eStatus = MB_ENOERR;
  32              		.loc 1 56 5 view .LVU1
  57:FreeModbus/functions/mbfuncother.c **** 
  58:FreeModbus/functions/mbfuncother.c ****     /* the first byte and second byte in the buffer is reserved for
  59:FreeModbus/functions/mbfuncother.c ****      * the parameter ucSlaveID and the running flag. The rest of
  60:FreeModbus/functions/mbfuncother.c ****      * the buffer is available for additional data. */
  61:FreeModbus/functions/mbfuncother.c ****     if( usAdditionalLen + 2 < MB_FUNC_OTHER_REP_SLAVEID_BUF )
  33              		.loc 1 61 5 view .LVU2
  34              		.loc 1 61 7 is_stmt 0 view .LVU3
  35 0000 1D2B     		cmp	r3, #29
  36 0002 1DD8     		bhi	.L4
  55:FreeModbus/functions/mbfuncother.c ****     eMBErrorCode    eStatus = MB_ENOERR;
  37              		.loc 1 55 1 view .LVU4
  38 0004 38B5     		push	{r3, r4, r5, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 3, -16
  42              		.cfi_offset 4, -12
  43              		.cfi_offset 5, -8
  44              		.cfi_offset 14, -4
  45 0006 0D46     		mov	r5, r1
  46 0008 1146     		mov	r1, r2
  47              	.LVL1:
  55:FreeModbus/functions/mbfuncother.c ****     eMBErrorCode    eStatus = MB_ENOERR;
  48              		.loc 1 55 1 view .LVU5
  49 000a 1C46     		mov	r4, r3
  62:FreeModbus/functions/mbfuncother.c ****     {
  63:FreeModbus/functions/mbfuncother.c ****         usMBSlaveIDLen = 0;
  50              		.loc 1 63 9 is_stmt 1 view .LVU6
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccAGPAxU.s 			page 3


  51              		.loc 1 63 24 is_stmt 0 view .LVU7
  52 000c 0D4B     		ldr	r3, .L11
  53              	.LVL2:
  54              		.loc 1 63 24 view .LVU8
  55 000e 0022     		movs	r2, #0
  56              	.LVL3:
  57              		.loc 1 63 24 view .LVU9
  58 0010 1A80     		strh	r2, [r3]	@ movhi
  64:FreeModbus/functions/mbfuncother.c ****         ucMBSlaveID[usMBSlaveIDLen++] = ucSlaveID;
  59              		.loc 1 64 9 is_stmt 1 view .LVU10
  60              		.loc 1 64 35 is_stmt 0 view .LVU11
  61 0012 0122     		movs	r2, #1
  62 0014 1A80     		strh	r2, [r3]	@ movhi
  63              		.loc 1 64 39 view .LVU12
  64 0016 0C4B     		ldr	r3, .L11+4
  65 0018 1870     		strb	r0, [r3]
  65:FreeModbus/functions/mbfuncother.c ****         ucMBSlaveID[usMBSlaveIDLen++] = ( UCHAR )( xIsRunning ? 0xFF : 0x00 );
  66              		.loc 1 65 9 is_stmt 1 view .LVU13
  67              		.loc 1 65 41 is_stmt 0 view .LVU14
  68 001a 05B1     		cbz	r5, .L3
  69 001c FF25     		movs	r5, #255
  70              	.L3:
  71              		.loc 1 65 35 discriminator 4 view .LVU15
  72 001e 094B     		ldr	r3, .L11
  73 0020 0222     		movs	r2, #2
  74 0022 1A80     		strh	r2, [r3]	@ movhi
  75              		.loc 1 65 39 discriminator 4 view .LVU16
  76 0024 084B     		ldr	r3, .L11+4
  77 0026 5D70     		strb	r5, [r3, #1]
  66:FreeModbus/functions/mbfuncother.c ****         if( usAdditionalLen > 0 )
  78              		.loc 1 66 9 is_stmt 1 discriminator 4 view .LVU17
  79              		.loc 1 66 11 is_stmt 0 discriminator 4 view .LVU18
  80 0028 0CB9     		cbnz	r4, .L10
  56:FreeModbus/functions/mbfuncother.c **** 
  81              		.loc 1 56 21 view .LVU19
  82 002a 0020     		movs	r0, #0
  83              	.LVL4:
  84              	.L2:
  67:FreeModbus/functions/mbfuncother.c ****         {
  68:FreeModbus/functions/mbfuncother.c ****             memcpy( &ucMBSlaveID[usMBSlaveIDLen], pucAdditional,
  69:FreeModbus/functions/mbfuncother.c ****                     ( size_t )usAdditionalLen );
  70:FreeModbus/functions/mbfuncother.c ****             usMBSlaveIDLen += usAdditionalLen;
  71:FreeModbus/functions/mbfuncother.c ****         }
  72:FreeModbus/functions/mbfuncother.c ****     }
  73:FreeModbus/functions/mbfuncother.c ****     else
  74:FreeModbus/functions/mbfuncother.c ****     {
  75:FreeModbus/functions/mbfuncother.c ****         eStatus = MB_ENORES;
  76:FreeModbus/functions/mbfuncother.c ****     }
  77:FreeModbus/functions/mbfuncother.c ****     return eStatus;
  85              		.loc 1 77 5 is_stmt 1 view .LVU20
  78:FreeModbus/functions/mbfuncother.c **** }
  86              		.loc 1 78 1 is_stmt 0 view .LVU21
  87 002c 38BD     		pop	{r3, r4, r5, pc}
  88              	.LVL5:
  89              	.L10:
  68:FreeModbus/functions/mbfuncother.c ****                     ( size_t )usAdditionalLen );
  90              		.loc 1 68 13 is_stmt 1 view .LVU22
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccAGPAxU.s 			page 4


  91 002e 2246     		mov	r2, r4
  92 0030 981C     		adds	r0, r3, #2
  93              	.LVL6:
  68:FreeModbus/functions/mbfuncother.c ****                     ( size_t )usAdditionalLen );
  94              		.loc 1 68 13 is_stmt 0 view .LVU23
  95 0032 FFF7FEFF 		bl	memcpy
  96              	.LVL7:
  70:FreeModbus/functions/mbfuncother.c ****         }
  97              		.loc 1 70 13 is_stmt 1 view .LVU24
  70:FreeModbus/functions/mbfuncother.c ****         }
  98              		.loc 1 70 28 is_stmt 0 view .LVU25
  99 0036 0234     		adds	r4, r4, #2
 100 0038 024B     		ldr	r3, .L11
 101 003a 1C80     		strh	r4, [r3]	@ movhi
  56:FreeModbus/functions/mbfuncother.c **** 
 102              		.loc 1 56 21 view .LVU26
 103 003c 0020     		movs	r0, #0
 104 003e F5E7     		b	.L2
 105              	.LVL8:
 106              	.L4:
 107              	.LCFI1:
 108              		.cfi_def_cfa_offset 0
 109              		.cfi_restore 3
 110              		.cfi_restore 4
 111              		.cfi_restore 5
 112              		.cfi_restore 14
  75:FreeModbus/functions/mbfuncother.c ****     }
 113              		.loc 1 75 17 view .LVU27
 114 0040 0420     		movs	r0, #4
 115              	.LVL9:
  77:FreeModbus/functions/mbfuncother.c **** }
 116              		.loc 1 77 5 is_stmt 1 view .LVU28
 117              		.loc 1 78 1 is_stmt 0 view .LVU29
 118 0042 7047     		bx	lr
 119              	.L12:
 120              		.align	2
 121              	.L11:
 122 0044 00000000 		.word	.LANCHOR0
 123 0048 00000000 		.word	.LANCHOR1
 124              		.cfi_endproc
 125              	.LFE65:
 127              		.section	.text.eMBFuncReportSlaveID,"ax",%progbits
 128              		.align	1
 129              		.global	eMBFuncReportSlaveID
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 134              	eMBFuncReportSlaveID:
 135              	.LVL10:
 136              	.LFB66:
  79:FreeModbus/functions/mbfuncother.c **** 
  80:FreeModbus/functions/mbfuncother.c **** eMBException
  81:FreeModbus/functions/mbfuncother.c **** eMBFuncReportSlaveID( UCHAR * pucFrame, USHORT * usLen )
  82:FreeModbus/functions/mbfuncother.c **** {
 137              		.loc 1 82 1 is_stmt 1 view -0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccAGPAxU.s 			page 5


 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              		.loc 1 82 1 is_stmt 0 view .LVU31
 142 0000 38B5     		push	{r3, r4, r5, lr}
 143              	.LCFI2:
 144              		.cfi_def_cfa_offset 16
 145              		.cfi_offset 3, -16
 146              		.cfi_offset 4, -12
 147              		.cfi_offset 5, -8
 148              		.cfi_offset 14, -4
 149 0002 0D46     		mov	r5, r1
  83:FreeModbus/functions/mbfuncother.c ****     memcpy( &pucFrame[MB_PDU_DATA_OFF], &ucMBSlaveID[0], ( size_t )usMBSlaveIDLen );
 150              		.loc 1 83 5 is_stmt 1 view .LVU32
 151 0004 054B     		ldr	r3, .L15
 152 0006 1C88     		ldrh	r4, [r3]
 153 0008 2246     		mov	r2, r4
 154 000a 0549     		ldr	r1, .L15+4
 155              	.LVL11:
 156              		.loc 1 83 5 is_stmt 0 view .LVU33
 157 000c 0130     		adds	r0, r0, #1
 158              	.LVL12:
 159              		.loc 1 83 5 view .LVU34
 160 000e FFF7FEFF 		bl	memcpy
 161              	.LVL13:
  84:FreeModbus/functions/mbfuncother.c ****     *usLen = ( USHORT )( MB_PDU_DATA_OFF + usMBSlaveIDLen );
 162              		.loc 1 84 5 is_stmt 1 view .LVU35
 163              		.loc 1 84 14 is_stmt 0 view .LVU36
 164 0012 0134     		adds	r4, r4, #1
 165              		.loc 1 84 12 view .LVU37
 166 0014 2C80     		strh	r4, [r5]	@ movhi
  85:FreeModbus/functions/mbfuncother.c ****     return MB_EX_NONE;
 167              		.loc 1 85 5 is_stmt 1 view .LVU38
  86:FreeModbus/functions/mbfuncother.c **** }
 168              		.loc 1 86 1 is_stmt 0 view .LVU39
 169 0016 0020     		movs	r0, #0
 170 0018 38BD     		pop	{r3, r4, r5, pc}
 171              	.LVL14:
 172              	.L16:
 173              		.loc 1 86 1 view .LVU40
 174 001a 00BF     		.align	2
 175              	.L15:
 176 001c 00000000 		.word	.LANCHOR0
 177 0020 00000000 		.word	.LANCHOR1
 178              		.cfi_endproc
 179              	.LFE66:
 181              		.section	.bss.ucMBSlaveID,"aw",%nobits
 182              		.align	2
 183              		.set	.LANCHOR1,. + 0
 186              	ucMBSlaveID:
 187 0000 00000000 		.space	32
 187      00000000 
 187      00000000 
 187      00000000 
 187      00000000 
 188              		.section	.bss.usMBSlaveIDLen,"aw",%nobits
 189              		.align	1
 190              		.set	.LANCHOR0,. + 0
 193              	usMBSlaveIDLen:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccAGPAxU.s 			page 6


 194 0000 0000     		.space	2
 195              		.text
 196              	.Letext0:
 197              		.file 2 "e:\\gnu arm embedded toolchain\\10 2021.10\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\std
 198              		.file 3 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
 199              		.file 4 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 200              		.file 5 "FreeModbus/port/port.h"
 201              		.file 6 "FreeModbus/include/mbproto.h"
 202              		.file 7 "FreeModbus/include/mb.h"
 203              		.file 8 "<built-in>"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccAGPAxU.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 mbfuncother.c
C:\Users\BLACK_~1\AppData\Local\Temp\ccAGPAxU.s:18     .text.eMBSetSlaveID:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccAGPAxU.s:24     .text.eMBSetSlaveID:00000000 eMBSetSlaveID
C:\Users\BLACK_~1\AppData\Local\Temp\ccAGPAxU.s:122    .text.eMBSetSlaveID:00000044 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccAGPAxU.s:128    .text.eMBFuncReportSlaveID:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccAGPAxU.s:134    .text.eMBFuncReportSlaveID:00000000 eMBFuncReportSlaveID
C:\Users\BLACK_~1\AppData\Local\Temp\ccAGPAxU.s:176    .text.eMBFuncReportSlaveID:0000001c $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccAGPAxU.s:182    .bss.ucMBSlaveID:00000000 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccAGPAxU.s:186    .bss.ucMBSlaveID:00000000 ucMBSlaveID
C:\Users\BLACK_~1\AppData\Local\Temp\ccAGPAxU.s:189    .bss.usMBSlaveIDLen:00000000 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccAGPAxU.s:193    .bss.usMBSlaveIDLen:00000000 usMBSlaveIDLen

UNDEFINED SYMBOLS
memcpy
