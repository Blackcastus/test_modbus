ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccod8ROx.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mbfuncinput_m.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.eMBMasterReqReadInputRegister,"ax",%progbits
  18              		.align	1
  19              		.global	eMBMasterReqReadInputRegister
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	eMBMasterReqReadInputRegister:
  25              	.LVL0:
  26              	.LFB65:
  27              		.file 1 "FreeModbus/functions/mbfuncinput_m.c"
   1:FreeModbus/functions/mbfuncinput_m.c **** /* 
   2:FreeModbus/functions/mbfuncinput_m.c ****  * FreeModbus Libary: A portable Modbus implementation for Modbus ASCII/RTU.
   3:FreeModbus/functions/mbfuncinput_m.c ****  * Copyright (C) 2013 Armink <armink.ztl@gmail.com>
   4:FreeModbus/functions/mbfuncinput_m.c ****  * All rights reserved.
   5:FreeModbus/functions/mbfuncinput_m.c ****  *
   6:FreeModbus/functions/mbfuncinput_m.c ****  * Redistribution and use in source and binary forms, with or without
   7:FreeModbus/functions/mbfuncinput_m.c ****  * modification, are permitted provided that the following conditions
   8:FreeModbus/functions/mbfuncinput_m.c ****  * are met:
   9:FreeModbus/functions/mbfuncinput_m.c ****  * 1. Redistributions of source code must retain the above copyright
  10:FreeModbus/functions/mbfuncinput_m.c ****  *    notice, this list of conditions and the following disclaimer.
  11:FreeModbus/functions/mbfuncinput_m.c ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:FreeModbus/functions/mbfuncinput_m.c ****  *    notice, this list of conditions and the following disclaimer in the
  13:FreeModbus/functions/mbfuncinput_m.c ****  *    documentation and/or other materials provided with the distribution.
  14:FreeModbus/functions/mbfuncinput_m.c ****  * 3. The name of the author may not be used to endorse or promote products
  15:FreeModbus/functions/mbfuncinput_m.c ****  *    derived from this software without specific prior written permission.
  16:FreeModbus/functions/mbfuncinput_m.c ****  *
  17:FreeModbus/functions/mbfuncinput_m.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  18:FreeModbus/functions/mbfuncinput_m.c ****  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  19:FreeModbus/functions/mbfuncinput_m.c ****  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  20:FreeModbus/functions/mbfuncinput_m.c ****  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
  21:FreeModbus/functions/mbfuncinput_m.c ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  22:FreeModbus/functions/mbfuncinput_m.c ****  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  23:FreeModbus/functions/mbfuncinput_m.c ****  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  24:FreeModbus/functions/mbfuncinput_m.c ****  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  25:FreeModbus/functions/mbfuncinput_m.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  26:FreeModbus/functions/mbfuncinput_m.c ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  27:FreeModbus/functions/mbfuncinput_m.c ****  *
  28:FreeModbus/functions/mbfuncinput_m.c ****  * File: $Id: mbfuncinput_m.c,v 1.60 2013/10/12 14:23:40 Armink Add Master Functions  Exp $
  29:FreeModbus/functions/mbfuncinput_m.c ****  */
  30:FreeModbus/functions/mbfuncinput_m.c **** 
  31:FreeModbus/functions/mbfuncinput_m.c **** /* ----------------------- System includes ----------------------------------*/
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccod8ROx.s 			page 2


  32:FreeModbus/functions/mbfuncinput_m.c **** #include "stdlib.h"
  33:FreeModbus/functions/mbfuncinput_m.c **** #include "string.h"
  34:FreeModbus/functions/mbfuncinput_m.c **** 
  35:FreeModbus/functions/mbfuncinput_m.c **** /* ----------------------- Platform includes --------------------------------*/
  36:FreeModbus/functions/mbfuncinput_m.c **** #include "port.h"
  37:FreeModbus/functions/mbfuncinput_m.c **** 
  38:FreeModbus/functions/mbfuncinput_m.c **** /* ----------------------- Modbus includes ----------------------------------*/
  39:FreeModbus/functions/mbfuncinput_m.c **** #include "mb.h"
  40:FreeModbus/functions/mbfuncinput_m.c **** #include "mb_m.h"
  41:FreeModbus/functions/mbfuncinput_m.c **** #include "mbframe.h"
  42:FreeModbus/functions/mbfuncinput_m.c **** #include "mbproto.h"
  43:FreeModbus/functions/mbfuncinput_m.c **** #include "mbconfig.h"
  44:FreeModbus/functions/mbfuncinput_m.c **** 
  45:FreeModbus/functions/mbfuncinput_m.c **** /* ----------------------- Defines ------------------------------------------*/
  46:FreeModbus/functions/mbfuncinput_m.c **** #define MB_PDU_REQ_READ_ADDR_OFF            ( MB_PDU_DATA_OFF + 0 )
  47:FreeModbus/functions/mbfuncinput_m.c **** #define MB_PDU_REQ_READ_REGCNT_OFF          ( MB_PDU_DATA_OFF + 2 )
  48:FreeModbus/functions/mbfuncinput_m.c **** #define MB_PDU_REQ_READ_SIZE                ( 4 )
  49:FreeModbus/functions/mbfuncinput_m.c **** #define MB_PDU_FUNC_READ_BYTECNT_OFF        ( MB_PDU_DATA_OFF + 0 )
  50:FreeModbus/functions/mbfuncinput_m.c **** #define MB_PDU_FUNC_READ_VALUES_OFF         ( MB_PDU_DATA_OFF + 1 )
  51:FreeModbus/functions/mbfuncinput_m.c **** #define MB_PDU_FUNC_READ_SIZE_MIN           ( 1 )
  52:FreeModbus/functions/mbfuncinput_m.c **** 
  53:FreeModbus/functions/mbfuncinput_m.c **** #define MB_PDU_FUNC_READ_RSP_BYTECNT_OFF    ( MB_PDU_DATA_OFF )
  54:FreeModbus/functions/mbfuncinput_m.c **** 
  55:FreeModbus/functions/mbfuncinput_m.c **** /* ----------------------- Static functions ---------------------------------*/
  56:FreeModbus/functions/mbfuncinput_m.c **** eMBException    prveMBError2Exception( eMBErrorCode eErrorCode );
  57:FreeModbus/functions/mbfuncinput_m.c **** 
  58:FreeModbus/functions/mbfuncinput_m.c **** /* ----------------------- Start implementation -----------------------------*/
  59:FreeModbus/functions/mbfuncinput_m.c **** #if MB_MASTER_RTU_ENABLED > 0 || MB_MASTER_ASCII_ENABLED > 0
  60:FreeModbus/functions/mbfuncinput_m.c **** #if MB_FUNC_READ_INPUT_ENABLED > 0
  61:FreeModbus/functions/mbfuncinput_m.c **** 
  62:FreeModbus/functions/mbfuncinput_m.c **** /**
  63:FreeModbus/functions/mbfuncinput_m.c ****  * This function will request read input register.
  64:FreeModbus/functions/mbfuncinput_m.c ****  *
  65:FreeModbus/functions/mbfuncinput_m.c ****  * @param ucSndAddr salve address
  66:FreeModbus/functions/mbfuncinput_m.c ****  * @param usRegAddr register start address
  67:FreeModbus/functions/mbfuncinput_m.c ****  * @param usNRegs register total number
  68:FreeModbus/functions/mbfuncinput_m.c ****  * @param lTimeOut timeout (-1 will waiting forever)
  69:FreeModbus/functions/mbfuncinput_m.c ****  *
  70:FreeModbus/functions/mbfuncinput_m.c ****  * @return error code
  71:FreeModbus/functions/mbfuncinput_m.c ****  */
  72:FreeModbus/functions/mbfuncinput_m.c **** eMBMasterReqErrCode
  73:FreeModbus/functions/mbfuncinput_m.c **** eMBMasterReqReadInputRegister( UCHAR ucSndAddr, USHORT usRegAddr, USHORT usNRegs, LONG lTimeOut )
  74:FreeModbus/functions/mbfuncinput_m.c **** {
  28              		.loc 1 74 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  75:FreeModbus/functions/mbfuncinput_m.c ****     UCHAR                 *ucMBFrame;
  32              		.loc 1 75 5 view .LVU1
  76:FreeModbus/functions/mbfuncinput_m.c ****     eMBMasterReqErrCode    eErrStatus = MB_MRE_NO_ERR;
  33              		.loc 1 76 5 view .LVU2
  77:FreeModbus/functions/mbfuncinput_m.c **** 
  78:FreeModbus/functions/mbfuncinput_m.c ****     if ( ucSndAddr > MB_MASTER_TOTAL_SLAVE_NUM ) eErrStatus = MB_MRE_ILL_ARG;
  34              		.loc 1 78 5 view .LVU3
  35              		.loc 1 78 8 is_stmt 0 view .LVU4
  36 0000 1028     		cmp	r0, #16
  37 0002 01D9     		bls	.L9
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccod8ROx.s 			page 3


  38              		.loc 1 78 61 view .LVU5
  39 0004 0220     		movs	r0, #2
  40              	.LVL1:
  79:FreeModbus/functions/mbfuncinput_m.c ****     else if ( xMBMasterRunResTake( lTimeOut ) == FALSE ) eErrStatus = MB_MRE_MASTER_BUSY;
  80:FreeModbus/functions/mbfuncinput_m.c ****     else
  81:FreeModbus/functions/mbfuncinput_m.c ****     {
  82:FreeModbus/functions/mbfuncinput_m.c **** 		vMBMasterGetPDUSndBuf(&ucMBFrame);
  83:FreeModbus/functions/mbfuncinput_m.c **** 		vMBMasterSetDestAddress(ucSndAddr);
  84:FreeModbus/functions/mbfuncinput_m.c **** 		ucMBFrame[MB_PDU_FUNC_OFF]                = MB_FUNC_READ_INPUT_REGISTER;
  85:FreeModbus/functions/mbfuncinput_m.c **** 		ucMBFrame[MB_PDU_REQ_READ_ADDR_OFF]       = usRegAddr >> 8;
  86:FreeModbus/functions/mbfuncinput_m.c **** 		ucMBFrame[MB_PDU_REQ_READ_ADDR_OFF + 1]   = usRegAddr;
  87:FreeModbus/functions/mbfuncinput_m.c **** 		ucMBFrame[MB_PDU_REQ_READ_REGCNT_OFF]     = usNRegs >> 8;
  88:FreeModbus/functions/mbfuncinput_m.c **** 		ucMBFrame[MB_PDU_REQ_READ_REGCNT_OFF + 1] = usNRegs;
  89:FreeModbus/functions/mbfuncinput_m.c **** 		vMBMasterSetPDUSndLength( MB_PDU_SIZE_MIN + MB_PDU_REQ_READ_SIZE );
  90:FreeModbus/functions/mbfuncinput_m.c **** 		( void ) xMBMasterPortEventPost( EV_MASTER_FRAME_SENT );
  91:FreeModbus/functions/mbfuncinput_m.c **** 		eErrStatus = eMBMasterWaitRequestFinish(lTimeOut);
  92:FreeModbus/functions/mbfuncinput_m.c ****     }
  93:FreeModbus/functions/mbfuncinput_m.c ****     return eErrStatus;
  41              		.loc 1 93 5 is_stmt 1 view .LVU6
  94:FreeModbus/functions/mbfuncinput_m.c **** }
  42              		.loc 1 94 1 is_stmt 0 view .LVU7
  43 0006 7047     		bx	lr
  44              	.LVL2:
  45              	.L9:
  74:FreeModbus/functions/mbfuncinput_m.c ****     UCHAR                 *ucMBFrame;
  46              		.loc 1 74 1 view .LVU8
  47 0008 F0B5     		push	{r4, r5, r6, r7, lr}
  48              	.LCFI0:
  49              		.cfi_def_cfa_offset 20
  50              		.cfi_offset 4, -20
  51              		.cfi_offset 5, -16
  52              		.cfi_offset 6, -12
  53              		.cfi_offset 7, -8
  54              		.cfi_offset 14, -4
  55 000a 83B0     		sub	sp, sp, #12
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 32
  58 000c 0446     		mov	r4, r0
  59 000e 0F46     		mov	r7, r1
  60 0010 1646     		mov	r6, r2
  61 0012 1D46     		mov	r5, r3
  79:FreeModbus/functions/mbfuncinput_m.c ****     else if ( xMBMasterRunResTake( lTimeOut ) == FALSE ) eErrStatus = MB_MRE_MASTER_BUSY;
  62              		.loc 1 79 10 is_stmt 1 view .LVU9
  79:FreeModbus/functions/mbfuncinput_m.c ****     else if ( xMBMasterRunResTake( lTimeOut ) == FALSE ) eErrStatus = MB_MRE_MASTER_BUSY;
  63              		.loc 1 79 15 is_stmt 0 view .LVU10
  64 0014 1846     		mov	r0, r3
  65              	.LVL3:
  79:FreeModbus/functions/mbfuncinput_m.c ****     else if ( xMBMasterRunResTake( lTimeOut ) == FALSE ) eErrStatus = MB_MRE_MASTER_BUSY;
  66              		.loc 1 79 15 view .LVU11
  67 0016 FFF7FEFF 		bl	xMBMasterRunResTake
  68              	.LVL4:
  79:FreeModbus/functions/mbfuncinput_m.c ****     else if ( xMBMasterRunResTake( lTimeOut ) == FALSE ) eErrStatus = MB_MRE_MASTER_BUSY;
  69              		.loc 1 79 13 view .LVU12
  70 001a 10B9     		cbnz	r0, .L10
  79:FreeModbus/functions/mbfuncinput_m.c ****     else if ( xMBMasterRunResTake( lTimeOut ) == FALSE ) eErrStatus = MB_MRE_MASTER_BUSY;
  71              		.loc 1 79 69 view .LVU13
  72 001c 0520     		movs	r0, #5
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccod8ROx.s 			page 4


  73              	.LVL5:
  74              	.L2:
  93:FreeModbus/functions/mbfuncinput_m.c **** }
  75              		.loc 1 93 5 is_stmt 1 view .LVU14
  76              		.loc 1 94 1 is_stmt 0 view .LVU15
  77 001e 03B0     		add	sp, sp, #12
  78              	.LCFI2:
  79              		.cfi_remember_state
  80              		.cfi_def_cfa_offset 20
  81              		@ sp needed
  82 0020 F0BD     		pop	{r4, r5, r6, r7, pc}
  83              	.LVL6:
  84              	.L10:
  85              	.LCFI3:
  86              		.cfi_restore_state
  82:FreeModbus/functions/mbfuncinput_m.c **** 		vMBMasterSetDestAddress(ucSndAddr);
  87              		.loc 1 82 3 is_stmt 1 view .LVU16
  88 0022 01A8     		add	r0, sp, #4
  89 0024 FFF7FEFF 		bl	vMBMasterGetPDUSndBuf
  90              	.LVL7:
  83:FreeModbus/functions/mbfuncinput_m.c **** 		ucMBFrame[MB_PDU_FUNC_OFF]                = MB_FUNC_READ_INPUT_REGISTER;
  91              		.loc 1 83 3 view .LVU17
  92 0028 2046     		mov	r0, r4
  93 002a FFF7FEFF 		bl	vMBMasterSetDestAddress
  94              	.LVL8:
  84:FreeModbus/functions/mbfuncinput_m.c **** 		ucMBFrame[MB_PDU_REQ_READ_ADDR_OFF]       = usRegAddr >> 8;
  95              		.loc 1 84 3 view .LVU18
  84:FreeModbus/functions/mbfuncinput_m.c **** 		ucMBFrame[MB_PDU_REQ_READ_ADDR_OFF]       = usRegAddr >> 8;
  96              		.loc 1 84 45 is_stmt 0 view .LVU19
  97 002e 019B     		ldr	r3, [sp, #4]
  98 0030 0422     		movs	r2, #4
  99 0032 1A70     		strb	r2, [r3]
  85:FreeModbus/functions/mbfuncinput_m.c **** 		ucMBFrame[MB_PDU_REQ_READ_ADDR_OFF + 1]   = usRegAddr;
 100              		.loc 1 85 3 is_stmt 1 view .LVU20
  85:FreeModbus/functions/mbfuncinput_m.c **** 		ucMBFrame[MB_PDU_REQ_READ_ADDR_OFF + 1]   = usRegAddr;
 101              		.loc 1 85 45 is_stmt 0 view .LVU21
 102 0034 3A0A     		lsrs	r2, r7, #8
 103 0036 019B     		ldr	r3, [sp, #4]
 104 0038 5A70     		strb	r2, [r3, #1]
  86:FreeModbus/functions/mbfuncinput_m.c **** 		ucMBFrame[MB_PDU_REQ_READ_REGCNT_OFF]     = usNRegs >> 8;
 105              		.loc 1 86 3 is_stmt 1 view .LVU22
  86:FreeModbus/functions/mbfuncinput_m.c **** 		ucMBFrame[MB_PDU_REQ_READ_REGCNT_OFF]     = usNRegs >> 8;
 106              		.loc 1 86 12 is_stmt 0 view .LVU23
 107 003a 019B     		ldr	r3, [sp, #4]
  86:FreeModbus/functions/mbfuncinput_m.c **** 		ucMBFrame[MB_PDU_REQ_READ_REGCNT_OFF]     = usNRegs >> 8;
 108              		.loc 1 86 45 view .LVU24
 109 003c 9F70     		strb	r7, [r3, #2]
  87:FreeModbus/functions/mbfuncinput_m.c **** 		ucMBFrame[MB_PDU_REQ_READ_REGCNT_OFF + 1] = usNRegs;
 110              		.loc 1 87 3 is_stmt 1 view .LVU25
  87:FreeModbus/functions/mbfuncinput_m.c **** 		ucMBFrame[MB_PDU_REQ_READ_REGCNT_OFF + 1] = usNRegs;
 111              		.loc 1 87 45 is_stmt 0 view .LVU26
 112 003e 320A     		lsrs	r2, r6, #8
 113 0040 019B     		ldr	r3, [sp, #4]
 114 0042 DA70     		strb	r2, [r3, #3]
  88:FreeModbus/functions/mbfuncinput_m.c **** 		vMBMasterSetPDUSndLength( MB_PDU_SIZE_MIN + MB_PDU_REQ_READ_SIZE );
 115              		.loc 1 88 3 is_stmt 1 view .LVU27
  88:FreeModbus/functions/mbfuncinput_m.c **** 		vMBMasterSetPDUSndLength( MB_PDU_SIZE_MIN + MB_PDU_REQ_READ_SIZE );
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccod8ROx.s 			page 5


 116              		.loc 1 88 12 is_stmt 0 view .LVU28
 117 0044 019B     		ldr	r3, [sp, #4]
  88:FreeModbus/functions/mbfuncinput_m.c **** 		vMBMasterSetPDUSndLength( MB_PDU_SIZE_MIN + MB_PDU_REQ_READ_SIZE );
 118              		.loc 1 88 45 view .LVU29
 119 0046 1E71     		strb	r6, [r3, #4]
  89:FreeModbus/functions/mbfuncinput_m.c **** 		( void ) xMBMasterPortEventPost( EV_MASTER_FRAME_SENT );
 120              		.loc 1 89 3 is_stmt 1 view .LVU30
 121 0048 0520     		movs	r0, #5
 122 004a FFF7FEFF 		bl	vMBMasterSetPDUSndLength
 123              	.LVL9:
  90:FreeModbus/functions/mbfuncinput_m.c **** 		eErrStatus = eMBMasterWaitRequestFinish(lTimeOut);
 124              		.loc 1 90 3 view .LVU31
  90:FreeModbus/functions/mbfuncinput_m.c **** 		eErrStatus = eMBMasterWaitRequestFinish(lTimeOut);
 125              		.loc 1 90 12 is_stmt 0 view .LVU32
 126 004e 0820     		movs	r0, #8
 127 0050 FFF7FEFF 		bl	xMBMasterPortEventPost
 128              	.LVL10:
  91:FreeModbus/functions/mbfuncinput_m.c ****     }
 129              		.loc 1 91 3 is_stmt 1 view .LVU33
  91:FreeModbus/functions/mbfuncinput_m.c ****     }
 130              		.loc 1 91 16 is_stmt 0 view .LVU34
 131 0054 2846     		mov	r0, r5
 132 0056 FFF7FEFF 		bl	eMBMasterWaitRequestFinish
 133              	.LVL11:
  91:FreeModbus/functions/mbfuncinput_m.c ****     }
 134              		.loc 1 91 16 view .LVU35
 135 005a E0E7     		b	.L2
 136              		.cfi_endproc
 137              	.LFE65:
 139              		.section	.text.eMBMasterFuncReadInputRegister,"ax",%progbits
 140              		.align	1
 141              		.global	eMBMasterFuncReadInputRegister
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 146              	eMBMasterFuncReadInputRegister:
 147              	.LVL12:
 148              	.LFB66:
  95:FreeModbus/functions/mbfuncinput_m.c **** 
  96:FreeModbus/functions/mbfuncinput_m.c **** eMBException
  97:FreeModbus/functions/mbfuncinput_m.c **** eMBMasterFuncReadInputRegister( UCHAR * pucFrame, USHORT * usLen )
  98:FreeModbus/functions/mbfuncinput_m.c **** {
 149              		.loc 1 98 1 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 8
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		.loc 1 98 1 is_stmt 0 view .LVU37
 154 0000 30B5     		push	{r4, r5, lr}
 155              	.LCFI4:
 156              		.cfi_def_cfa_offset 12
 157              		.cfi_offset 4, -12
 158              		.cfi_offset 5, -8
 159              		.cfi_offset 14, -4
 160 0002 83B0     		sub	sp, sp, #12
 161              	.LCFI5:
 162              		.cfi_def_cfa_offset 24
 163 0004 0546     		mov	r5, r0
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccod8ROx.s 			page 6


 164 0006 0C46     		mov	r4, r1
  99:FreeModbus/functions/mbfuncinput_m.c ****     UCHAR          *ucMBFrame;
 165              		.loc 1 99 5 is_stmt 1 view .LVU38
 100:FreeModbus/functions/mbfuncinput_m.c ****     USHORT          usRegAddress;
 166              		.loc 1 100 5 view .LVU39
 101:FreeModbus/functions/mbfuncinput_m.c ****     USHORT          usRegCount;
 167              		.loc 1 101 5 view .LVU40
 102:FreeModbus/functions/mbfuncinput_m.c **** 
 103:FreeModbus/functions/mbfuncinput_m.c ****     eMBException    eStatus = MB_EX_NONE;
 168              		.loc 1 103 5 view .LVU41
 169              	.LVL13:
 104:FreeModbus/functions/mbfuncinput_m.c ****     eMBErrorCode    eRegStatus;
 170              		.loc 1 104 5 view .LVU42
 105:FreeModbus/functions/mbfuncinput_m.c **** 
 106:FreeModbus/functions/mbfuncinput_m.c ****     /* If this request is broadcast, and it's read mode. This request don't need execute. */
 107:FreeModbus/functions/mbfuncinput_m.c **** 	if ( xMBMasterRequestIsBroadcast() )
 171              		.loc 1 107 2 view .LVU43
 172              		.loc 1 107 7 is_stmt 0 view .LVU44
 173 0008 FFF7FEFF 		bl	xMBMasterRequestIsBroadcast
 174              	.LVL14:
 175              		.loc 1 107 5 view .LVU45
 176 000c F0B9     		cbnz	r0, .L13
 108:FreeModbus/functions/mbfuncinput_m.c **** 	{
 109:FreeModbus/functions/mbfuncinput_m.c **** 		eStatus = MB_EX_NONE;
 110:FreeModbus/functions/mbfuncinput_m.c **** 	}
 111:FreeModbus/functions/mbfuncinput_m.c **** 	else if( *usLen >= MB_PDU_SIZE_MIN + MB_PDU_FUNC_READ_SIZE_MIN )
 177              		.loc 1 111 7 is_stmt 1 view .LVU46
 178              		.loc 1 111 11 is_stmt 0 view .LVU47
 179 000e 2388     		ldrh	r3, [r4]
 180              		.loc 1 111 9 view .LVU48
 181 0010 012B     		cmp	r3, #1
 182 0012 1ED9     		bls	.L14
 112:FreeModbus/functions/mbfuncinput_m.c ****     {
 113:FreeModbus/functions/mbfuncinput_m.c **** 		vMBMasterGetPDUSndBuf(&ucMBFrame);
 183              		.loc 1 113 3 is_stmt 1 view .LVU49
 184 0014 01A8     		add	r0, sp, #4
 185 0016 FFF7FEFF 		bl	vMBMasterGetPDUSndBuf
 186              	.LVL15:
 114:FreeModbus/functions/mbfuncinput_m.c ****         usRegAddress = ( USHORT )( ucMBFrame[MB_PDU_REQ_READ_ADDR_OFF] << 8 );
 187              		.loc 1 114 9 view .LVU50
 188              		.loc 1 114 45 is_stmt 0 view .LVU51
 189 001a 019B     		ldr	r3, [sp, #4]
 190 001c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 191              	.LVL16:
 115:FreeModbus/functions/mbfuncinput_m.c ****         usRegAddress |= ( USHORT )( ucMBFrame[MB_PDU_REQ_READ_ADDR_OFF + 1] );
 192              		.loc 1 115 9 is_stmt 1 view .LVU52
 193              		.loc 1 115 46 is_stmt 0 view .LVU53
 194 001e 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 195              		.loc 1 115 22 view .LVU54
 196 0020 41EA0221 		orr	r1, r1, r2, lsl #8
 197              	.LVL17:
 116:FreeModbus/functions/mbfuncinput_m.c ****         usRegAddress++;
 198              		.loc 1 116 9 is_stmt 1 view .LVU55
 199              		.loc 1 116 21 is_stmt 0 view .LVU56
 200 0024 0131     		adds	r1, r1, #1
 201              	.LVL18:
 202              		.loc 1 116 21 view .LVU57
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccod8ROx.s 			page 7


 203 0026 89B2     		uxth	r1, r1
 204              	.LVL19:
 117:FreeModbus/functions/mbfuncinput_m.c **** 
 118:FreeModbus/functions/mbfuncinput_m.c ****         usRegCount = ( USHORT )( ucMBFrame[MB_PDU_REQ_READ_REGCNT_OFF] << 8 );
 205              		.loc 1 118 9 is_stmt 1 view .LVU58
 206              		.loc 1 118 43 is_stmt 0 view .LVU59
 207 0028 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 208              	.LVL20:
 119:FreeModbus/functions/mbfuncinput_m.c ****         usRegCount |= ( USHORT )( ucMBFrame[MB_PDU_REQ_READ_REGCNT_OFF + 1] );
 209              		.loc 1 119 9 is_stmt 1 view .LVU60
 210              		.loc 1 119 44 is_stmt 0 view .LVU61
 211 002a 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 212              	.LVL21:
 120:FreeModbus/functions/mbfuncinput_m.c **** 
 121:FreeModbus/functions/mbfuncinput_m.c ****         /* Check if the number of registers to read is valid. If not
 122:FreeModbus/functions/mbfuncinput_m.c ****          * return Modbus illegal data value exception.
 123:FreeModbus/functions/mbfuncinput_m.c ****          */
 124:FreeModbus/functions/mbfuncinput_m.c ****         if( ( usRegCount >= 1 ) && ( 2 * usRegCount == pucFrame[MB_PDU_FUNC_READ_BYTECNT_OFF] ) )
 213              		.loc 1 124 9 is_stmt 1 view .LVU62
 214              		.loc 1 124 11 is_stmt 0 view .LVU63
 215 002c 52EA0022 		orrs	r2, r2, r0, lsl #8
 216              	.LVL22:
 217              		.loc 1 124 11 view .LVU64
 218 0030 11D0     		beq	.L15
 219              		.loc 1 124 64 discriminator 1 view .LVU65
 220 0032 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 221              		.loc 1 124 33 discriminator 1 view .LVU66
 222 0034 B3EB420F 		cmp	r3, r2, lsl #1
 223 0038 01D0     		beq	.L18
 125:FreeModbus/functions/mbfuncinput_m.c ****         {
 126:FreeModbus/functions/mbfuncinput_m.c ****             /* Make callback to fill the buffer. */
 127:FreeModbus/functions/mbfuncinput_m.c ****             eRegStatus = eMBMasterRegInputCB( &pucFrame[MB_PDU_FUNC_READ_VALUES_OFF], usRegAddress,
 128:FreeModbus/functions/mbfuncinput_m.c ****             /* If an error occured convert it into a Modbus exception. */
 129:FreeModbus/functions/mbfuncinput_m.c ****             if( eRegStatus != MB_ENOERR )
 130:FreeModbus/functions/mbfuncinput_m.c ****             {
 131:FreeModbus/functions/mbfuncinput_m.c ****                 eStatus = prveMBError2Exception( eRegStatus );
 132:FreeModbus/functions/mbfuncinput_m.c ****             }
 133:FreeModbus/functions/mbfuncinput_m.c ****         }
 134:FreeModbus/functions/mbfuncinput_m.c ****         else
 135:FreeModbus/functions/mbfuncinput_m.c ****         {
 136:FreeModbus/functions/mbfuncinput_m.c ****             eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 224              		.loc 1 136 21 view .LVU67
 225 003a 0320     		movs	r0, #3
 226 003c 07E0     		b	.L12
 227              	.L18:
 127:FreeModbus/functions/mbfuncinput_m.c ****             /* If an error occured convert it into a Modbus exception. */
 228              		.loc 1 127 13 is_stmt 1 view .LVU68
 127:FreeModbus/functions/mbfuncinput_m.c ****             /* If an error occured convert it into a Modbus exception. */
 229              		.loc 1 127 26 is_stmt 0 view .LVU69
 230 003e A81C     		adds	r0, r5, #2
 231 0040 FFF7FEFF 		bl	eMBMasterRegInputCB
 232              	.LVL23:
 129:FreeModbus/functions/mbfuncinput_m.c ****             {
 233              		.loc 1 129 13 is_stmt 1 view .LVU70
 129:FreeModbus/functions/mbfuncinput_m.c ****             {
 234              		.loc 1 129 15 is_stmt 0 view .LVU71
 235 0044 18B1     		cbz	r0, .L12
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccod8ROx.s 			page 8


 131:FreeModbus/functions/mbfuncinput_m.c ****             }
 236              		.loc 1 131 17 is_stmt 1 view .LVU72
 131:FreeModbus/functions/mbfuncinput_m.c ****             }
 237              		.loc 1 131 27 is_stmt 0 view .LVU73
 238 0046 FFF7FEFF 		bl	prveMBError2Exception
 239              	.LVL24:
 131:FreeModbus/functions/mbfuncinput_m.c ****             }
 240              		.loc 1 131 27 view .LVU74
 241 004a 00E0     		b	.L12
 242              	.LVL25:
 243              	.L13:
 109:FreeModbus/functions/mbfuncinput_m.c **** 	}
 244              		.loc 1 109 11 view .LVU75
 245 004c 0020     		movs	r0, #0
 246              	.LVL26:
 247              	.L12:
 137:FreeModbus/functions/mbfuncinput_m.c ****         }
 138:FreeModbus/functions/mbfuncinput_m.c ****     }
 139:FreeModbus/functions/mbfuncinput_m.c ****     else
 140:FreeModbus/functions/mbfuncinput_m.c ****     {
 141:FreeModbus/functions/mbfuncinput_m.c ****         /* Can't be a valid request because the length is incorrect. */
 142:FreeModbus/functions/mbfuncinput_m.c ****         eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 143:FreeModbus/functions/mbfuncinput_m.c ****     }
 144:FreeModbus/functions/mbfuncinput_m.c ****     return eStatus;
 248              		.loc 1 144 5 is_stmt 1 view .LVU76
 145:FreeModbus/functions/mbfuncinput_m.c **** }
 249              		.loc 1 145 1 is_stmt 0 view .LVU77
 250 004e 03B0     		add	sp, sp, #12
 251              	.LCFI6:
 252              		.cfi_remember_state
 253              		.cfi_def_cfa_offset 12
 254              		@ sp needed
 255 0050 30BD     		pop	{r4, r5, pc}
 256              	.LVL27:
 257              	.L14:
 258              	.LCFI7:
 259              		.cfi_restore_state
 142:FreeModbus/functions/mbfuncinput_m.c ****     }
 260              		.loc 1 142 17 view .LVU78
 261 0052 0320     		movs	r0, #3
 262 0054 FBE7     		b	.L12
 263              	.LVL28:
 264              	.L15:
 136:FreeModbus/functions/mbfuncinput_m.c ****         }
 265              		.loc 1 136 21 view .LVU79
 266 0056 0320     		movs	r0, #3
 267 0058 F9E7     		b	.L12
 268              		.cfi_endproc
 269              	.LFE66:
 271              		.text
 272              	.Letext0:
 273              		.file 2 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
 274              		.file 3 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 275              		.file 4 "FreeModbus/port/port.h"
 276              		.file 5 "FreeModbus/include/mbport.h"
 277              		.file 6 "FreeModbus/include/mbproto.h"
 278              		.file 7 "FreeModbus/include/mb.h"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccod8ROx.s 			page 9


 279              		.file 8 "FreeModbus/include/mb_m.h"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccod8ROx.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 mbfuncinput_m.c
C:\Users\BLACK_~1\AppData\Local\Temp\ccod8ROx.s:18     .text.eMBMasterReqReadInputRegister:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccod8ROx.s:24     .text.eMBMasterReqReadInputRegister:00000000 eMBMasterReqReadInputRegister
C:\Users\BLACK_~1\AppData\Local\Temp\ccod8ROx.s:140    .text.eMBMasterFuncReadInputRegister:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccod8ROx.s:146    .text.eMBMasterFuncReadInputRegister:00000000 eMBMasterFuncReadInputRegister

UNDEFINED SYMBOLS
xMBMasterRunResTake
vMBMasterGetPDUSndBuf
vMBMasterSetDestAddress
vMBMasterSetPDUSndLength
xMBMasterPortEventPost
eMBMasterWaitRequestFinish
xMBMasterRequestIsBroadcast
eMBMasterRegInputCB
prveMBError2Exception
