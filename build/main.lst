ARM GAS  /tmp/ccIXjjhi.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemClock_Config,"ax",%progbits
  16              		.align	1
  17              		.global	SystemClock_Config
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	SystemClock_Config:
  25              	.LFB198:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /*
   2:Src/main.c    **** * @Author: nhantt
   3:Src/main.c    **** * @Date:   2020-07-01
   4:Src/main.c    **** * @Last Modified by:   nhantt
   5:Src/main.c    **** * @Last Modified time: 2020-07-01
   6:Src/main.c    **** */
   7:Src/main.c    **** 
   8:Src/main.c    **** #include "main.h"
   9:Src/main.c    **** #include "stm32f1xx_it.h"
  10:Src/main.c    **** #include "usb_device.h"
  11:Src/main.c    **** #include "gpio.h"
  12:Src/main.c    **** #include "config.h"
  13:Src/main.c    **** #include "input.h"
  14:Src/main.c    **** #include "relay.h"
  15:Src/main.c    **** #include "control_system.h"
  16:Src/main.c    **** 
  17:Src/main.c    **** #include "usart.h"
  18:Src/main.c    **** #include "sht_sensor.h"
  19:Src/main.c    **** #include "modbus_data.h"
  20:Src/main.c    **** 
  21:Src/main.c    **** 
  22:Src/main.c    **** int _write(int file, char *data, int len);
  23:Src/main.c    **** void SystemClock_Config(void);
  24:Src/main.c    **** uint32_t tick_;
  25:Src/main.c    **** extern DMA_Event_t        dma_uart1_rx, dma_uart2_rx;
  26:Src/main.c    **** 
  27:Src/main.c    **** int main(void)
  28:Src/main.c    **** {
  29:Src/main.c    ****   HAL_Init();
  30:Src/main.c    ****   SystemClock_Config();
  31:Src/main.c    ****   MX_GPIO_Init();
  32:Src/main.c    ****   MX_USB_DEVICE_Init();
ARM GAS  /tmp/ccIXjjhi.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    ****   HAL_Delay(5000);
  35:Src/main.c    ****   
  36:Src/main.c    ****   CFG_Load();
  37:Src/main.c    **** 
  38:Src/main.c    ****   Uart1_Init();
  39:Src/main.c    ****   Uart2_Init();
  40:Src/main.c    **** 
  41:Src/main.c    ****   Input_Init();
  42:Src/main.c    ****   RELAY_Init();
  43:Src/main.c    **** 
  44:Src/main.c    ****   Ctrl_System_Init_Load();
  45:Src/main.c    **** 
  46:Src/main.c    ****   while (1)
  47:Src/main.c    ****   {
  48:Src/main.c    **** 
  49:Src/main.c    ****     Input_Manage();
  50:Src/main.c    ****     RELAY_Manage();
  51:Src/main.c    **** 
  52:Src/main.c    ****     /* Process UART1 - Raspi */
  53:Src/main.c    ****     if (dma_uart1_rx.state) 
  54:Src/main.c    ****     {
  55:Src/main.c    ****       Modbus_Uart1_Data_Process(1, dma_uart1_rx.data, dma_uart1_rx.length);
  56:Src/main.c    ****       /* Reset */
  57:Src/main.c    ****       dma_uart1_rx.state = 0;
  58:Src/main.c    ****       dma_uart1_rx.length = 0;
  59:Src/main.c    ****     }
  60:Src/main.c    **** 
  61:Src/main.c    ****     // Truyen nhan cam bien SHT
  62:Src/main.c    ****     SHT_Read_Process();
  63:Src/main.c    **** 
  64:Src/main.c    ****     /* Process UART2 - NHan data tu UART2 */
  65:Src/main.c    ****     Modbus_Uart2_Process();
  66:Src/main.c    ****     
  67:Src/main.c    ****     Ctrl_System_Device_Manage();
  68:Src/main.c    ****   }
  69:Src/main.c    **** }
  70:Src/main.c    **** 
  71:Src/main.c    **** void SystemClock_Config(void)
  72:Src/main.c    **** {
  27              		.loc 1 72 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 88
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 97B0     		sub	sp, sp, #92
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 104
  73:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  40              		.loc 1 73 3 view .LVU1
  41              		.loc 1 73 22 is_stmt 0 view .LVU2
  42 0004 2822     		movs	r2, #40
ARM GAS  /tmp/ccIXjjhi.s 			page 3


  43 0006 0021     		movs	r1, #0
  44 0008 0CA8     		add	r0, sp, #48
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
  74:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  47              		.loc 1 74 3 is_stmt 1 view .LVU3
  48              		.loc 1 74 22 is_stmt 0 view .LVU4
  49 000e 0024     		movs	r4, #0
  50 0010 0794     		str	r4, [sp, #28]
  51 0012 0894     		str	r4, [sp, #32]
  52 0014 0994     		str	r4, [sp, #36]
  53 0016 0A94     		str	r4, [sp, #40]
  54 0018 0B94     		str	r4, [sp, #44]
  75:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  55              		.loc 1 75 3 is_stmt 1 view .LVU5
  56              		.loc 1 75 28 is_stmt 0 view .LVU6
  57 001a 0194     		str	r4, [sp, #4]
  58 001c 0294     		str	r4, [sp, #8]
  59 001e 0394     		str	r4, [sp, #12]
  60 0020 0494     		str	r4, [sp, #16]
  61 0022 0594     		str	r4, [sp, #20]
  62 0024 0694     		str	r4, [sp, #24]
  76:Src/main.c    **** 
  77:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
  78:Src/main.c    ****   */
  79:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE
  63              		.loc 1 79 3 is_stmt 1 view .LVU7
  64              		.loc 1 79 36 is_stmt 0 view .LVU8
  65 0026 0D23     		movs	r3, #13
  66 0028 0C93     		str	r3, [sp, #48]
  80:Src/main.c    ****                               |RCC_OSCILLATORTYPE_LSE;
  81:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  67              		.loc 1 81 3 is_stmt 1 view .LVU9
  68              		.loc 1 81 30 is_stmt 0 view .LVU10
  69 002a 4FF48032 		mov	r2, #65536
  70 002e 0D92     		str	r2, [sp, #52]
  82:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  71              		.loc 1 82 3 is_stmt 1 view .LVU11
  83:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
  72              		.loc 1 83 3 view .LVU12
  73              		.loc 1 83 30 is_stmt 0 view .LVU13
  74 0030 0123     		movs	r3, #1
  75 0032 0F93     		str	r3, [sp, #60]
  84:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  76              		.loc 1 84 3 is_stmt 1 view .LVU14
  77              		.loc 1 84 30 is_stmt 0 view .LVU15
  78 0034 1093     		str	r3, [sp, #64]
  85:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
  79              		.loc 1 85 3 is_stmt 1 view .LVU16
  80              		.loc 1 85 30 is_stmt 0 view .LVU17
  81 0036 1293     		str	r3, [sp, #72]
  86:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  82              		.loc 1 86 3 is_stmt 1 view .LVU18
  83              		.loc 1 86 34 is_stmt 0 view .LVU19
  84 0038 0225     		movs	r5, #2
  85 003a 1395     		str	r5, [sp, #76]
  87:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  /tmp/ccIXjjhi.s 			page 4


  86              		.loc 1 87 3 is_stmt 1 view .LVU20
  87              		.loc 1 87 35 is_stmt 0 view .LVU21
  88 003c 1492     		str	r2, [sp, #80]
  88:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  89              		.loc 1 88 3 is_stmt 1 view .LVU22
  90              		.loc 1 88 32 is_stmt 0 view .LVU23
  91 003e 4FF4E013 		mov	r3, #1835008
  92 0042 1593     		str	r3, [sp, #84]
  89:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  93              		.loc 1 89 3 is_stmt 1 view .LVU24
  94              		.loc 1 89 7 is_stmt 0 view .LVU25
  95 0044 0CA8     		add	r0, sp, #48
  96 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
  97              	.LVL1:
  90:Src/main.c    ****   {
  91:Src/main.c    ****     Error_Handler();
  92:Src/main.c    ****   }
  93:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
  94:Src/main.c    ****   */
  95:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  98              		.loc 1 95 3 is_stmt 1 view .LVU26
  99              		.loc 1 95 31 is_stmt 0 view .LVU27
 100 004a 0F23     		movs	r3, #15
 101 004c 0793     		str	r3, [sp, #28]
  96:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  97:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 102              		.loc 1 97 3 is_stmt 1 view .LVU28
 103              		.loc 1 97 34 is_stmt 0 view .LVU29
 104 004e 0895     		str	r5, [sp, #32]
  98:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 105              		.loc 1 98 3 is_stmt 1 view .LVU30
 106              		.loc 1 98 35 is_stmt 0 view .LVU31
 107 0050 0994     		str	r4, [sp, #36]
  99:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 108              		.loc 1 99 3 is_stmt 1 view .LVU32
 109              		.loc 1 99 36 is_stmt 0 view .LVU33
 110 0052 4FF48063 		mov	r3, #1024
 111 0056 0A93     		str	r3, [sp, #40]
 100:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 112              		.loc 1 100 3 is_stmt 1 view .LVU34
 113              		.loc 1 100 36 is_stmt 0 view .LVU35
 114 0058 0B94     		str	r4, [sp, #44]
 101:Src/main.c    **** 
 102:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 115              		.loc 1 102 3 is_stmt 1 view .LVU36
 116              		.loc 1 102 7 is_stmt 0 view .LVU37
 117 005a 2946     		mov	r1, r5
 118 005c 07A8     		add	r0, sp, #28
 119 005e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 120              	.LVL2:
 103:Src/main.c    ****   {
 104:Src/main.c    ****     Error_Handler();
 105:Src/main.c    ****   }
 106:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_ADC
 121              		.loc 1 106 3 is_stmt 1 view .LVU38
 122              		.loc 1 106 38 is_stmt 0 view .LVU39
 123 0062 1323     		movs	r3, #19
ARM GAS  /tmp/ccIXjjhi.s 			page 5


 124 0064 0193     		str	r3, [sp, #4]
 107:Src/main.c    ****                               |RCC_PERIPHCLK_USB;
 108:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 125              		.loc 1 108 3 is_stmt 1 view .LVU40
 126              		.loc 1 108 35 is_stmt 0 view .LVU41
 127 0066 4FF48073 		mov	r3, #256
 128 006a 0293     		str	r3, [sp, #8]
 109:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV8;
 129              		.loc 1 109 3 is_stmt 1 view .LVU42
 130              		.loc 1 109 35 is_stmt 0 view .LVU43
 131 006c 4FF44043 		mov	r3, #49152
 132 0070 0393     		str	r3, [sp, #12]
 110:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 133              		.loc 1 110 3 is_stmt 1 view .LVU44
 134              		.loc 1 110 35 is_stmt 0 view .LVU45
 135 0072 0694     		str	r4, [sp, #24]
 111:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 136              		.loc 1 111 3 is_stmt 1 view .LVU46
 137              		.loc 1 111 7 is_stmt 0 view .LVU47
 138 0074 01A8     		add	r0, sp, #4
 139 0076 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 140              	.LVL3:
 112:Src/main.c    ****   {
 113:Src/main.c    ****     Error_Handler();
 114:Src/main.c    ****   }
 115:Src/main.c    **** }
 141              		.loc 1 115 1 view .LVU48
 142 007a 17B0     		add	sp, sp, #92
 143              	.LCFI2:
 144              		.cfi_def_cfa_offset 12
 145              		@ sp needed
 146 007c 30BD     		pop	{r4, r5, pc}
 147              		.cfi_endproc
 148              	.LFE198:
 150              		.section	.text.main,"ax",%progbits
 151              		.align	1
 152              		.global	main
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 156              		.fpu softvfp
 158              	main:
 159              	.LFB197:
  28:Src/main.c    ****   HAL_Init();
 160              		.loc 1 28 1 is_stmt 1 view -0
 161              		.cfi_startproc
 162              		@ Volatile: function does not return.
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 08B5     		push	{r3, lr}
 166              	.LCFI3:
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 3, -8
 169              		.cfi_offset 14, -4
  29:Src/main.c    ****   SystemClock_Config();
 170              		.loc 1 29 3 view .LVU50
 171 0002 FFF7FEFF 		bl	HAL_Init
ARM GAS  /tmp/ccIXjjhi.s 			page 6


 172              	.LVL4:
  30:Src/main.c    ****   MX_GPIO_Init();
 173              		.loc 1 30 3 view .LVU51
 174 0006 FFF7FEFF 		bl	SystemClock_Config
 175              	.LVL5:
  31:Src/main.c    ****   MX_USB_DEVICE_Init();
 176              		.loc 1 31 3 view .LVU52
 177 000a FFF7FEFF 		bl	MX_GPIO_Init
 178              	.LVL6:
  32:Src/main.c    **** 
 179              		.loc 1 32 3 view .LVU53
 180 000e FFF7FEFF 		bl	MX_USB_DEVICE_Init
 181              	.LVL7:
  34:Src/main.c    ****   
 182              		.loc 1 34 3 view .LVU54
 183 0012 41F28830 		movw	r0, #5000
 184 0016 FFF7FEFF 		bl	HAL_Delay
 185              	.LVL8:
  36:Src/main.c    **** 
 186              		.loc 1 36 3 view .LVU55
 187 001a FFF7FEFF 		bl	CFG_Load
 188              	.LVL9:
  38:Src/main.c    ****   Uart2_Init();
 189              		.loc 1 38 3 view .LVU56
 190 001e FFF7FEFF 		bl	Uart1_Init
 191              	.LVL10:
  39:Src/main.c    **** 
 192              		.loc 1 39 3 view .LVU57
 193 0022 FFF7FEFF 		bl	Uart2_Init
 194              	.LVL11:
  41:Src/main.c    ****   RELAY_Init();
 195              		.loc 1 41 3 view .LVU58
 196 0026 FFF7FEFF 		bl	Input_Init
 197              	.LVL12:
  42:Src/main.c    **** 
 198              		.loc 1 42 3 view .LVU59
 199 002a FFF7FEFF 		bl	RELAY_Init
 200              	.LVL13:
  44:Src/main.c    **** 
 201              		.loc 1 44 3 view .LVU60
 202 002e FFF7FEFF 		bl	Ctrl_System_Init_Load
 203              	.LVL14:
 204 0032 11E0     		b	.L5
 205              	.L7:
  55:Src/main.c    ****       /* Reset */
 206              		.loc 1 55 7 view .LVU61
 207 0034 0D4C     		ldr	r4, .L8
 208 0036 B4F80224 		ldrh	r2, [r4, #1026]
 209 003a 611C     		adds	r1, r4, #1
 210 003c 0120     		movs	r0, #1
 211 003e FFF7FEFF 		bl	Modbus_Uart1_Data_Process
 212              	.LVL15:
  57:Src/main.c    ****       dma_uart1_rx.length = 0;
 213              		.loc 1 57 7 view .LVU62
  57:Src/main.c    ****       dma_uart1_rx.length = 0;
 214              		.loc 1 57 26 is_stmt 0 view .LVU63
 215 0042 0023     		movs	r3, #0
ARM GAS  /tmp/ccIXjjhi.s 			page 7


 216 0044 84F80134 		strb	r3, [r4, #1025]
  58:Src/main.c    ****     }
 217              		.loc 1 58 7 is_stmt 1 view .LVU64
  58:Src/main.c    ****     }
 218              		.loc 1 58 27 is_stmt 0 view .LVU65
 219 0048 A4F80234 		strh	r3, [r4, #1026]	@ movhi
 220              	.L4:
  62:Src/main.c    **** 
 221              		.loc 1 62 5 is_stmt 1 view .LVU66
 222 004c FFF7FEFF 		bl	SHT_Read_Process
 223              	.LVL16:
  65:Src/main.c    ****     
 224              		.loc 1 65 5 view .LVU67
 225 0050 FFF7FEFF 		bl	Modbus_Uart2_Process
 226              	.LVL17:
  67:Src/main.c    ****   }
 227              		.loc 1 67 5 view .LVU68
 228 0054 FFF7FEFF 		bl	Ctrl_System_Device_Manage
 229              	.LVL18:
  46:Src/main.c    ****   {
 230              		.loc 1 46 9 view .LVU69
 231              	.L5:
  46:Src/main.c    ****   {
 232              		.loc 1 46 3 view .LVU70
  49:Src/main.c    ****     RELAY_Manage();
 233              		.loc 1 49 5 view .LVU71
 234 0058 FFF7FEFF 		bl	Input_Manage
 235              	.LVL19:
  50:Src/main.c    **** 
 236              		.loc 1 50 5 view .LVU72
 237 005c FFF7FEFF 		bl	RELAY_Manage
 238              	.LVL20:
  53:Src/main.c    ****     {
 239              		.loc 1 53 5 view .LVU73
  53:Src/main.c    ****     {
 240              		.loc 1 53 21 is_stmt 0 view .LVU74
 241 0060 024B     		ldr	r3, .L8
 242 0062 93F80134 		ldrb	r3, [r3, #1025]	@ zero_extendqisi2
  53:Src/main.c    ****     {
 243              		.loc 1 53 8 view .LVU75
 244 0066 002B     		cmp	r3, #0
 245 0068 E4D1     		bne	.L7
 246 006a EFE7     		b	.L4
 247              	.L9:
 248              		.align	2
 249              	.L8:
 250 006c 00000000 		.word	dma_uart1_rx
 251              		.cfi_endproc
 252              	.LFE197:
 254              		.section	.text.Error_Handler,"ax",%progbits
 255              		.align	1
 256              		.global	Error_Handler
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu softvfp
 262              	Error_Handler:
ARM GAS  /tmp/ccIXjjhi.s 			page 8


 263              	.LFB199:
 116:Src/main.c    **** 
 117:Src/main.c    **** /* USER CODE BEGIN 4 */
 118:Src/main.c    **** 
 119:Src/main.c    **** /* USER CODE END 4 */
 120:Src/main.c    **** 
 121:Src/main.c    **** void Error_Handler(void)
 122:Src/main.c    **** {
 264              		.loc 1 122 1 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 123:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 124:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 127:Src/main.c    **** }
 269              		.loc 1 127 1 view .LVU77
 270 0000 7047     		bx	lr
 271              		.cfi_endproc
 272              	.LFE199:
 274              		.section	.text._write,"ax",%progbits
 275              		.align	1
 276              		.global	_write
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu softvfp
 282              	_write:
 283              	.LVL21:
 284              	.LFB200:
 128:Src/main.c    **** 
 129:Src/main.c    **** #ifdef  USE_FULL_ASSERT
 130:Src/main.c    **** /**
 131:Src/main.c    ****   * @brief  Reports the name of the source file and the source line number
 132:Src/main.c    ****   *         where the assert_param error has occurred.
 133:Src/main.c    ****   * @param  file: pointer to the source file name
 134:Src/main.c    ****   * @param  line: assert_param error line source number
 135:Src/main.c    ****   * @retval None
 136:Src/main.c    ****   */
 137:Src/main.c    **** void assert_failed(uint8_t *file, uint32_t line)
 138:Src/main.c    **** { 
 139:Src/main.c    ****   /* USER CODE BEGIN 6 */
 140:Src/main.c    ****   /* User can add his own implementation to report the file name and line number,
 141:Src/main.c    ****      tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 142:Src/main.c    ****   /* USER CODE END 6 */
 143:Src/main.c    **** }
 144:Src/main.c    **** #endif /* USE_FULL_ASSERT */
 145:Src/main.c    **** 
 146:Src/main.c    **** int _write(int file, char *data, int len)
 147:Src/main.c    **** {
 285              		.loc 1 147 1 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		.loc 1 147 1 is_stmt 0 view .LVU79
ARM GAS  /tmp/ccIXjjhi.s 			page 9


 290 0000 08B5     		push	{r3, lr}
 291              	.LCFI4:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 3, -8
 294              		.cfi_offset 14, -4
 148:Src/main.c    ****   if ((file != STDOUT_FILENO) && (file != STDERR_FILENO))
 295              		.loc 1 148 3 is_stmt 1 view .LVU80
 296              		.loc 1 148 31 is_stmt 0 view .LVU81
 297 0002 431E     		subs	r3, r0, #1
 298              		.loc 1 148 6 view .LVU82
 299 0004 012B     		cmp	r3, #1
 300 0006 05D8     		bhi	.L15
 301 0008 0846     		mov	r0, r1
 302              	.LVL22:
 303              		.loc 1 148 6 view .LVU83
 304 000a 1146     		mov	r1, r2
 305              	.LVL23:
 149:Src/main.c    ****   {
 150:Src/main.c    ****     errno = EBADF;
 151:Src/main.c    ****     return -1;
 152:Src/main.c    ****   }
 153:Src/main.c    ****   uint8_t status = CDC_Transmit_FS((uint8_t *)data, len);
 306              		.loc 1 153 3 is_stmt 1 view .LVU84
 307              		.loc 1 153 20 is_stmt 0 view .LVU85
 308 000c FFF7FEFF 		bl	CDC_Transmit_FS
 309              	.LVL24:
 154:Src/main.c    ****   return status;
 310              		.loc 1 154 3 is_stmt 1 view .LVU86
 311 0010 C0B2     		uxtb	r0, r0
 312              	.LVL25:
 313              	.L11:
 155:Src/main.c    **** }
 314              		.loc 1 155 1 is_stmt 0 view .LVU87
 315 0012 08BD     		pop	{r3, pc}
 316              	.LVL26:
 317              	.L15:
 150:Src/main.c    ****     return -1;
 318              		.loc 1 150 5 is_stmt 1 view .LVU88
 319 0014 FFF7FEFF 		bl	__errno
 320              	.LVL27:
 150:Src/main.c    ****     return -1;
 321              		.loc 1 150 11 is_stmt 0 view .LVU89
 322 0018 0923     		movs	r3, #9
 323 001a 0360     		str	r3, [r0]
 151:Src/main.c    ****   }
 324              		.loc 1 151 5 is_stmt 1 view .LVU90
 151:Src/main.c    ****   }
 325              		.loc 1 151 12 is_stmt 0 view .LVU91
 326 001c 4FF0FF30 		mov	r0, #-1
 327 0020 F7E7     		b	.L11
 328              		.cfi_endproc
 329              	.LFE200:
 331              		.global	tick_
 332              		.section	.bss.tick_,"aw",%nobits
 333              		.align	2
 336              	tick_:
 337 0000 00000000 		.space	4
ARM GAS  /tmp/ccIXjjhi.s 			page 10


 338              		.text
 339              	.Letext0:
 340              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 341              		.file 3 "/home/smartth/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4//Drivers/STM32F1xx_HAL_Driver/I
 342              		.file 4 "/home/smartth/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4//Drivers/STM32F1xx_HAL_Driver/I
 343              		.file 5 "User/Modbus/usart.h"
 344              		.file 6 "/usr/include/newlib/sys/errno.h"
 345              		.file 7 "Inc/stm32f1xx_hal.h"
 346              		.file 8 "Inc/gpio.h"
 347              		.file 9 "User/USB/usb_device.h"
 348              		.file 10 "User/System/config.h"
 349              		.file 11 "Inc/input.h"
 350              		.file 12 "Inc/relay.h"
 351              		.file 13 "User/System/control_system.h"
 352              		.file 14 "User/Modbus/modbus_data.h"
 353              		.file 15 "User/Peripherals/sht_sensor.h"
 354              		.file 16 "/home/smartth/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4//Drivers/STM32F1xx_HAL_Driver/
 355              		.file 17 "<built-in>"
ARM GAS  /tmp/ccIXjjhi.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccIXjjhi.s:16     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccIXjjhi.s:24     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccIXjjhi.s:151    .text.main:0000000000000000 $t
     /tmp/ccIXjjhi.s:158    .text.main:0000000000000000 main
     /tmp/ccIXjjhi.s:250    .text.main:000000000000006c $d
     /tmp/ccIXjjhi.s:255    .text.Error_Handler:0000000000000000 $t
     /tmp/ccIXjjhi.s:262    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccIXjjhi.s:275    .text._write:0000000000000000 $t
     /tmp/ccIXjjhi.s:282    .text._write:0000000000000000 _write
     /tmp/ccIXjjhi.s:336    .bss.tick_:0000000000000000 tick_
     /tmp/ccIXjjhi.s:333    .bss.tick_:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_USB_DEVICE_Init
HAL_Delay
CFG_Load
Uart1_Init
Uart2_Init
Input_Init
RELAY_Init
Ctrl_System_Init_Load
Modbus_Uart1_Data_Process
SHT_Read_Process
Modbus_Uart2_Process
Ctrl_System_Device_Manage
Input_Manage
RELAY_Manage
dma_uart1_rx
CDC_Transmit_FS
__errno
