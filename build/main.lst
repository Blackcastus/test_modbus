ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB71:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdlib.h>
  25:Core/Src/main.c **** #include <string.h>
  26:Core/Src/main.c **** #include <errno.h>
  27:Core/Src/main.c **** #include <stdio.h>
  28:Core/Src/main.c **** #include <unistd.h>
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** #include "usb_device.h"
  31:Core/Src/main.c **** #include "usart.h"
  32:Core/Src/main.c **** #include "tim.h"
  33:Core/Src/main.c **** #include "timeout.h"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** #include "mb.h"
  36:Core/Src/main.c **** #include "mbport.h"
  37:Core/Src/main.c **** #include "user_mb_app.h"
  38:Core/Src/main.c **** #include "mbconfig.h"
  39:Core/Src/main.c **** #include "mbframe.h"
  40:Core/Src/main.c **** #include "mb_m.h"
  41:Core/Src/main.c **** #include "user_mb_app_m.h"
  42:Core/Src/main.c **** /* USER CODE END Includes */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PTD */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  50:Core/Src/main.c **** /* USER CODE BEGIN PD */
  51:Core/Src/main.c **** /* USER CODE END PD */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  54:Core/Src/main.c **** /* USER CODE BEGIN PM */
  55:Core/Src/main.c **** int _write(int file, char *data, int len);
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** uint32_t tick;
  58:Core/Src/main.c **** /* USER CODE END PM */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  61:Core/Src/main.c **** IWDG_HandleTypeDef hiwdg;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** // TIM_HandleTypeDef htim3;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** // UART_HandleTypeDef huart2;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** // PCD_HandleTypeDef hpcd_USB_FS;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE BEGIN PV */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE END PV */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** void SystemClock_Config(void);
  76:Core/Src/main.c **** static void MX_GPIO_Init(void);
  77:Core/Src/main.c **** static void MX_IWDG_Init(void);
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* USER CODE END PFP */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  84:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* USER CODE END 0 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /**
  89:Core/Src/main.c ****   * @brief  The application entry point.
  90:Core/Src/main.c ****   * @retval int
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 3


  91:Core/Src/main.c ****   */
  92:Core/Src/main.c **** int main(void)
  93:Core/Src/main.c **** {
  94:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END 1 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 101:Core/Src/main.c ****   HAL_Init();
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE END Init */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Configure the system clock */
 108:Core/Src/main.c ****   SystemClock_Config();
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE END SysInit */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Initialize all configured peripherals */
 115:Core/Src/main.c ****   MX_GPIO_Init();
 116:Core/Src/main.c ****   MX_TIM3_Init();
 117:Core/Src/main.c ****   MX_USART2_UART_Init();
 118:Core/Src/main.c ****   
 119:Core/Src/main.c ****   // MX_IWDG_Init();
 120:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 123:Core/Src/main.c ****   eMBMasterInit(MB_RTU, &huart2, 19200, &htim3);
 124:Core/Src/main.c ****   eMBMasterEnable();
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE END 2 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Infinite loop */
 129:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 130:Core/Src/main.c ****   while (1)
 131:Core/Src/main.c ****   {
 132:Core/Src/main.c ****     eMBMasterPoll();
 133:Core/Src/main.c ****     if(HAL_GetTick() - tick > 1000){
 134:Core/Src/main.c ****       // printf("Hello\n"); // test usb
 135:Core/Src/main.c ****       // HAL_UART_Transmit(&huart2, (uint8_t*)"helloo\n", sizeof("helloo"), 100); // test uart2
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****       printf("status: %d\n", eMBMasterReqReadHoldingRegister(1, 0, 2, 100));
 138:Core/Src/main.c ****       printf("data = %d\n", usMRegHoldBuf[0][0]);
 139:Core/Src/main.c ****       tick = HAL_GetTick();
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****     }
 142:Core/Src/main.c ****     // HAL_IWDG_Refresh(&hiwdg);
 143:Core/Src/main.c ****     /* USER CODE END WHILE */
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 146:Core/Src/main.c ****   }
 147:Core/Src/main.c **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 4


 148:Core/Src/main.c ****   /* USER CODE END 3 */
 149:Core/Src/main.c **** }
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** /**
 152:Core/Src/main.c ****   * @brief System Clock Configuration
 153:Core/Src/main.c ****   * @retval None
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c **** void SystemClock_Config(void)
 156:Core/Src/main.c **** {
 157:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 158:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 159:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 162:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 166:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 167:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 168:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 172:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****     Error_Handler();
 175:Core/Src/main.c ****   }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 180:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 181:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 182:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 183:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 184:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 187:Core/Src/main.c ****   {
 188:Core/Src/main.c ****     Error_Handler();
 189:Core/Src/main.c ****   }
 190:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 191:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 192:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 193:Core/Src/main.c ****   {
 194:Core/Src/main.c ****     Error_Handler();
 195:Core/Src/main.c ****   }
 196:Core/Src/main.c **** }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** /**
 199:Core/Src/main.c ****   * @brief IWDG Initialization Function
 200:Core/Src/main.c ****   * @param None
 201:Core/Src/main.c ****   * @retval None
 202:Core/Src/main.c ****   */
 203:Core/Src/main.c **** static void MX_IWDG_Init(void)
 204:Core/Src/main.c **** {
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 5


 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 0 */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE END IWDG_Init 0 */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 1 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* USER CODE END IWDG_Init 1 */
 213:Core/Src/main.c ****   hiwdg.Instance = IWDG;
 214:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 215:Core/Src/main.c ****   hiwdg.Init.Reload = 4095;
 216:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 217:Core/Src/main.c ****   {
 218:Core/Src/main.c ****     Error_Handler();
 219:Core/Src/main.c ****   }
 220:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 2 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE END IWDG_Init 2 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c **** }
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** /**
 227:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 228:Core/Src/main.c ****   * @param None
 229:Core/Src/main.c ****   * @retval None
 230:Core/Src/main.c ****   */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** /**
 234:Core/Src/main.c ****   * @brief USART2 Initialization Function
 235:Core/Src/main.c ****   * @param None
 236:Core/Src/main.c ****   * @retval None
 237:Core/Src/main.c ****   */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** /**
 241:Core/Src/main.c ****   * @brief USB Initialization Function
 242:Core/Src/main.c ****   * @param None
 243:Core/Src/main.c ****   * @retval None
 244:Core/Src/main.c ****   */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** /**
 247:Core/Src/main.c ****   * @brief GPIO Initialization Function
 248:Core/Src/main.c ****   * @param None
 249:Core/Src/main.c ****   * @retval None
 250:Core/Src/main.c ****   */
 251:Core/Src/main.c **** static void MX_GPIO_Init(void)
 252:Core/Src/main.c **** {
  26              		.loc 1 252 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 253:Core/Src/main.c **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 6


 254:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 255:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  34              		.loc 1 255 3 view .LVU1
  35              	.LBB4:
  36              		.loc 1 255 3 view .LVU2
  37              		.loc 1 255 3 view .LVU3
  38 0002 0A4B     		ldr	r3, .L3
  39 0004 9A69     		ldr	r2, [r3, #24]
  40 0006 42F02002 		orr	r2, r2, #32
  41 000a 9A61     		str	r2, [r3, #24]
  42              		.loc 1 255 3 view .LVU4
  43 000c 9A69     		ldr	r2, [r3, #24]
  44 000e 02F02002 		and	r2, r2, #32
  45 0012 0092     		str	r2, [sp]
  46              		.loc 1 255 3 view .LVU5
  47 0014 009A     		ldr	r2, [sp]
  48              	.LBE4:
  49              		.loc 1 255 3 view .LVU6
 256:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  50              		.loc 1 256 3 view .LVU7
  51              	.LBB5:
  52              		.loc 1 256 3 view .LVU8
  53              		.loc 1 256 3 view .LVU9
  54 0016 9A69     		ldr	r2, [r3, #24]
  55 0018 42F00402 		orr	r2, r2, #4
  56 001c 9A61     		str	r2, [r3, #24]
  57              		.loc 1 256 3 view .LVU10
  58 001e 9B69     		ldr	r3, [r3, #24]
  59 0020 03F00403 		and	r3, r3, #4
  60 0024 0193     		str	r3, [sp, #4]
  61              		.loc 1 256 3 view .LVU11
  62 0026 019B     		ldr	r3, [sp, #4]
  63              	.LBE5:
  64              		.loc 1 256 3 view .LVU12
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** }
  65              		.loc 1 258 1 is_stmt 0 view .LVU13
  66 0028 02B0     		add	sp, sp, #8
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 0
  69              		@ sp needed
  70 002a 7047     		bx	lr
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 002c 00100240 		.word	1073876992
  75              		.cfi_endproc
  76              	.LFE71:
  78              		.section	.text._write,"ax",%progbits
  79              		.align	1
  80              		.global	_write
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  85              	_write:
  86              	.LVL0:
  87              	.LFB72:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 7


 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 261:Core/Src/main.c **** int _write(int file, char *data, int len)
 262:Core/Src/main.c **** {
  88              		.loc 1 262 1 is_stmt 1 view -0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		.loc 1 262 1 is_stmt 0 view .LVU15
  93 0000 08B5     		push	{r3, lr}
  94              	.LCFI2:
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 3, -8
  97              		.cfi_offset 14, -4
 263:Core/Src/main.c ****   if ((file != STDOUT_FILENO) && (file != STDERR_FILENO))
  98              		.loc 1 263 3 is_stmt 1 view .LVU16
  99              		.loc 1 263 31 is_stmt 0 view .LVU17
 100 0002 431E     		subs	r3, r0, #1
 101              		.loc 1 263 6 view .LVU18
 102 0004 012B     		cmp	r3, #1
 103 0006 05D8     		bhi	.L9
 104 0008 0846     		mov	r0, r1
 105              	.LVL1:
 106              		.loc 1 263 6 view .LVU19
 107 000a 1146     		mov	r1, r2
 108              	.LVL2:
 264:Core/Src/main.c ****   {
 265:Core/Src/main.c ****     errno = EBADF;
 266:Core/Src/main.c ****     return -1;
 267:Core/Src/main.c ****   }
 268:Core/Src/main.c ****   uint8_t status = CDC_Transmit_FS((uint8_t *)data, len);
 109              		.loc 1 268 3 is_stmt 1 view .LVU20
 110              		.loc 1 268 20 is_stmt 0 view .LVU21
 111 000c FFF7FEFF 		bl	CDC_Transmit_FS
 112              	.LVL3:
 269:Core/Src/main.c ****   return status;
 113              		.loc 1 269 3 is_stmt 1 view .LVU22
 114 0010 C0B2     		uxtb	r0, r0
 115              	.LVL4:
 116              	.L5:
 270:Core/Src/main.c **** }
 117              		.loc 1 270 1 is_stmt 0 view .LVU23
 118 0012 08BD     		pop	{r3, pc}
 119              	.LVL5:
 120              	.L9:
 265:Core/Src/main.c ****     return -1;
 121              		.loc 1 265 5 is_stmt 1 view .LVU24
 122 0014 FFF7FEFF 		bl	__errno
 123              	.LVL6:
 265:Core/Src/main.c ****     return -1;
 124              		.loc 1 265 11 is_stmt 0 view .LVU25
 125 0018 0923     		movs	r3, #9
 126 001a 0360     		str	r3, [r0]
 266:Core/Src/main.c ****   }
 127              		.loc 1 266 5 is_stmt 1 view .LVU26
 266:Core/Src/main.c ****   }
 128              		.loc 1 266 12 is_stmt 0 view .LVU27
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 8


 129 001c 4FF0FF30 		mov	r0, #-1
 130 0020 F7E7     		b	.L5
 131              		.cfi_endproc
 132              	.LFE72:
 134              		.section	.text.Error_Handler,"ax",%progbits
 135              		.align	1
 136              		.global	Error_Handler
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 141              	Error_Handler:
 142              	.LFB73:
 271:Core/Src/main.c **** /* USER CODE END 4 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** /**
 274:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 275:Core/Src/main.c ****   * @retval None
 276:Core/Src/main.c ****   */
 277:Core/Src/main.c **** void Error_Handler(void)
 278:Core/Src/main.c **** {
 143              		.loc 1 278 1 is_stmt 1 view -0
 144              		.cfi_startproc
 145              		@ Volatile: function does not return.
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 279:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 280:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 281:Core/Src/main.c ****   __disable_irq();
 149              		.loc 1 281 3 view .LVU29
 150              	.LBB6:
 151              	.LBI6:
 152              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 9


  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 10


  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 11


 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 153              		.loc 2 140 27 view .LVU30
 154              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 155              		.loc 2 142 3 view .LVU31
 156              		.syntax unified
 157              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 158 0000 72B6     		cpsid i
 159              	@ 0 "" 2
 160              		.thumb
 161              		.syntax unified
 162              	.L11:
 163              	.LBE7:
 164              	.LBE6:
 282:Core/Src/main.c ****   while (1)
 165              		.loc 1 282 3 discriminator 1 view .LVU32
 283:Core/Src/main.c ****   {
 284:Core/Src/main.c ****   }
 166              		.loc 1 284 3 discriminator 1 view .LVU33
 282:Core/Src/main.c ****   while (1)
 167              		.loc 1 282 9 discriminator 1 view .LVU34
 168 0002 FEE7     		b	.L11
 169              		.cfi_endproc
 170              	.LFE73:
 172              		.section	.text.SystemClock_Config,"ax",%progbits
 173              		.align	1
 174              		.global	SystemClock_Config
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 179              	SystemClock_Config:
 180              	.LFB69:
 156:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 181              		.loc 1 156 1 view -0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 88
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185 0000 00B5     		push	{lr}
 186              	.LCFI3:
 187              		.cfi_def_cfa_offset 4
 188              		.cfi_offset 14, -4
 189 0002 97B0     		sub	sp, sp, #92
 190              	.LCFI4:
 191              		.cfi_def_cfa_offset 96
 157:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 192              		.loc 1 157 3 view .LVU36
 157:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 193              		.loc 1 157 22 is_stmt 0 view .LVU37
 194 0004 2822     		movs	r2, #40
 195 0006 0021     		movs	r1, #0
 196 0008 0CA8     		add	r0, sp, #48
 197 000a FFF7FEFF 		bl	memset
 198              	.LVL7:
 158:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 199              		.loc 1 158 3 is_stmt 1 view .LVU38
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 12


 158:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 200              		.loc 1 158 22 is_stmt 0 view .LVU39
 201 000e 0023     		movs	r3, #0
 202 0010 0793     		str	r3, [sp, #28]
 203 0012 0893     		str	r3, [sp, #32]
 204 0014 0993     		str	r3, [sp, #36]
 205 0016 0A93     		str	r3, [sp, #40]
 206 0018 0B93     		str	r3, [sp, #44]
 159:Core/Src/main.c **** 
 207              		.loc 1 159 3 is_stmt 1 view .LVU40
 159:Core/Src/main.c **** 
 208              		.loc 1 159 28 is_stmt 0 view .LVU41
 209 001a 0193     		str	r3, [sp, #4]
 210 001c 0293     		str	r3, [sp, #8]
 211 001e 0393     		str	r3, [sp, #12]
 212 0020 0493     		str	r3, [sp, #16]
 213 0022 0593     		str	r3, [sp, #20]
 214 0024 0693     		str	r3, [sp, #24]
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 215              		.loc 1 164 3 is_stmt 1 view .LVU42
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 216              		.loc 1 164 36 is_stmt 0 view .LVU43
 217 0026 0923     		movs	r3, #9
 218 0028 0C93     		str	r3, [sp, #48]
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 219              		.loc 1 165 3 is_stmt 1 view .LVU44
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 220              		.loc 1 165 30 is_stmt 0 view .LVU45
 221 002a 4FF48033 		mov	r3, #65536
 222 002e 0D93     		str	r3, [sp, #52]
 166:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 223              		.loc 1 166 3 is_stmt 1 view .LVU46
 167:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 224              		.loc 1 167 3 view .LVU47
 167:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 225              		.loc 1 167 30 is_stmt 0 view .LVU48
 226 0030 0122     		movs	r2, #1
 227 0032 1092     		str	r2, [sp, #64]
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 228              		.loc 1 168 3 is_stmt 1 view .LVU49
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 229              		.loc 1 168 30 is_stmt 0 view .LVU50
 230 0034 1292     		str	r2, [sp, #72]
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 231              		.loc 1 169 3 is_stmt 1 view .LVU51
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 232              		.loc 1 169 34 is_stmt 0 view .LVU52
 233 0036 0222     		movs	r2, #2
 234 0038 1392     		str	r2, [sp, #76]
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 235              		.loc 1 170 3 is_stmt 1 view .LVU53
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 236              		.loc 1 170 35 is_stmt 0 view .LVU54
 237 003a 1493     		str	r3, [sp, #80]
 171:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 238              		.loc 1 171 3 is_stmt 1 view .LVU55
 171:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 13


 239              		.loc 1 171 32 is_stmt 0 view .LVU56
 240 003c 4FF4E013 		mov	r3, #1835008
 241 0040 1593     		str	r3, [sp, #84]
 172:Core/Src/main.c ****   {
 242              		.loc 1 172 3 is_stmt 1 view .LVU57
 172:Core/Src/main.c ****   {
 243              		.loc 1 172 7 is_stmt 0 view .LVU58
 244 0042 0CA8     		add	r0, sp, #48
 245 0044 FFF7FEFF 		bl	HAL_RCC_OscConfig
 246              	.LVL8:
 172:Core/Src/main.c ****   {
 247              		.loc 1 172 6 view .LVU59
 248 0048 C0B9     		cbnz	r0, .L17
 179:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 249              		.loc 1 179 3 is_stmt 1 view .LVU60
 179:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 250              		.loc 1 179 31 is_stmt 0 view .LVU61
 251 004a 0F23     		movs	r3, #15
 252 004c 0793     		str	r3, [sp, #28]
 181:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 253              		.loc 1 181 3 is_stmt 1 view .LVU62
 181:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 254              		.loc 1 181 34 is_stmt 0 view .LVU63
 255 004e 0221     		movs	r1, #2
 256 0050 0891     		str	r1, [sp, #32]
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 257              		.loc 1 182 3 is_stmt 1 view .LVU64
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 258              		.loc 1 182 35 is_stmt 0 view .LVU65
 259 0052 0023     		movs	r3, #0
 260 0054 0993     		str	r3, [sp, #36]
 183:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 261              		.loc 1 183 3 is_stmt 1 view .LVU66
 183:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 262              		.loc 1 183 36 is_stmt 0 view .LVU67
 263 0056 4FF48062 		mov	r2, #1024
 264 005a 0A92     		str	r2, [sp, #40]
 184:Core/Src/main.c **** 
 265              		.loc 1 184 3 is_stmt 1 view .LVU68
 184:Core/Src/main.c **** 
 266              		.loc 1 184 36 is_stmt 0 view .LVU69
 267 005c 0B93     		str	r3, [sp, #44]
 186:Core/Src/main.c ****   {
 268              		.loc 1 186 3 is_stmt 1 view .LVU70
 186:Core/Src/main.c ****   {
 269              		.loc 1 186 7 is_stmt 0 view .LVU71
 270 005e 07A8     		add	r0, sp, #28
 271 0060 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 272              	.LVL9:
 186:Core/Src/main.c ****   {
 273              		.loc 1 186 6 view .LVU72
 274 0064 60B9     		cbnz	r0, .L18
 190:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 275              		.loc 1 190 3 is_stmt 1 view .LVU73
 190:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 276              		.loc 1 190 38 is_stmt 0 view .LVU74
 277 0066 1023     		movs	r3, #16
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 14


 278 0068 0193     		str	r3, [sp, #4]
 191:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 279              		.loc 1 191 3 is_stmt 1 view .LVU75
 191:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 280              		.loc 1 191 35 is_stmt 0 view .LVU76
 281 006a 0023     		movs	r3, #0
 282 006c 0693     		str	r3, [sp, #24]
 192:Core/Src/main.c ****   {
 283              		.loc 1 192 3 is_stmt 1 view .LVU77
 192:Core/Src/main.c ****   {
 284              		.loc 1 192 7 is_stmt 0 view .LVU78
 285 006e 01A8     		add	r0, sp, #4
 286 0070 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 287              	.LVL10:
 192:Core/Src/main.c ****   {
 288              		.loc 1 192 6 view .LVU79
 289 0074 30B9     		cbnz	r0, .L19
 196:Core/Src/main.c **** 
 290              		.loc 1 196 1 view .LVU80
 291 0076 17B0     		add	sp, sp, #92
 292              	.LCFI5:
 293              		.cfi_remember_state
 294              		.cfi_def_cfa_offset 4
 295              		@ sp needed
 296 0078 5DF804FB 		ldr	pc, [sp], #4
 297              	.L17:
 298              	.LCFI6:
 299              		.cfi_restore_state
 174:Core/Src/main.c ****   }
 300              		.loc 1 174 5 is_stmt 1 view .LVU81
 301 007c FFF7FEFF 		bl	Error_Handler
 302              	.LVL11:
 303              	.L18:
 188:Core/Src/main.c ****   }
 304              		.loc 1 188 5 view .LVU82
 305 0080 FFF7FEFF 		bl	Error_Handler
 306              	.LVL12:
 307              	.L19:
 194:Core/Src/main.c ****   }
 308              		.loc 1 194 5 view .LVU83
 309 0084 FFF7FEFF 		bl	Error_Handler
 310              	.LVL13:
 311              		.cfi_endproc
 312              	.LFE69:
 314              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 315              		.align	2
 316              	.LC0:
 317 0000 73746174 		.ascii	"status: %d\012\000"
 317      75733A20 
 317      25640A00 
 318              		.align	2
 319              	.LC1:
 320 000c 64617461 		.ascii	"data = %d\012\000"
 320      203D2025 
 320      640A00
 321              		.section	.text.main,"ax",%progbits
 322              		.align	1
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 15


 323              		.global	main
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 328              	main:
 329              	.LFB68:
  93:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 330              		.loc 1 93 1 view -0
 331              		.cfi_startproc
 332              		@ Volatile: function does not return.
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335 0000 08B5     		push	{r3, lr}
 336              	.LCFI7:
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 3, -8
 339              		.cfi_offset 14, -4
 101:Core/Src/main.c **** 
 340              		.loc 1 101 3 view .LVU85
 341 0002 FFF7FEFF 		bl	HAL_Init
 342              	.LVL14:
 108:Core/Src/main.c **** 
 343              		.loc 1 108 3 view .LVU86
 344 0006 FFF7FEFF 		bl	SystemClock_Config
 345              	.LVL15:
 115:Core/Src/main.c ****   MX_TIM3_Init();
 346              		.loc 1 115 3 view .LVU87
 347 000a FFF7FEFF 		bl	MX_GPIO_Init
 348              	.LVL16:
 116:Core/Src/main.c ****   MX_USART2_UART_Init();
 349              		.loc 1 116 3 view .LVU88
 350 000e FFF7FEFF 		bl	MX_TIM3_Init
 351              	.LVL17:
 117:Core/Src/main.c ****   
 352              		.loc 1 117 3 view .LVU89
 353 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 354              	.LVL18:
 122:Core/Src/main.c ****   eMBMasterInit(MB_RTU, &huart2, 19200, &htim3);
 355              		.loc 1 122 3 view .LVU90
 356 0016 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 357              	.LVL19:
 123:Core/Src/main.c ****   eMBMasterEnable();
 358              		.loc 1 123 3 view .LVU91
 359 001a 134B     		ldr	r3, .L24
 360 001c 4FF49642 		mov	r2, #19200
 361 0020 1249     		ldr	r1, .L24+4
 362 0022 0020     		movs	r0, #0
 363 0024 FFF7FEFF 		bl	eMBMasterInit
 364              	.LVL20:
 124:Core/Src/main.c **** 
 365              		.loc 1 124 3 view .LVU92
 366 0028 FFF7FEFF 		bl	eMBMasterEnable
 367              	.LVL21:
 368              	.L21:
 130:Core/Src/main.c ****   {
 369              		.loc 1 130 3 view .LVU93
 132:Core/Src/main.c ****     if(HAL_GetTick() - tick > 1000){
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 16


 370              		.loc 1 132 5 view .LVU94
 371 002c FFF7FEFF 		bl	eMBMasterPoll
 372              	.LVL22:
 133:Core/Src/main.c ****       // printf("Hello\n"); // test usb
 373              		.loc 1 133 5 view .LVU95
 133:Core/Src/main.c ****       // printf("Hello\n"); // test usb
 374              		.loc 1 133 8 is_stmt 0 view .LVU96
 375 0030 FFF7FEFF 		bl	HAL_GetTick
 376              	.LVL23:
 133:Core/Src/main.c ****       // printf("Hello\n"); // test usb
 377              		.loc 1 133 22 view .LVU97
 378 0034 0E4B     		ldr	r3, .L24+8
 379 0036 1B68     		ldr	r3, [r3]
 380 0038 C01A     		subs	r0, r0, r3
 133:Core/Src/main.c ****       // printf("Hello\n"); // test usb
 381              		.loc 1 133 7 view .LVU98
 382 003a B0F57A7F 		cmp	r0, #1000
 383 003e F5D9     		bls	.L21
 137:Core/Src/main.c ****       printf("data = %d\n", usMRegHoldBuf[0][0]);
 384              		.loc 1 137 7 is_stmt 1 view .LVU99
 137:Core/Src/main.c ****       printf("data = %d\n", usMRegHoldBuf[0][0]);
 385              		.loc 1 137 30 is_stmt 0 view .LVU100
 386 0040 6423     		movs	r3, #100
 387 0042 0222     		movs	r2, #2
 388 0044 0021     		movs	r1, #0
 389 0046 0120     		movs	r0, #1
 390 0048 FFF7FEFF 		bl	eMBMasterReqReadHoldingRegister
 391              	.LVL24:
 392 004c 0146     		mov	r1, r0
 137:Core/Src/main.c ****       printf("data = %d\n", usMRegHoldBuf[0][0]);
 393              		.loc 1 137 7 view .LVU101
 394 004e 0948     		ldr	r0, .L24+12
 395 0050 FFF7FEFF 		bl	printf
 396              	.LVL25:
 138:Core/Src/main.c ****       tick = HAL_GetTick();
 397              		.loc 1 138 7 is_stmt 1 view .LVU102
 398 0054 084B     		ldr	r3, .L24+16
 399 0056 1988     		ldrh	r1, [r3]
 400 0058 0848     		ldr	r0, .L24+20
 401 005a FFF7FEFF 		bl	printf
 402              	.LVL26:
 139:Core/Src/main.c **** 
 403              		.loc 1 139 7 view .LVU103
 139:Core/Src/main.c **** 
 404              		.loc 1 139 14 is_stmt 0 view .LVU104
 405 005e FFF7FEFF 		bl	HAL_GetTick
 406              	.LVL27:
 139:Core/Src/main.c **** 
 407              		.loc 1 139 12 view .LVU105
 408 0062 034B     		ldr	r3, .L24+8
 409 0064 1860     		str	r0, [r3]
 410 0066 E1E7     		b	.L21
 411              	.L25:
 412              		.align	2
 413              	.L24:
 414 0068 00000000 		.word	htim3
 415 006c 00000000 		.word	huart2
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 17


 416 0070 00000000 		.word	.LANCHOR0
 417 0074 00000000 		.word	.LC0
 418 0078 00000000 		.word	usMRegHoldBuf
 419 007c 0C000000 		.word	.LC1
 420              		.cfi_endproc
 421              	.LFE68:
 423              		.global	hiwdg
 424              		.global	tick
 425              		.section	.bss.hiwdg,"aw",%nobits
 426              		.align	2
 429              	hiwdg:
 430 0000 00000000 		.space	12
 430      00000000 
 430      00000000 
 431              		.section	.bss.tick,"aw",%nobits
 432              		.align	2
 433              		.set	.LANCHOR0,. + 0
 436              	tick:
 437 0000 00000000 		.space	4
 438              		.text
 439              	.Letext0:
 440              		.file 3 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
 441              		.file 4 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 442              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 443              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 444              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 445              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 446              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 447              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_iwdg.h"
 448              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 449              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 450              		.file 13 "Core/Inc/usart.h"
 451              		.file 14 "Core/Inc/tim.h"
 452              		.file 15 "FreeModbus/port/port.h"
 453              		.file 16 "FreeModbus/include/mb.h"
 454              		.file 17 "FreeModbus/app/user_mb_app_m.h"
 455              		.file 18 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\errno.h"
 456              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 457              		.file 20 "Core/Inc/usb_device.h"
 458              		.file 21 "FreeModbus/include/mb_m.h"
 459              		.file 22 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\stdio.h"
 460              		.file 23 "<built-in>"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s:74     .text.MX_GPIO_Init:0000002c $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s:79     .text._write:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s:85     .text._write:00000000 _write
C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s:135    .text.Error_Handler:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s:141    .text.Error_Handler:00000000 Error_Handler
C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s:173    .text.SystemClock_Config:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s:179    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s:315    .rodata.main.str1.4:00000000 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s:322    .text.main:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s:328    .text.main:00000000 main
C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s:414    .text.main:00000068 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s:429    .bss.hiwdg:00000000 hiwdg
C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s:436    .bss.tick:00000000 tick
C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s:426    .bss.hiwdg:00000000 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccysec7q.s:432    .bss.tick:00000000 $d

UNDEFINED SYMBOLS
CDC_Transmit_FS
__errno
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_TIM3_Init
MX_USART2_UART_Init
MX_USB_DEVICE_Init
eMBMasterInit
eMBMasterEnable
eMBMasterPoll
HAL_GetTick
eMBMasterReqReadHoldingRegister
printf
htim3
huart2
usMRegHoldBuf
