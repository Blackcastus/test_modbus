ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_hal_pwr.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWR_OverloadWfe,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	PWR_OverloadWfe:
  24              	.LFB65:
  25              		.file 1 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Dri
   1:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
   2:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   ******************************************************************************
   3:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @file    stm32f1xx_hal_pwr.c
   4:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @author  MCD Application Team
   5:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief   PWR HAL module driver.
   6:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *
   7:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *          This file provides firmware functions to manage the following
   8:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   9:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *           + Initialization/de-initialization functions
  10:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *           + Peripheral Control functions 
  11:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *
  12:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   ******************************************************************************
  13:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @attention
  14:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *
  15:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  16:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * All rights reserved.</center></h2>
  17:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *
  18:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  19:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * the "License"; You may not use this file except in compliance with the
  20:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * License. You may obtain a copy of the License at:
  21:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *                        opensource.org/licenses/BSD-3-Clause
  22:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *
  23:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   ******************************************************************************
  24:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
  25:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
  26:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /* Includes ------------------------------------------------------------------*/
  27:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #include "stm32f1xx_hal.h"
  28:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
  29:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /** @addtogroup STM32F1xx_HAL_Driver
  30:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @{
  31:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
  32:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
  33:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /** @defgroup PWR PWR
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 2


  34:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief    PWR HAL module driver
  35:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @{
  36:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
  37:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
  38:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #ifdef HAL_PWR_MODULE_ENABLED
  39:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
  40:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /* Private typedef -----------------------------------------------------------*/
  41:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /* Private define ------------------------------------------------------------*/
  42:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
  43:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /** @defgroup PWR_Private_Constants PWR Private Constants
  44:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @{
  45:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
  46:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   
  47:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /** @defgroup PWR_PVD_Mode_Mask PWR PVD Mode Mask
  48:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @{
  49:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */ 
  50:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #define PVD_MODE_IT               0x00010000U
  51:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #define PVD_MODE_EVT              0x00020000U
  52:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #define PVD_RISING_EDGE           0x00000001U
  53:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #define PVD_FALLING_EDGE          0x00000002U
  54:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
  55:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @}
  56:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
  57:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
  58:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
  59:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /** @defgroup PWR_register_alias_address PWR Register alias address
  60:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @{
  61:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */ 
  62:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /* ------------- PWR registers bit address in the alias region ---------------*/
  63:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #define PWR_OFFSET               (PWR_BASE - PERIPH_BASE)
  64:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #define PWR_CR_OFFSET            0x00U
  65:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #define PWR_CSR_OFFSET           0x04U
  66:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #define PWR_CR_OFFSET_BB         (PWR_OFFSET + PWR_CR_OFFSET)
  67:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #define PWR_CSR_OFFSET_BB        (PWR_OFFSET + PWR_CSR_OFFSET)
  68:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
  69:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @}
  70:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
  71:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****    
  72:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /** @defgroup PWR_CR_register_alias PWR CR Register alias address
  73:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @{
  74:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */  
  75:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /* --- CR Register ---*/
  76:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /* Alias word address of LPSDSR bit */
  77:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #define LPSDSR_BIT_NUMBER        PWR_CR_LPDS_Pos
  78:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #define CR_LPSDSR_BB             ((uint32_t)(PERIPH_BB_BASE + (PWR_CR_OFFSET_BB * 32U) + (LPSDSR_BI
  79:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
  80:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /* Alias word address of DBP bit */
  81:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #define DBP_BIT_NUMBER            PWR_CR_DBP_Pos
  82:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #define CR_DBP_BB                ((uint32_t)(PERIPH_BB_BASE + (PWR_CR_OFFSET_BB * 32U) + (DBP_BIT_N
  83:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
  84:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /* Alias word address of PVDE bit */
  85:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #define PVDE_BIT_NUMBER           PWR_CR_PVDE_Pos
  86:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #define CR_PVDE_BB               ((uint32_t)(PERIPH_BB_BASE + (PWR_CR_OFFSET_BB * 32U) + (PVDE_BIT_
  87:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
  88:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
  89:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @}
  90:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 3


  91:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
  92:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /** @defgroup PWR_CSR_register_alias PWR CSR Register alias address
  93:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @{
  94:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
  95:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
  96:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /* --- CSR Register ---*/
  97:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /* Alias word address of EWUP1 bit */
  98:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #define CSR_EWUP_BB(VAL)         ((uint32_t)(PERIPH_BB_BASE + (PWR_CSR_OFFSET_BB * 32U) + (POSITION
  99:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 100:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @}
 101:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 102:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   
 103:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 104:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @}
 105:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 106:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 107:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /* Private variables ---------------------------------------------------------*/
 108:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /* Private function prototypes -----------------------------------------------*/
 109:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /** @defgroup PWR_Private_Functions PWR Private Functions
 110:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****  * brief   WFE cortex command overloaded for HAL_PWR_EnterSTOPMode usage only (see Workaround secti
 111:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****  * @{
 112:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****  */
 113:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** static void PWR_OverloadWfe(void);
 114:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 115:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /* Private functions ---------------------------------------------------------*/
 116:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** __NOINLINE
 117:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** static void PWR_OverloadWfe(void)
 118:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
  26              		.loc 1 118 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 119:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   __asm volatile( "wfe" );
  31              		.loc 1 119 3 view .LVU1
  32              		.syntax unified
  33              	@ 119 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver
  34 0000 20BF     		wfe
  35              	@ 0 "" 2
 120:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   __asm volatile( "nop" );
  36              		.loc 1 120 3 view .LVU2
  37              	@ 120 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver
  38 0002 00BF     		nop
  39              	@ 0 "" 2
 121:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
  40              		.loc 1 121 1 is_stmt 0 view .LVU3
  41              		.thumb
  42              		.syntax unified
  43 0004 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE65:
  47              		.section	.text.HAL_PWR_DeInit,"ax",%progbits
  48              		.align	1
  49              		.global	HAL_PWR_DeInit
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 4


  54              	HAL_PWR_DeInit:
  55              	.LFB66:
 122:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 123:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 124:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @}
 125:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 126:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 127:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 128:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions PWR Exported Functions
 129:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @{
 130:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 131:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 132:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group1 Initialization and de-initialization functions 
 133:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *  @brief   Initialization and de-initialization functions
 134:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *
 135:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** @verbatim
 136:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****  ===============================================================================
 137:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****               ##### Initialization and de-initialization functions #####
 138:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****  ===============================================================================
 139:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     [..]
 140:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       After reset, the backup domain (RTC registers, RTC backup data
 141:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       registers) is protected against possible unwanted
 142:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       write accesses.
 143:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       To enable access to the RTC Domain and RTC registers, proceed as follows:
 144:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****         (+) Enable the Power Controller (PWR) APB1 interface clock using the
 145:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****             __HAL_RCC_PWR_CLK_ENABLE() macro.
 146:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****         (+) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
 147:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 148:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** @endverbatim
 149:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @{
 150:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 151:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 152:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 153:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief  Deinitializes the PWR peripheral registers to their default reset values.  
 154:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @retval None
 155:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 156:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** void HAL_PWR_DeInit(void)
 157:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
  56              		.loc 1 157 1 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
 158:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   __HAL_RCC_PWR_FORCE_RESET();
  61              		.loc 1 158 3 view .LVU5
  62 0000 044B     		ldr	r3, .L3
  63 0002 1A69     		ldr	r2, [r3, #16]
  64 0004 42F08052 		orr	r2, r2, #268435456
  65 0008 1A61     		str	r2, [r3, #16]
 159:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   __HAL_RCC_PWR_RELEASE_RESET();
  66              		.loc 1 159 3 view .LVU6
  67 000a 1A69     		ldr	r2, [r3, #16]
  68 000c 22F08052 		bic	r2, r2, #268435456
  69 0010 1A61     		str	r2, [r3, #16]
 160:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
  70              		.loc 1 160 1 is_stmt 0 view .LVU7
  71 0012 7047     		bx	lr
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 5


  72              	.L4:
  73              		.align	2
  74              	.L3:
  75 0014 00100240 		.word	1073876992
  76              		.cfi_endproc
  77              	.LFE66:
  79              		.section	.text.HAL_PWR_EnableBkUpAccess,"ax",%progbits
  80              		.align	1
  81              		.global	HAL_PWR_EnableBkUpAccess
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  86              	HAL_PWR_EnableBkUpAccess:
  87              	.LFB67:
 161:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 162:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 163:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief  Enables access to the backup domain (RTC registers, RTC
 164:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *         backup data registers ).
 165:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @note   If the HSE divided by 128 is used as the RTC clock, the
 166:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 167:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @retval None
 168:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 169:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** void HAL_PWR_EnableBkUpAccess(void)
 170:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
  88              		.loc 1 170 1 is_stmt 1 view -0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
 171:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Enable access to RTC and backup registers */
 172:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)ENABLE;
  93              		.loc 1 172 3 view .LVU9
  94              		.loc 1 172 32 is_stmt 0 view .LVU10
  95 0000 014B     		ldr	r3, .L6
  96 0002 0122     		movs	r2, #1
  97 0004 1A62     		str	r2, [r3, #32]
 173:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
  98              		.loc 1 173 1 view .LVU11
  99 0006 7047     		bx	lr
 100              	.L7:
 101              		.align	2
 102              	.L6:
 103 0008 00000E42 		.word	1108213760
 104              		.cfi_endproc
 105              	.LFE67:
 107              		.section	.text.HAL_PWR_DisableBkUpAccess,"ax",%progbits
 108              		.align	1
 109              		.global	HAL_PWR_DisableBkUpAccess
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 114              	HAL_PWR_DisableBkUpAccess:
 115              	.LFB68:
 174:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 175:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 176:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief  Disables access to the backup domain (RTC registers, RTC
 177:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *         backup data registers).
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 6


 178:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @note   If the HSE divided by 128 is used as the RTC clock, the
 179:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 180:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @retval None
 181:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 182:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** void HAL_PWR_DisableBkUpAccess(void)
 183:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
 116              		.loc 1 183 1 is_stmt 1 view -0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 184:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Disable access to RTC and backup registers */
 185:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)DISABLE;
 121              		.loc 1 185 3 view .LVU13
 122              		.loc 1 185 32 is_stmt 0 view .LVU14
 123 0000 014B     		ldr	r3, .L9
 124 0002 0022     		movs	r2, #0
 125 0004 1A62     		str	r2, [r3, #32]
 186:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
 126              		.loc 1 186 1 view .LVU15
 127 0006 7047     		bx	lr
 128              	.L10:
 129              		.align	2
 130              	.L9:
 131 0008 00000E42 		.word	1108213760
 132              		.cfi_endproc
 133              	.LFE68:
 135              		.section	.text.HAL_PWR_ConfigPVD,"ax",%progbits
 136              		.align	1
 137              		.global	HAL_PWR_ConfigPVD
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	HAL_PWR_ConfigPVD:
 143              	.LVL0:
 144              	.LFB69:
 187:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 188:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 189:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @}
 190:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 191:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 192:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group2 Peripheral Control functions 
 193:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief    Low Power modes configuration functions
 194:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *
 195:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** @verbatim
 196:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****  ===============================================================================
 197:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****                  ##### Peripheral Control functions #####
 198:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****  ===============================================================================
 199:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****      
 200:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     *** PVD configuration ***
 201:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     =========================
 202:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     [..]
 203:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       (+) The PVD is used to monitor the VDD power supply by comparing it to a
 204:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****           threshold selected by the PVD Level (PLS[2:0] bits in the PWR_CR).
 205:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 206:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       (+) A PVDO flag is available to indicate if VDD/VDDA is higher or lower
 207:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****           than the PVD threshold. This event is internally connected to the EXTI
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 7


 208:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****           line16 and can generate an interrupt if enabled. This is done through
 209:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****           __HAL_PVD_EXTI_ENABLE_IT() macro.
 210:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       (+) The PVD is stopped in Standby mode.
 211:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 212:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     *** WakeUp pin configuration ***
 213:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     ================================
 214:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     [..]
 215:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       (+) WakeUp pin is used to wake up the system from Standby mode. This pin is
 216:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****           forced in input pull-down configuration and is active on rising edges.
 217:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       (+) There is one WakeUp pin:
 218:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****           WakeUp Pin 1 on PA.00.
 219:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 220:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     [..]
 221:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 222:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     *** Low Power modes configuration ***
 223:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     =====================================
 224:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****      [..]
 225:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       The device features 3 low-power modes:
 226:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       (+) Sleep mode: CPU clock off, all peripherals including Cortex-M3 core peripherals like 
 227:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****                       NVIC, SysTick, etc. are kept running
 228:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       (+) Stop mode: All clocks are stopped
 229:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       (+) Standby mode: 1.8V domain powered off
 230:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   
 231:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   
 232:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****    *** Sleep mode ***
 233:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****    ==================
 234:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     [..]
 235:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       (+) Entry:
 236:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****           The Sleep mode is entered by using the HAL_PWR_EnterSLEEPMode(PWR_MAINREGULATOR_ON, PWR_S
 237:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****               functions with
 238:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 239:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 240:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****      
 241:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       (+) Exit:
 242:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****         (++) WFI entry mode, Any peripheral interrupt acknowledged by the nested vectored interrupt
 243:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****              controller (NVIC) can wake up the device from Sleep mode.
 244:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****         (++) WFE entry mode, Any wakeup event can wake up the device from Sleep mode.
 245:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****            (+++) Any peripheral interrupt w/o NVIC configuration & SEVONPEND bit set in the Cortex 
 246:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****            (+++) Any EXTI Line (Internal or External) configured in Event mode
 247:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 248:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****    *** Stop mode ***
 249:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****    =================
 250:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     [..]
 251:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       The Stop mode is based on the Cortex-M3 deepsleep mode combined with peripheral
 252:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       clock gating. The voltage regulator can be configured either in normal or low-power mode.
 253:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       In Stop mode, all clocks in the 1.8 V domain are stopped, the PLL, the HSI and the HSE RC 
 254:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       oscillators are disabled. SRAM and register contents are preserved.
 255:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       In Stop mode, all I/O pins keep the same state as in Run mode.
 256:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 257:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       (+) Entry:
 258:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****            The Stop mode is entered using the HAL_PWR_EnterSTOPMode(PWR_REGULATOR_VALUE, PWR_SLEEPE
 259:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****              function with:
 260:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****           (++) PWR_REGULATOR_VALUE= PWR_MAINREGULATOR_ON: Main regulator ON.
 261:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****           (++) PWR_REGULATOR_VALUE= PWR_LOWPOWERREGULATOR_ON: Low Power regulator ON.
 262:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFx= PWR_SLEEPENTRY_WFI: enter STOP mode with WFI instruction
 263:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFx= PWR_SLEEPENTRY_WFE: enter STOP mode with WFE instruction
 264:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       (+) Exit:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 8


 265:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****           (++) WFI entry mode, Any EXTI Line (Internal or External) configured in Interrupt mode wi
 266:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****           (++) WFE entry mode, Any EXTI Line (Internal or External) configured in Event mode.
 267:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 268:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****    *** Standby mode ***
 269:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****    ====================
 270:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****      [..]
 271:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       The Standby mode allows to achieve the lowest power consumption. It is based on the
 272:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       Cortex-M3 deepsleep mode, with the voltage regulator disabled. The 1.8 V domain is 
 273:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       consequently powered off. The PLL, the HSI oscillator and the HSE oscillator are also 
 274:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       switched off. SRAM and register contents are lost except for registers in the Backup domain 
 275:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       and Standby circuitry
 276:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       
 277:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       (+) Entry:
 278:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****         (++) The Standby mode is entered using the HAL_PWR_EnterSTANDBYMode() function.
 279:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****       (+) Exit:
 280:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****         (++) WKUP pin rising edge, RTC alarm event rising edge, external Reset in 
 281:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****              NRSTpin, IWDG Reset
 282:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 283:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****    *** Auto-wakeup (AWU) from low-power mode ***
 284:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****        =============================================
 285:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****        [..]
 286:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****         
 287:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****        (+) The MCU can be woken up from low-power mode by an RTC Alarm event, 
 288:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****            without depending on an external interrupt (Auto-wakeup mode).
 289:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****    
 290:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****        (+) RTC auto-wakeup (AWU) from the Stop and Standby modes
 291:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 292:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****            (++) To wake up from the Stop mode with an RTC alarm event, it is necessary to 
 293:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****                 configure the RTC to generate the RTC alarm using the HAL_RTC_SetAlarm_IT() functio
 294:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 295:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****    *** PWR Workarounds linked to Silicon Limitation ***
 296:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****        ====================================================
 297:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****        [..]
 298:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****        Below the list of all silicon limitations known on STM32F1xx prouct.
 299:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 300:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****        (#)Workarounds Implemented inside PWR HAL Driver
 301:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****           (##)Debugging Stop mode with WFE entry - overloaded the WFE by an internal function    
 302:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****         
 303:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** @endverbatim
 304:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @{
 305:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 306:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 307:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 308:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief  Configures the voltage threshold detected by the Power Voltage Detector(PVD).
 309:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @param  sConfigPVD: pointer to an PWR_PVDTypeDef structure that contains the configuration
 310:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *         information for the PVD.
 311:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @note   Refer to the electrical characteristics of your device datasheet for
 312:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *         more details about the voltage threshold corresponding to each
 313:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *         detection level.
 314:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @retval None
 315:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 316:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** void HAL_PWR_ConfigPVD(PWR_PVDTypeDef *sConfigPVD)
 317:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
 145              		.loc 1 317 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 9


 149              		@ link register save eliminated.
 318:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Check the parameters */
 319:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(sConfigPVD->PVDLevel));
 150              		.loc 1 319 3 view .LVU17
 320:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 151              		.loc 1 320 3 view .LVU18
 321:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 322:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Set PLS[7:5] bits according to PVDLevel value */
 323:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, PWR_CR_PLS, sConfigPVD->PVDLevel);
 152              		.loc 1 323 3 view .LVU19
 153 0000 1E4A     		ldr	r2, .L16
 154 0002 1368     		ldr	r3, [r2]
 155 0004 23F0E003 		bic	r3, r3, #224
 156 0008 0168     		ldr	r1, [r0]
 157 000a 0B43     		orrs	r3, r3, r1
 158 000c 1360     		str	r3, [r2]
 324:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   
 325:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 326:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_EVENT();
 159              		.loc 1 326 3 view .LVU20
 160 000e 1C4B     		ldr	r3, .L16+4
 161 0010 5A68     		ldr	r2, [r3, #4]
 162 0012 22F48032 		bic	r2, r2, #65536
 163 0016 5A60     		str	r2, [r3, #4]
 327:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_IT();
 164              		.loc 1 327 3 view .LVU21
 165 0018 1A68     		ldr	r2, [r3]
 166 001a 22F48032 		bic	r2, r2, #65536
 167 001e 1A60     		str	r2, [r3]
 328:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE(); 
 168              		.loc 1 328 3 view .LVU22
 169 0020 DA68     		ldr	r2, [r3, #12]
 170 0022 22F48032 		bic	r2, r2, #65536
 171 0026 DA60     		str	r2, [r3, #12]
 329:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE();
 172              		.loc 1 329 3 view .LVU23
 173 0028 9A68     		ldr	r2, [r3, #8]
 174 002a 22F48032 		bic	r2, r2, #65536
 175 002e 9A60     		str	r2, [r3, #8]
 330:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 331:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Configure interrupt mode */
 332:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_IT) == PVD_MODE_IT)
 176              		.loc 1 332 3 view .LVU24
 177              		.loc 1 332 17 is_stmt 0 view .LVU25
 178 0030 4368     		ldr	r3, [r0, #4]
 179              		.loc 1 332 5 view .LVU26
 180 0032 13F4803F 		tst	r3, #65536
 181 0036 04D0     		beq	.L12
 333:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   {
 334:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_IT();
 182              		.loc 1 334 5 is_stmt 1 view .LVU27
 183 0038 114A     		ldr	r2, .L16+4
 184 003a 1368     		ldr	r3, [r2]
 185 003c 43F48033 		orr	r3, r3, #65536
 186 0040 1360     		str	r3, [r2]
 187              	.L12:
 335:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   }
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 10


 336:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   
 337:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Configure event mode */
 338:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_EVT) == PVD_MODE_EVT)
 188              		.loc 1 338 3 view .LVU28
 189              		.loc 1 338 17 is_stmt 0 view .LVU29
 190 0042 4368     		ldr	r3, [r0, #4]
 191              		.loc 1 338 5 view .LVU30
 192 0044 13F4003F 		tst	r3, #131072
 193 0048 04D0     		beq	.L13
 339:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   {
 340:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_EVENT();
 194              		.loc 1 340 5 is_stmt 1 view .LVU31
 195 004a 0D4A     		ldr	r2, .L16+4
 196 004c 5368     		ldr	r3, [r2, #4]
 197 004e 43F48033 		orr	r3, r3, #65536
 198 0052 5360     		str	r3, [r2, #4]
 199              	.L13:
 341:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   }
 342:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   
 343:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Configure the edge */
 344:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_RISING_EDGE) == PVD_RISING_EDGE)
 200              		.loc 1 344 3 view .LVU32
 201              		.loc 1 344 17 is_stmt 0 view .LVU33
 202 0054 4368     		ldr	r3, [r0, #4]
 203              		.loc 1 344 5 view .LVU34
 204 0056 13F0010F 		tst	r3, #1
 205 005a 04D0     		beq	.L14
 345:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   {
 346:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE();
 206              		.loc 1 346 5 is_stmt 1 view .LVU35
 207 005c 084A     		ldr	r2, .L16+4
 208 005e 9368     		ldr	r3, [r2, #8]
 209 0060 43F48033 		orr	r3, r3, #65536
 210 0064 9360     		str	r3, [r2, #8]
 211              	.L14:
 347:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   }
 348:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   
 349:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_FALLING_EDGE) == PVD_FALLING_EDGE)
 212              		.loc 1 349 3 view .LVU36
 213              		.loc 1 349 17 is_stmt 0 view .LVU37
 214 0066 4368     		ldr	r3, [r0, #4]
 215              		.loc 1 349 5 view .LVU38
 216 0068 13F0020F 		tst	r3, #2
 217 006c 04D0     		beq	.L11
 350:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   {
 351:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE();
 218              		.loc 1 351 5 is_stmt 1 view .LVU39
 219 006e 044A     		ldr	r2, .L16+4
 220 0070 D368     		ldr	r3, [r2, #12]
 221 0072 43F48033 		orr	r3, r3, #65536
 222 0076 D360     		str	r3, [r2, #12]
 223              	.L11:
 352:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   }
 353:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
 224              		.loc 1 353 1 is_stmt 0 view .LVU40
 225 0078 7047     		bx	lr
 226              	.L17:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 11


 227 007a 00BF     		.align	2
 228              	.L16:
 229 007c 00700040 		.word	1073770496
 230 0080 00040140 		.word	1073808384
 231              		.cfi_endproc
 232              	.LFE69:
 234              		.section	.text.HAL_PWR_EnablePVD,"ax",%progbits
 235              		.align	1
 236              		.global	HAL_PWR_EnablePVD
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 241              	HAL_PWR_EnablePVD:
 242              	.LFB70:
 354:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 355:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 356:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief  Enables the Power Voltage Detector(PVD).
 357:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @retval None
 358:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 359:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** void HAL_PWR_EnablePVD(void)
 360:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
 243              		.loc 1 360 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 361:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Enable the power voltage detector */
 362:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)ENABLE;
 248              		.loc 1 362 3 view .LVU42
 249              		.loc 1 362 33 is_stmt 0 view .LVU43
 250 0000 014B     		ldr	r3, .L19
 251 0002 0122     		movs	r2, #1
 252 0004 1A61     		str	r2, [r3, #16]
 363:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
 253              		.loc 1 363 1 view .LVU44
 254 0006 7047     		bx	lr
 255              	.L20:
 256              		.align	2
 257              	.L19:
 258 0008 00000E42 		.word	1108213760
 259              		.cfi_endproc
 260              	.LFE70:
 262              		.section	.text.HAL_PWR_DisablePVD,"ax",%progbits
 263              		.align	1
 264              		.global	HAL_PWR_DisablePVD
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 269              	HAL_PWR_DisablePVD:
 270              	.LFB71:
 364:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 365:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 366:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief  Disables the Power Voltage Detector(PVD).
 367:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @retval None
 368:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 369:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** void HAL_PWR_DisablePVD(void)
 370:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 12


 271              		.loc 1 370 1 is_stmt 1 view -0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 371:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Disable the power voltage detector */
 372:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)DISABLE;
 276              		.loc 1 372 3 view .LVU46
 277              		.loc 1 372 33 is_stmt 0 view .LVU47
 278 0000 014B     		ldr	r3, .L22
 279 0002 0022     		movs	r2, #0
 280 0004 1A61     		str	r2, [r3, #16]
 373:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
 281              		.loc 1 373 1 view .LVU48
 282 0006 7047     		bx	lr
 283              	.L23:
 284              		.align	2
 285              	.L22:
 286 0008 00000E42 		.word	1108213760
 287              		.cfi_endproc
 288              	.LFE71:
 290              		.section	.text.HAL_PWR_EnableWakeUpPin,"ax",%progbits
 291              		.align	1
 292              		.global	HAL_PWR_EnableWakeUpPin
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 297              	HAL_PWR_EnableWakeUpPin:
 298              	.LVL1:
 299              	.LFB72:
 374:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 375:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 376:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief Enables the WakeUp PINx functionality.
 377:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @param WakeUpPinx: Specifies the Power Wake-Up pin to enable.
 378:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *        This parameter can be one of the following values:
 379:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
 380:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @retval None
 381:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 382:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** void HAL_PWR_EnableWakeUpPin(uint32_t WakeUpPinx)
 383:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
 300              		.loc 1 383 1 is_stmt 1 view -0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 384:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Check the parameter */
 385:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 305              		.loc 1 385 3 view .LVU50
 386:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Enable the EWUPx pin */
 387:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *(__IO uint32_t *) CSR_EWUP_BB(WakeUpPinx) = (uint32_t)ENABLE;
 306              		.loc 1 387 3 view .LVU51
 307              	.LBB6:
 308              	.LBI6:
 309              		.file 2 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include/cms
   1:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 13


   4:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.0.4
   5:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  * @date     09. April 2018
   6:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /*
   8:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  *
  10:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  *
  12:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  *
  16:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  *
  18:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
  24:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  25:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  28:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  34:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef __has_builtin
  36:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  38:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  39:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  41:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                                  __asm
  42:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  43:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  44:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                               inline
  45:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  46:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  49:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif                                           
  52:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  55:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  56:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  58:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  59:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 14


  61:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  62:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  64:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  67:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  70:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  78:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  86:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  94:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 102:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 110:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
 111:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 113:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __RESTRICT
 114:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 116:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 117:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 15


 118:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   @{
 122:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 123:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 124:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 125:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 129:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 131:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 133:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 134:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 135:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 136:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 140:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 142:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 144:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 145:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 146:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 147:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 148:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 150:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 151:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 153:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 154:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 155:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 157:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 158:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 159:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 160:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 162:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 165:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 166:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 168:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 169:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 170:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 172:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 173:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 174:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 16


 175:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 176:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 177:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 178:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 181:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 183:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 185:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 186:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 187:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 189:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 193:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 195:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 197:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 198:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 199:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 200:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 201:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 202:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 204:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 205:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 207:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 208:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 209:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 211:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 212:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 213:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 214:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 215:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 216:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 218:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 219:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 221:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 222:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 223:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 225:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 226:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 227:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 228:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 229:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 230:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 17


 232:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 233:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 235:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 236:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 237:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 239:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 240:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 241:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 242:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 243:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 246:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 247:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 249:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 250:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 251:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 253:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 254:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 255:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 256:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 258:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 261:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 262:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 264:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 265:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 266:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 268:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 269:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 270:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 271:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 272:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 273:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 277:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 279:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 281:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 282:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 283:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 285:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 18


 289:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 291:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 293:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 294:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 295:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 296:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 297:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 300:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 301:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 303:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 304:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 305:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 307:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 308:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 309:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 310:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 312:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 315:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 316:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 318:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 319:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 320:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 322:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 323:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 324:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 325:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 326:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 327:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 331:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 333:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 335:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 336:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 337:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 339:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 343:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 345:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 19


 346:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 347:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 348:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 349:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 350:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 352:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               SP Register value
 355:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 356:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 358:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 359:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 360:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 362:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 363:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 364:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 365:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 366:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 370:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 372:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 374:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 375:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 376:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 377:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 378:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 379:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 381:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 382:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 384:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 385:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 386:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 388:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 389:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 390:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 391:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 393:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 396:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 397:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 399:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 400:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 401:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 20


 403:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 404:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 405:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 406:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 407:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 408:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 409:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 412:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 414:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 416:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 417:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 418:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 420:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 424:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 426:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 428:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 429:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 430:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 431:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 435:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 436:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 439:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 441:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 443:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 444:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 445:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 446:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 447:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 450:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 452:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 454:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 455:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 456:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 457:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 458:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 21


 460:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 461:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 463:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 464:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 465:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 467:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 468:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 469:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 470:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 472:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 475:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 476:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 478:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 479:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 480:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 482:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 483:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 484:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 485:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 486:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 487:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 488:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 491:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 493:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 495:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 496:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 497:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 499:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 503:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 505:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 507:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 508:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 509:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 510:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 511:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 516:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 22


 517:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 518:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 520:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 521:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 522:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 523:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 524:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 526:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 527:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 529:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 530:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 531:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 533:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 534:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 535:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 536:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 538:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 541:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 542:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 544:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 545:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 546:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 548:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 549:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 550:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 551:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 552:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 553:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 554:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 557:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 559:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 561:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 562:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 563:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 565:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 569:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 571:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 573:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 23


 574:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 575:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 579:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 580:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 583:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 584:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   mode.
 588:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   
 589:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 591:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 592:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 594:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 598:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 599:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 600:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return result;
 602:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 603:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 604:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 605:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 607:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 611:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 613:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 614:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 616:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 619:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 620:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 621:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return result;
 623:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 624:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 625:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 626:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 627:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 628:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 629:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 24


 631:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   mode.
 633:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   
 634:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 637:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 639:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 644:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 646:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 647:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 648:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 649:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 651:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 655:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 658:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 660:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 664:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 666:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 667:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 668:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 669:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 670:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 671:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   mode.
 675:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 676:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 678:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 679:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 681:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 685:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 686:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 687:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 25


 688:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return result;
 689:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 690:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 691:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 692:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 693:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 695:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 699:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 701:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 702:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 704:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 707:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 708:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 709:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return result;
 711:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 712:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 713:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 714:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 715:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 716:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 717:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   mode.
 721:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 722:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 725:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 727:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 732:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 734:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 735:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 736:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 737:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 739:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 743:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 26


 745:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 746:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 748:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 752:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 754:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 755:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 756:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 757:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 760:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 761:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 762:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 763:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 766:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 768:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 776:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 777:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 778:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 780:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 781:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 782:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(0U);
 783:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 784:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 785:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 786:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 787:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 788:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 789:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 792:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 794:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 27


 802:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 804:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 805:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 806:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 807:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 808:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 809:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 810:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 812:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 813:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 816:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   @{
 817:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** */
 818:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 819:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 827:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 831:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 832:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 833:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 834:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 836:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 838:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 839:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 842:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 844:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 845:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 846:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 847:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 850:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 852:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 853:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 854:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 855:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 857:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 28


 859:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 860:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 861:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 865:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 866:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 868:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 870:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 871:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 872:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 873:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 877:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 879:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 881:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 882:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 883:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 884:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 888:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 890:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 892:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 893:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 894:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 895:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 899:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 900:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 902:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 905:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 906:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 907:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return result;
 909:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 910:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 911:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 912:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 913:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 914:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 29


 916:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 918:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 919:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 921:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 922:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 923:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return result;
 925:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 926:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 927:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 928:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 929:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 933:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 934:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 936:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 939:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   int16_t result;
 940:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 941:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return result;
 943:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 944:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 945:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 946:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 947:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 948:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
 953:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 954:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 956:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   op2 %= 32U;
 957:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   if (op2 == 0U)
 958:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   {
 959:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****     return op1;
 960:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   }
 961:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 963:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 964:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 965:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 966:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Breakpoint
 967:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 972:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 30


 973:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 974:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 975:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 976:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 980:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 981:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 310              		.loc 2 981 31 view .LVU52
 311              	.LBB7:
 982:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 983:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 312              		.loc 2 983 3 view .LVU53
 984:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 985:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 313              		.loc 2 988 4 view .LVU54
 314              		.syntax unified
 315              	@ 988 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include/cmsis_
 316 0000 90FAA0F0 		rbit r0, r0
 317              	@ 0 "" 2
 318              	.LVL2:
 989:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 990:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 992:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   {
 995:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****     result <<= 1U;
 996:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****     result |= value & 1U;
 997:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****     s--;
 998:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   }
 999:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
1001:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h ****   return result;
 319              		.loc 2 1001 3 view .LVU55
 320              		.loc 2 1001 3 is_stmt 0 view .LVU56
 321              		.thumb
 322              		.syntax unified
 323              	.LBE7:
 324              	.LBE6:
 325              		.loc 1 387 22 view .LVU57
 326 0004 B0FA80F0 		clz	r0, r0
 327 0008 024B     		ldr	r3, .L25
 328 000a 0344     		add	r3, r3, r0
 329 000c 9B00     		lsls	r3, r3, #2
 330              		.loc 1 387 46 view .LVU58
 331 000e 0122     		movs	r2, #1
 332 0010 1A60     		str	r2, [r3]
 388:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
 333              		.loc 1 388 1 view .LVU59
 334 0012 7047     		bx	lr
 335              	.L26:
 336              		.align	2
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 31


 337              	.L25:
 338 0014 20808310 		.word	277053472
 339              		.cfi_endproc
 340              	.LFE72:
 342              		.section	.text.HAL_PWR_DisableWakeUpPin,"ax",%progbits
 343              		.align	1
 344              		.global	HAL_PWR_DisableWakeUpPin
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 349              	HAL_PWR_DisableWakeUpPin:
 350              	.LVL3:
 351              	.LFB73:
 389:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 390:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 391:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief Disables the WakeUp PINx functionality.
 392:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @param WakeUpPinx: Specifies the Power Wake-Up pin to disable.
 393:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *        This parameter can be one of the following values:
 394:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
 395:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @retval None
 396:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 397:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** void HAL_PWR_DisableWakeUpPin(uint32_t WakeUpPinx)
 398:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
 352              		.loc 1 398 1 is_stmt 1 view -0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 399:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Check the parameter */
 400:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 357              		.loc 1 400 3 view .LVU61
 401:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Disable the EWUPx pin */
 402:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *(__IO uint32_t *) CSR_EWUP_BB(WakeUpPinx) = (uint32_t)DISABLE;
 358              		.loc 1 402 3 view .LVU62
 359              	.LBB8:
 360              	.LBI8:
 981:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 361              		.loc 2 981 31 view .LVU63
 362              	.LBB9:
 983:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 363              		.loc 2 983 3 view .LVU64
 988:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 364              		.loc 2 988 4 view .LVU65
 365              		.syntax unified
 366              	@ 988 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include/cmsis_
 367 0000 90FAA0F0 		rbit r0, r0
 368              	@ 0 "" 2
 369              	.LVL4:
 370              		.loc 2 1001 3 view .LVU66
 371              		.loc 2 1001 3 is_stmt 0 view .LVU67
 372              		.thumb
 373              		.syntax unified
 374              	.LBE9:
 375              	.LBE8:
 376              		.loc 1 402 22 view .LVU68
 377 0004 B0FA80F0 		clz	r0, r0
 378 0008 024B     		ldr	r3, .L28
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 32


 379 000a 0344     		add	r3, r3, r0
 380 000c 9B00     		lsls	r3, r3, #2
 381              		.loc 1 402 46 view .LVU69
 382 000e 0022     		movs	r2, #0
 383 0010 1A60     		str	r2, [r3]
 403:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
 384              		.loc 1 403 1 view .LVU70
 385 0012 7047     		bx	lr
 386              	.L29:
 387              		.align	2
 388              	.L28:
 389 0014 20808310 		.word	277053472
 390              		.cfi_endproc
 391              	.LFE73:
 393              		.section	.text.HAL_PWR_EnterSLEEPMode,"ax",%progbits
 394              		.align	1
 395              		.global	HAL_PWR_EnterSLEEPMode
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 400              	HAL_PWR_EnterSLEEPMode:
 401              	.LVL5:
 402              	.LFB74:
 404:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 405:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 406:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief Enters Sleep mode.
 407:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @note  In Sleep mode, all I/O pins keep the same state as in Run mode.
 408:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @param Regulator: Regulator state as no effect in SLEEP mode -  allows to support portability f
 409:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @param SLEEPEntry: Specifies if SLEEP mode is entered with WFI or WFE instruction.
 410:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *           When WFI entry is used, tick interrupt have to be disabled if not desired as 
 411:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *           the interrupt wake up source.
 412:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *           This parameter can be one of the following values:
 413:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 414:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 415:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @retval None
 416:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 417:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** void HAL_PWR_EnterSLEEPMode(uint32_t Regulator, uint8_t SLEEPEntry)
 418:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
 403              		.loc 1 418 1 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 419:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Check the parameters */
 420:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* No check on Regulator because parameter not used in SLEEP mode */
 421:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Prevent unused argument(s) compilation warning */
 422:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   UNUSED(Regulator);
 408              		.loc 1 422 3 view .LVU72
 423:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 424:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 409              		.loc 1 424 3 view .LVU73
 425:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 426:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Clear SLEEPDEEP bit of Cortex System Control Register */
 427:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 410              		.loc 1 427 3 view .LVU74
 411 0000 064A     		ldr	r2, .L34
 412 0002 1369     		ldr	r3, [r2, #16]
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 33


 413 0004 23F00403 		bic	r3, r3, #4
 414 0008 1361     		str	r3, [r2, #16]
 428:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 429:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Select SLEEP mode entry -------------------------------------------------*/
 430:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   if(SLEEPEntry == PWR_SLEEPENTRY_WFI)
 415              		.loc 1 430 3 view .LVU75
 416              		.loc 1 430 5 is_stmt 0 view .LVU76
 417 000a 0129     		cmp	r1, #1
 418 000c 03D0     		beq	.L33
 431:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   {
 432:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 433:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     __WFI();
 434:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   }
 435:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   else
 436:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   {
 437:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     /* Request Wait For Event */
 438:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     __SEV();
 419              		.loc 1 438 5 is_stmt 1 view .LVU77
 420              		.syntax unified
 421              	@ 438 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver
 422 000e 40BF     		sev
 423              	@ 0 "" 2
 439:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     __WFE();
 424              		.loc 1 439 5 view .LVU78
 425              	@ 439 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver
 426 0010 20BF     		wfe
 427              	@ 0 "" 2
 440:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     __WFE();
 428              		.loc 1 440 5 view .LVU79
 429              	@ 440 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver
 430 0012 20BF     		wfe
 431              	@ 0 "" 2
 441:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   }
 442:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
 432              		.loc 1 442 1 is_stmt 0 view .LVU80
 433              		.thumb
 434              		.syntax unified
 435 0014 7047     		bx	lr
 436              	.L33:
 433:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   }
 437              		.loc 1 433 5 is_stmt 1 view .LVU81
 438              		.syntax unified
 439              	@ 433 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver
 440 0016 30BF     		wfi
 441              	@ 0 "" 2
 442              		.thumb
 443              		.syntax unified
 444 0018 7047     		bx	lr
 445              	.L35:
 446 001a 00BF     		.align	2
 447              	.L34:
 448 001c 00ED00E0 		.word	-536810240
 449              		.cfi_endproc
 450              	.LFE74:
 452              		.section	.text.HAL_PWR_EnterSTOPMode,"ax",%progbits
 453              		.align	1
 454              		.global	HAL_PWR_EnterSTOPMode
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 34


 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 459              	HAL_PWR_EnterSTOPMode:
 460              	.LVL6:
 461              	.LFB75:
 443:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 444:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 445:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief Enters Stop mode. 
 446:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @note  In Stop mode, all I/O pins keep the same state as in Run mode.
 447:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @note  When exiting Stop mode by using an interrupt or a wakeup event,
 448:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *        HSI RC oscillator is selected as system clock.
 449:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @note  When the voltage regulator operates in low power mode, an additional
 450:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *         startup delay is incurred when waking up from Stop mode. 
 451:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *         By keeping the internal regulator ON during Stop mode, the consumption
 452:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *         is higher although the startup time is reduced.    
 453:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @param Regulator: Specifies the regulator state in Stop mode.
 454:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 455:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: Stop mode with regulator ON
 456:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: Stop mode with low power regulator ON
 457:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @param STOPEntry: Specifies if Stop mode in entered with WFI or WFE instruction.
 458:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 459:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFI: Enter Stop mode with WFI instruction
 460:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFE: Enter Stop mode with WFE instruction   
 461:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @retval None
 462:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 463:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** void HAL_PWR_EnterSTOPMode(uint32_t Regulator, uint8_t STOPEntry)
 464:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
 462              		.loc 1 464 1 view -0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 466              		.loc 1 464 1 is_stmt 0 view .LVU83
 467 0000 10B5     		push	{r4, lr}
 468              	.LCFI0:
 469              		.cfi_def_cfa_offset 8
 470              		.cfi_offset 4, -8
 471              		.cfi_offset 14, -4
 465:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Check the parameters */
 466:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 472              		.loc 1 466 3 is_stmt 1 view .LVU84
 467:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 473              		.loc 1 467 3 view .LVU85
 468:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 469:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Clear PDDS bit in PWR register to specify entering in STOP mode when CPU enter in Deepsleep */
 470:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   CLEAR_BIT(PWR->CR,  PWR_CR_PDDS);
 474              		.loc 1 470 3 view .LVU86
 475 0002 0F4A     		ldr	r2, .L40
 476 0004 1468     		ldr	r4, [r2]
 477 0006 24F00204 		bic	r4, r4, #2
 478 000a 1460     		str	r4, [r2]
 471:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 472:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Select the voltage regulator mode by setting LPDS bit in PWR register according to Regulator p
 473:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, PWR_CR_LPDS, Regulator);
 479              		.loc 1 473 3 view .LVU87
 480 000c 1368     		ldr	r3, [r2]
 481 000e 23F00103 		bic	r3, r3, #1
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 35


 482 0012 0343     		orrs	r3, r3, r0
 483 0014 1360     		str	r3, [r2]
 474:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 475:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 476:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 484              		.loc 1 476 3 view .LVU88
 485 0016 0B4A     		ldr	r2, .L40+4
 486 0018 1369     		ldr	r3, [r2, #16]
 487 001a 43F00403 		orr	r3, r3, #4
 488 001e 1361     		str	r3, [r2, #16]
 477:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 478:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Select Stop mode entry --------------------------------------------------*/
 479:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 489              		.loc 1 479 3 view .LVU89
 490              		.loc 1 479 5 is_stmt 0 view .LVU90
 491 0020 0129     		cmp	r1, #1
 492 0022 06D1     		bne	.L37
 480:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   {
 481:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 482:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     __WFI();
 493              		.loc 1 482 5 is_stmt 1 view .LVU91
 494              		.syntax unified
 495              	@ 482 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver
 496 0024 30BF     		wfi
 497              	@ 0 "" 2
 498              	.LVL7:
 499              		.thumb
 500              		.syntax unified
 501              	.L38:
 483:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   }
 484:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   else
 485:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   {
 486:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     /* Request Wait For Event */
 487:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     __SEV();
 488:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     PWR_OverloadWfe(); /* WFE redefine locally */
 489:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     PWR_OverloadWfe(); /* WFE redefine locally */
 490:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   }
 491:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 492:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 502              		.loc 1 492 3 view .LVU92
 503 0026 074A     		ldr	r2, .L40+4
 504 0028 1369     		ldr	r3, [r2, #16]
 505 002a 23F00403 		bic	r3, r3, #4
 506 002e 1361     		str	r3, [r2, #16]
 493:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
 507              		.loc 1 493 1 is_stmt 0 view .LVU93
 508 0030 10BD     		pop	{r4, pc}
 509              	.LVL8:
 510              	.L37:
 487:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     PWR_OverloadWfe(); /* WFE redefine locally */
 511              		.loc 1 487 5 is_stmt 1 view .LVU94
 512              		.syntax unified
 513              	@ 487 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver
 514 0032 40BF     		sev
 515              	@ 0 "" 2
 488:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     PWR_OverloadWfe(); /* WFE redefine locally */
 516              		.loc 1 488 5 view .LVU95
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 36


 517              		.thumb
 518              		.syntax unified
 519 0034 FFF7FEFF 		bl	PWR_OverloadWfe
 520              	.LVL9:
 489:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   }
 521              		.loc 1 489 5 view .LVU96
 522 0038 FFF7FEFF 		bl	PWR_OverloadWfe
 523              	.LVL10:
 524 003c F3E7     		b	.L38
 525              	.L41:
 526 003e 00BF     		.align	2
 527              	.L40:
 528 0040 00700040 		.word	1073770496
 529 0044 00ED00E0 		.word	-536810240
 530              		.cfi_endproc
 531              	.LFE75:
 533              		.section	.text.HAL_PWR_EnterSTANDBYMode,"ax",%progbits
 534              		.align	1
 535              		.global	HAL_PWR_EnterSTANDBYMode
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 540              	HAL_PWR_EnterSTANDBYMode:
 541              	.LFB76:
 494:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 495:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 496:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief Enters Standby mode.
 497:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @note  In Standby mode, all I/O pins are high impedance except for:
 498:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *          - Reset pad (still available) 
 499:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *          - TAMPER pin if configured for tamper or calibration out.
 500:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *          - WKUP pin (PA0) if enabled.
 501:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @retval None
 502:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 503:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** void HAL_PWR_EnterSTANDBYMode(void)
 504:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
 542              		.loc 1 504 1 view -0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 505:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Select Standby mode */
 506:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   SET_BIT(PWR->CR, PWR_CR_PDDS);
 547              		.loc 1 506 3 view .LVU98
 548 0000 054A     		ldr	r2, .L43
 549 0002 1368     		ldr	r3, [r2]
 550 0004 43F00203 		orr	r3, r3, #2
 551 0008 1360     		str	r3, [r2]
 507:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 508:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 509:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 552              		.loc 1 509 3 view .LVU99
 553 000a 044A     		ldr	r2, .L43+4
 554 000c 1369     		ldr	r3, [r2, #16]
 555 000e 43F00403 		orr	r3, r3, #4
 556 0012 1361     		str	r3, [r2, #16]
 510:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 511:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* This option is used to ensure that store operations are completed */
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 37


 512:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #if defined ( __CC_ARM)
 513:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   __force_stores();
 514:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** #endif
 515:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Request Wait For Interrupt */
 516:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   __WFI();
 557              		.loc 1 516 3 view .LVU100
 558              		.syntax unified
 559              	@ 516 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver
 560 0014 30BF     		wfi
 561              	@ 0 "" 2
 517:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
 562              		.loc 1 517 1 is_stmt 0 view .LVU101
 563              		.thumb
 564              		.syntax unified
 565 0016 7047     		bx	lr
 566              	.L44:
 567              		.align	2
 568              	.L43:
 569 0018 00700040 		.word	1073770496
 570 001c 00ED00E0 		.word	-536810240
 571              		.cfi_endproc
 572              	.LFE76:
 574              		.section	.text.HAL_PWR_EnableSleepOnExit,"ax",%progbits
 575              		.align	1
 576              		.global	HAL_PWR_EnableSleepOnExit
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 581              	HAL_PWR_EnableSleepOnExit:
 582              	.LFB77:
 518:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 519:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 520:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 521:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief Indicates Sleep-On-Exit when returning from Handler mode to Thread mode. 
 522:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @note Set SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 523:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.
 524:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *       Setting this bit is useful when the processor is expected to run only on
 525:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *       interruptions handling.         
 526:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @retval None
 527:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 528:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** void HAL_PWR_EnableSleepOnExit(void)
 529:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
 583              		.loc 1 529 1 is_stmt 1 view -0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587              		@ link register save eliminated.
 530:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Set SLEEPONEXIT bit of Cortex System Control Register */
 531:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 588              		.loc 1 531 3 view .LVU103
 589 0000 024A     		ldr	r2, .L46
 590 0002 1369     		ldr	r3, [r2, #16]
 591 0004 43F00203 		orr	r3, r3, #2
 592 0008 1361     		str	r3, [r2, #16]
 532:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
 593              		.loc 1 532 1 is_stmt 0 view .LVU104
 594 000a 7047     		bx	lr
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 38


 595              	.L47:
 596              		.align	2
 597              	.L46:
 598 000c 00ED00E0 		.word	-536810240
 599              		.cfi_endproc
 600              	.LFE77:
 602              		.section	.text.HAL_PWR_DisableSleepOnExit,"ax",%progbits
 603              		.align	1
 604              		.global	HAL_PWR_DisableSleepOnExit
 605              		.syntax unified
 606              		.thumb
 607              		.thumb_func
 609              	HAL_PWR_DisableSleepOnExit:
 610              	.LFB78:
 533:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 534:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 535:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 536:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief Disables Sleep-On-Exit feature when returning from Handler mode to Thread mode. 
 537:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @note Clears SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 538:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.          
 539:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @retval None
 540:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 541:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** void HAL_PWR_DisableSleepOnExit(void)
 542:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
 611              		.loc 1 542 1 is_stmt 1 view -0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 543:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Clear SLEEPONEXIT bit of Cortex System Control Register */
 544:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 616              		.loc 1 544 3 view .LVU106
 617 0000 024A     		ldr	r2, .L49
 618 0002 1369     		ldr	r3, [r2, #16]
 619 0004 23F00203 		bic	r3, r3, #2
 620 0008 1361     		str	r3, [r2, #16]
 545:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
 621              		.loc 1 545 1 is_stmt 0 view .LVU107
 622 000a 7047     		bx	lr
 623              	.L50:
 624              		.align	2
 625              	.L49:
 626 000c 00ED00E0 		.word	-536810240
 627              		.cfi_endproc
 628              	.LFE78:
 630              		.section	.text.HAL_PWR_EnableSEVOnPend,"ax",%progbits
 631              		.align	1
 632              		.global	HAL_PWR_EnableSEVOnPend
 633              		.syntax unified
 634              		.thumb
 635              		.thumb_func
 637              	HAL_PWR_EnableSEVOnPend:
 638              	.LFB79:
 546:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 547:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 548:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 549:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief Enables CORTEX M3 SEVONPEND bit. 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 39


 550:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @note Sets SEVONPEND bit of SCR register. When this bit is set, this causes 
 551:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.
 552:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @retval None
 553:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 554:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** void HAL_PWR_EnableSEVOnPend(void)
 555:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
 639              		.loc 1 555 1 is_stmt 1 view -0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643              		@ link register save eliminated.
 556:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Set SEVONPEND bit of Cortex System Control Register */
 557:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 644              		.loc 1 557 3 view .LVU109
 645 0000 024A     		ldr	r2, .L52
 646 0002 1369     		ldr	r3, [r2, #16]
 647 0004 43F01003 		orr	r3, r3, #16
 648 0008 1361     		str	r3, [r2, #16]
 558:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
 649              		.loc 1 558 1 is_stmt 0 view .LVU110
 650 000a 7047     		bx	lr
 651              	.L53:
 652              		.align	2
 653              	.L52:
 654 000c 00ED00E0 		.word	-536810240
 655              		.cfi_endproc
 656              	.LFE79:
 658              		.section	.text.HAL_PWR_DisableSEVOnPend,"ax",%progbits
 659              		.align	1
 660              		.global	HAL_PWR_DisableSEVOnPend
 661              		.syntax unified
 662              		.thumb
 663              		.thumb_func
 665              	HAL_PWR_DisableSEVOnPend:
 666              	.LFB80:
 559:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 560:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 561:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 562:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief Disables CORTEX M3 SEVONPEND bit. 
 563:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @note Clears SEVONPEND bit of SCR register. When this bit is set, this causes 
 564:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.         
 565:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @retval None
 566:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 567:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** void HAL_PWR_DisableSEVOnPend(void)
 568:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
 667              		.loc 1 568 1 is_stmt 1 view -0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671              		@ link register save eliminated.
 569:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Clear SEVONPEND bit of Cortex System Control Register */
 570:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 672              		.loc 1 570 3 view .LVU112
 673 0000 024A     		ldr	r2, .L55
 674 0002 1369     		ldr	r3, [r2, #16]
 675 0004 23F01003 		bic	r3, r3, #16
 676 0008 1361     		str	r3, [r2, #16]
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 40


 571:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
 677              		.loc 1 571 1 is_stmt 0 view .LVU113
 678 000a 7047     		bx	lr
 679              	.L56:
 680              		.align	2
 681              	.L55:
 682 000c 00ED00E0 		.word	-536810240
 683              		.cfi_endproc
 684              	.LFE80:
 686              		.section	.text.HAL_PWR_PVDCallback,"ax",%progbits
 687              		.align	1
 688              		.weak	HAL_PWR_PVDCallback
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 693              	HAL_PWR_PVDCallback:
 694              	.LFB82:
 572:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 573:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 574:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 575:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 576:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief  This function handles the PWR PVD interrupt request.
 577:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @note   This API should be called under the PVD_IRQHandler().
 578:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @retval None
 579:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 580:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** void HAL_PWR_PVD_IRQHandler(void)
 581:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
 582:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Check PWR exti flag */
 583:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != RESET)
 584:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   {
 585:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     /* PWR PVD interrupt user callback */
 586:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     HAL_PWR_PVDCallback();
 587:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 588:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     /* Clear PWR Exti pending bit */
 589:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
 590:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   }
 591:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
 592:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 593:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** /**
 594:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @brief  PWR PVD interrupt callback
 595:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   * @retval None
 596:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   */
 597:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** __weak void HAL_PWR_PVDCallback(void)
 598:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** {
 695              		.loc 1 598 1 is_stmt 1 view -0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 599:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 600:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****             the HAL_PWR_PVDCallback could be implemented in the user file
 601:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****    */ 
 602:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** }
 700              		.loc 1 602 1 view .LVU115
 701 0000 7047     		bx	lr
 702              		.cfi_endproc
 703              	.LFE82:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 41


 705              		.section	.text.HAL_PWR_PVD_IRQHandler,"ax",%progbits
 706              		.align	1
 707              		.global	HAL_PWR_PVD_IRQHandler
 708              		.syntax unified
 709              		.thumb
 710              		.thumb_func
 712              	HAL_PWR_PVD_IRQHandler:
 713              	.LFB81:
 581:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   /* Check PWR exti flag */
 714              		.loc 1 581 1 view -0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718 0000 08B5     		push	{r3, lr}
 719              	.LCFI1:
 720              		.cfi_def_cfa_offset 8
 721              		.cfi_offset 3, -8
 722              		.cfi_offset 14, -4
 583:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   {
 723              		.loc 1 583 3 view .LVU117
 583:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   {
 724              		.loc 1 583 6 is_stmt 0 view .LVU118
 725 0002 064B     		ldr	r3, .L62
 726 0004 5B69     		ldr	r3, [r3, #20]
 583:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   {
 727              		.loc 1 583 5 view .LVU119
 728 0006 13F4803F 		tst	r3, #65536
 729 000a 00D1     		bne	.L61
 730              	.L58:
 591:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 731              		.loc 1 591 1 view .LVU120
 732 000c 08BD     		pop	{r3, pc}
 733              	.L61:
 586:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 734              		.loc 1 586 5 is_stmt 1 view .LVU121
 735 000e FFF7FEFF 		bl	HAL_PWR_PVDCallback
 736              	.LVL11:
 589:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c ****   }
 737              		.loc 1 589 5 view .LVU122
 738 0012 024B     		ldr	r3, .L62
 739 0014 4FF48032 		mov	r2, #65536
 740 0018 5A61     		str	r2, [r3, #20]
 591:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_pwr.c **** 
 741              		.loc 1 591 1 is_stmt 0 view .LVU123
 742 001a F7E7     		b	.L58
 743              	.L63:
 744              		.align	2
 745              	.L62:
 746 001c 00040140 		.word	1073808384
 747              		.cfi_endproc
 748              	.LFE81:
 750              		.text
 751              	.Letext0:
 752              		.file 3 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
 753              		.file 4 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 754              		.file 5 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Include/cor
 755              		.file 6 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Device/ST/S
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 42


 756              		.file 7 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Device/ST/S
 757              		.file 8 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Dri
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_hal_pwr.c
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:18     .text.PWR_OverloadWfe:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:23     .text.PWR_OverloadWfe:00000000 PWR_OverloadWfe
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:48     .text.HAL_PWR_DeInit:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:54     .text.HAL_PWR_DeInit:00000000 HAL_PWR_DeInit
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:75     .text.HAL_PWR_DeInit:00000014 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:80     .text.HAL_PWR_EnableBkUpAccess:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:86     .text.HAL_PWR_EnableBkUpAccess:00000000 HAL_PWR_EnableBkUpAccess
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:103    .text.HAL_PWR_EnableBkUpAccess:00000008 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:108    .text.HAL_PWR_DisableBkUpAccess:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:114    .text.HAL_PWR_DisableBkUpAccess:00000000 HAL_PWR_DisableBkUpAccess
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:131    .text.HAL_PWR_DisableBkUpAccess:00000008 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:136    .text.HAL_PWR_ConfigPVD:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:142    .text.HAL_PWR_ConfigPVD:00000000 HAL_PWR_ConfigPVD
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:229    .text.HAL_PWR_ConfigPVD:0000007c $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:235    .text.HAL_PWR_EnablePVD:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:241    .text.HAL_PWR_EnablePVD:00000000 HAL_PWR_EnablePVD
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:258    .text.HAL_PWR_EnablePVD:00000008 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:263    .text.HAL_PWR_DisablePVD:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:269    .text.HAL_PWR_DisablePVD:00000000 HAL_PWR_DisablePVD
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:286    .text.HAL_PWR_DisablePVD:00000008 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:291    .text.HAL_PWR_EnableWakeUpPin:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:297    .text.HAL_PWR_EnableWakeUpPin:00000000 HAL_PWR_EnableWakeUpPin
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:338    .text.HAL_PWR_EnableWakeUpPin:00000014 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:343    .text.HAL_PWR_DisableWakeUpPin:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:349    .text.HAL_PWR_DisableWakeUpPin:00000000 HAL_PWR_DisableWakeUpPin
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:389    .text.HAL_PWR_DisableWakeUpPin:00000014 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:394    .text.HAL_PWR_EnterSLEEPMode:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:400    .text.HAL_PWR_EnterSLEEPMode:00000000 HAL_PWR_EnterSLEEPMode
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:448    .text.HAL_PWR_EnterSLEEPMode:0000001c $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:453    .text.HAL_PWR_EnterSTOPMode:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:459    .text.HAL_PWR_EnterSTOPMode:00000000 HAL_PWR_EnterSTOPMode
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:528    .text.HAL_PWR_EnterSTOPMode:00000040 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:534    .text.HAL_PWR_EnterSTANDBYMode:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:540    .text.HAL_PWR_EnterSTANDBYMode:00000000 HAL_PWR_EnterSTANDBYMode
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:569    .text.HAL_PWR_EnterSTANDBYMode:00000018 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:575    .text.HAL_PWR_EnableSleepOnExit:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:581    .text.HAL_PWR_EnableSleepOnExit:00000000 HAL_PWR_EnableSleepOnExit
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:598    .text.HAL_PWR_EnableSleepOnExit:0000000c $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:603    .text.HAL_PWR_DisableSleepOnExit:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:609    .text.HAL_PWR_DisableSleepOnExit:00000000 HAL_PWR_DisableSleepOnExit
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:626    .text.HAL_PWR_DisableSleepOnExit:0000000c $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:631    .text.HAL_PWR_EnableSEVOnPend:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:637    .text.HAL_PWR_EnableSEVOnPend:00000000 HAL_PWR_EnableSEVOnPend
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:654    .text.HAL_PWR_EnableSEVOnPend:0000000c $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:659    .text.HAL_PWR_DisableSEVOnPend:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:665    .text.HAL_PWR_DisableSEVOnPend:00000000 HAL_PWR_DisableSEVOnPend
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:682    .text.HAL_PWR_DisableSEVOnPend:0000000c $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:687    .text.HAL_PWR_PVDCallback:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:693    .text.HAL_PWR_PVDCallback:00000000 HAL_PWR_PVDCallback
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:706    .text.HAL_PWR_PVD_IRQHandler:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:712    .text.HAL_PWR_PVD_IRQHandler:00000000 HAL_PWR_PVD_IRQHandler
C:\Users\BLACK_~1\AppData\Local\Temp\ccebN0jj.s:746    .text.HAL_PWR_PVD_IRQHandler:0000001c $d

NO UNDEFINED SYMBOLS
