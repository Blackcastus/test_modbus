ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	NMI_Handler:
  25              	.LFB197:
  26              		.file 1 "Src/stm32f1xx_it.c"
   1:Src/stm32f1xx_it.c **** 
   2:Src/stm32f1xx_it.c **** #include <stdio.h>
   3:Src/stm32f1xx_it.c **** #include <string.h>
   4:Src/stm32f1xx_it.c **** 
   5:Src/stm32f1xx_it.c **** #include "main.h"
   6:Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
   7:Src/stm32f1xx_it.c **** #include "usb_device.h"
   8:Src/stm32f1xx_it.c **** #include "usart.h"
   9:Src/stm32f1xx_it.c **** 
  10:Src/stm32f1xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
  11:Src/stm32f1xx_it.c **** 
  12:Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  13:Src/stm32f1xx_it.c **** extern DMA_Event_t dma_uart1_rx;
  14:Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart1;
  15:Src/stm32f1xx_it.c **** 
  16:Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  17:Src/stm32f1xx_it.c **** extern DMA_Event_t dma_uart2_rx;
  18:Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart2;
  19:Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  20:Src/stm32f1xx_it.c **** 
  21:Src/stm32f1xx_it.c **** /* USER CODE END EV */
  22:Src/stm32f1xx_it.c **** 
  23:Src/stm32f1xx_it.c **** /******************************************************************************/
  24:Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */ 
  25:Src/stm32f1xx_it.c **** /******************************************************************************/
  26:Src/stm32f1xx_it.c **** /**
  27:Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  28:Src/stm32f1xx_it.c ****   */
  29:Src/stm32f1xx_it.c **** void NMI_Handler(void)
  30:Src/stm32f1xx_it.c **** {
  27              		.loc 1 30 1 view -0
  28              		.cfi_startproc
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 2


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  31:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  32:Src/stm32f1xx_it.c **** 
  33:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  34:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  35:Src/stm32f1xx_it.c **** 
  36:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  37:Src/stm32f1xx_it.c **** }
  32              		.loc 1 37 1 view .LVU1
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE197:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  44              	HardFault_Handler:
  45              	.LFB198:
  38:Src/stm32f1xx_it.c **** 
  39:Src/stm32f1xx_it.c **** /**
  40:Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  41:Src/stm32f1xx_it.c ****   */
  42:Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  43:Src/stm32f1xx_it.c **** {
  46              		.loc 1 43 1 view -0
  47              		.cfi_startproc
  48              		@ Volatile: function does not return.
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.L3:
  44:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  45:Src/stm32f1xx_it.c **** 
  46:Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  47:Src/stm32f1xx_it.c ****   while (1)
  53              		.loc 1 47 3 discriminator 1 view .LVU3
  48:Src/stm32f1xx_it.c ****   {
  49:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  50:Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  51:Src/stm32f1xx_it.c ****   }
  54              		.loc 1 51 3 discriminator 1 view .LVU4
  47:Src/stm32f1xx_it.c ****   {
  55              		.loc 1 47 9 discriminator 1 view .LVU5
  56 0000 FEE7     		b	.L3
  57              		.cfi_endproc
  58              	.LFE198:
  60              		.section	.text.MemManage_Handler,"ax",%progbits
  61              		.align	1
  62              		.global	MemManage_Handler
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  67              	MemManage_Handler:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 3


  68              	.LFB199:
  52:Src/stm32f1xx_it.c **** }
  53:Src/stm32f1xx_it.c **** 
  54:Src/stm32f1xx_it.c **** /**
  55:Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
  56:Src/stm32f1xx_it.c ****   */
  57:Src/stm32f1xx_it.c **** void MemManage_Handler(void)
  58:Src/stm32f1xx_it.c **** {
  69              		.loc 1 58 1 view -0
  70              		.cfi_startproc
  71              		@ Volatile: function does not return.
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.L5:
  59:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  60:Src/stm32f1xx_it.c **** 
  61:Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  62:Src/stm32f1xx_it.c ****   while (1)
  76              		.loc 1 62 3 discriminator 1 view .LVU7
  63:Src/stm32f1xx_it.c ****   {
  64:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
  65:Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
  66:Src/stm32f1xx_it.c ****   }
  77              		.loc 1 66 3 discriminator 1 view .LVU8
  62:Src/stm32f1xx_it.c ****   {
  78              		.loc 1 62 9 discriminator 1 view .LVU9
  79 0000 FEE7     		b	.L5
  80              		.cfi_endproc
  81              	.LFE199:
  83              		.section	.text.BusFault_Handler,"ax",%progbits
  84              		.align	1
  85              		.global	BusFault_Handler
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  90              	BusFault_Handler:
  91              	.LFB200:
  67:Src/stm32f1xx_it.c **** }
  68:Src/stm32f1xx_it.c **** 
  69:Src/stm32f1xx_it.c **** /**
  70:Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
  71:Src/stm32f1xx_it.c ****   */
  72:Src/stm32f1xx_it.c **** void BusFault_Handler(void)
  73:Src/stm32f1xx_it.c **** {
  92              		.loc 1 73 1 view -0
  93              		.cfi_startproc
  94              		@ Volatile: function does not return.
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  98              	.L7:
  74:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
  75:Src/stm32f1xx_it.c **** 
  76:Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
  77:Src/stm32f1xx_it.c ****   while (1)
  99              		.loc 1 77 3 discriminator 1 view .LVU11
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 4


  78:Src/stm32f1xx_it.c ****   {
  79:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
  80:Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
  81:Src/stm32f1xx_it.c ****   }
 100              		.loc 1 81 3 discriminator 1 view .LVU12
  77:Src/stm32f1xx_it.c ****   {
 101              		.loc 1 77 9 discriminator 1 view .LVU13
 102 0000 FEE7     		b	.L7
 103              		.cfi_endproc
 104              	.LFE200:
 106              		.section	.text.UsageFault_Handler,"ax",%progbits
 107              		.align	1
 108              		.global	UsageFault_Handler
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 113              	UsageFault_Handler:
 114              	.LFB201:
  82:Src/stm32f1xx_it.c **** }
  83:Src/stm32f1xx_it.c **** 
  84:Src/stm32f1xx_it.c **** /**
  85:Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
  86:Src/stm32f1xx_it.c ****   */
  87:Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
  88:Src/stm32f1xx_it.c **** {
 115              		.loc 1 88 1 view -0
 116              		.cfi_startproc
 117              		@ Volatile: function does not return.
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121              	.L9:
  89:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
  90:Src/stm32f1xx_it.c **** 
  91:Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
  92:Src/stm32f1xx_it.c ****   while (1)
 122              		.loc 1 92 3 discriminator 1 view .LVU15
  93:Src/stm32f1xx_it.c ****   {
  94:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
  95:Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
  96:Src/stm32f1xx_it.c ****   }
 123              		.loc 1 96 3 discriminator 1 view .LVU16
  92:Src/stm32f1xx_it.c ****   {
 124              		.loc 1 92 9 discriminator 1 view .LVU17
 125 0000 FEE7     		b	.L9
 126              		.cfi_endproc
 127              	.LFE201:
 129              		.section	.text.SVC_Handler,"ax",%progbits
 130              		.align	1
 131              		.global	SVC_Handler
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 136              	SVC_Handler:
 137              	.LFB202:
  97:Src/stm32f1xx_it.c **** }
  98:Src/stm32f1xx_it.c **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 5


  99:Src/stm32f1xx_it.c **** /**
 100:Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 101:Src/stm32f1xx_it.c ****   */
 102:Src/stm32f1xx_it.c **** void SVC_Handler(void)
 103:Src/stm32f1xx_it.c **** {
 138              		.loc 1 103 1 view -0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 104:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 105:Src/stm32f1xx_it.c **** 
 106:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 107:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 108:Src/stm32f1xx_it.c **** 
 109:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 110:Src/stm32f1xx_it.c **** }
 143              		.loc 1 110 1 view .LVU19
 144 0000 7047     		bx	lr
 145              		.cfi_endproc
 146              	.LFE202:
 148              		.section	.text.DebugMon_Handler,"ax",%progbits
 149              		.align	1
 150              		.global	DebugMon_Handler
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 155              	DebugMon_Handler:
 156              	.LFB203:
 111:Src/stm32f1xx_it.c **** 
 112:Src/stm32f1xx_it.c **** /**
 113:Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 114:Src/stm32f1xx_it.c ****   */
 115:Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 116:Src/stm32f1xx_it.c **** {
 157              		.loc 1 116 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 117:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 118:Src/stm32f1xx_it.c **** 
 119:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 120:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 121:Src/stm32f1xx_it.c **** 
 122:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 123:Src/stm32f1xx_it.c **** }
 162              		.loc 1 123 1 view .LVU21
 163 0000 7047     		bx	lr
 164              		.cfi_endproc
 165              	.LFE203:
 167              		.section	.text.PendSV_Handler,"ax",%progbits
 168              		.align	1
 169              		.global	PendSV_Handler
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 6


 174              	PendSV_Handler:
 175              	.LFB204:
 124:Src/stm32f1xx_it.c **** 
 125:Src/stm32f1xx_it.c **** /**
 126:Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 127:Src/stm32f1xx_it.c ****   */
 128:Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 129:Src/stm32f1xx_it.c **** {
 176              		.loc 1 129 1 view -0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 130:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 131:Src/stm32f1xx_it.c **** 
 132:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 133:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 134:Src/stm32f1xx_it.c **** 
 135:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 136:Src/stm32f1xx_it.c **** }
 181              		.loc 1 136 1 view .LVU23
 182 0000 7047     		bx	lr
 183              		.cfi_endproc
 184              	.LFE204:
 186              		.section	.text.SysTick_Handler,"ax",%progbits
 187              		.align	1
 188              		.global	SysTick_Handler
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 193              	SysTick_Handler:
 194              	.LFB205:
 137:Src/stm32f1xx_it.c **** 
 138:Src/stm32f1xx_it.c **** /**
 139:Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 140:Src/stm32f1xx_it.c ****   */
 141:Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 142:Src/stm32f1xx_it.c **** {
 195              		.loc 1 142 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199 0000 08B5     		push	{r3, lr}
 200              	.LCFI0:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 3, -8
 203              		.cfi_offset 14, -4
 143:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 144:Src/stm32f1xx_it.c ****   if (dma_uart1_rx.timer == 1)
 204              		.loc 1 144 3 view .LVU25
 205              		.loc 1 144 19 is_stmt 0 view .LVU26
 206 0002 154B     		ldr	r3, .L21
 207 0004 B3F80434 		ldrh	r3, [r3, #1028]
 208              		.loc 1 144 6 view .LVU27
 209 0008 012B     		cmp	r3, #1
 210 000a 17D0     		beq	.L19
 211              	.L14:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 7


 145:Src/stm32f1xx_it.c ****   {
 146:Src/stm32f1xx_it.c ****     /* DMA timeout event: set Timeout Flag and call DMA Rx complete callback */
 147:Src/stm32f1xx_it.c ****     dma_uart1_rx.flag = 1;
 148:Src/stm32f1xx_it.c ****     hdma_usart1_rx.XferCpltCallback(&hdma_usart1_rx);
 149:Src/stm32f1xx_it.c ****   }
 150:Src/stm32f1xx_it.c **** 
 151:Src/stm32f1xx_it.c ****   if (dma_uart1_rx.timer)
 212              		.loc 1 151 3 is_stmt 1 view .LVU28
 213              		.loc 1 151 19 is_stmt 0 view .LVU29
 214 000c 124B     		ldr	r3, .L21
 215 000e B3F80434 		ldrh	r3, [r3, #1028]
 216              		.loc 1 151 6 view .LVU30
 217 0012 1BB1     		cbz	r3, .L15
 152:Src/stm32f1xx_it.c ****     --dma_uart1_rx.timer;
 218              		.loc 1 152 5 is_stmt 1 view .LVU31
 219 0014 013B     		subs	r3, r3, #1
 220 0016 104A     		ldr	r2, .L21
 221 0018 A2F80434 		strh	r3, [r2, #1028]	@ movhi
 222              	.L15:
 153:Src/stm32f1xx_it.c **** 
 154:Src/stm32f1xx_it.c ****   if (dma_uart2_rx.timer == 1)
 223              		.loc 1 154 3 view .LVU32
 224              		.loc 1 154 19 is_stmt 0 view .LVU33
 225 001c 0F4B     		ldr	r3, .L21+4
 226 001e B3F80434 		ldrh	r3, [r3, #1028]
 227              		.loc 1 154 6 view .LVU34
 228 0022 012B     		cmp	r3, #1
 229 0024 11D0     		beq	.L20
 230              	.L16:
 155:Src/stm32f1xx_it.c ****   {
 156:Src/stm32f1xx_it.c ****     /* DMA timeout event: set Timeout Flag and call DMA Rx complete callback */
 157:Src/stm32f1xx_it.c ****     dma_uart2_rx.flag = 1;
 158:Src/stm32f1xx_it.c ****     hdma_usart2_rx.XferCpltCallback(&hdma_usart2_rx);
 159:Src/stm32f1xx_it.c ****   }
 160:Src/stm32f1xx_it.c **** 
 161:Src/stm32f1xx_it.c ****   if (dma_uart2_rx.timer)
 231              		.loc 1 161 3 is_stmt 1 view .LVU35
 232              		.loc 1 161 19 is_stmt 0 view .LVU36
 233 0026 0D4B     		ldr	r3, .L21+4
 234 0028 B3F80434 		ldrh	r3, [r3, #1028]
 235              		.loc 1 161 6 view .LVU37
 236 002c 1BB1     		cbz	r3, .L17
 162:Src/stm32f1xx_it.c ****     --dma_uart2_rx.timer;
 237              		.loc 1 162 5 is_stmt 1 view .LVU38
 238 002e 013B     		subs	r3, r3, #1
 239 0030 0A4A     		ldr	r2, .L21+4
 240 0032 A2F80434 		strh	r3, [r2, #1028]	@ movhi
 241              	.L17:
 163:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 164:Src/stm32f1xx_it.c ****   HAL_IncTick();
 242              		.loc 1 164 3 view .LVU39
 243 0036 FFF7FEFF 		bl	HAL_IncTick
 244              	.LVL0:
 165:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 166:Src/stm32f1xx_it.c **** 
 167:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 168:Src/stm32f1xx_it.c **** }
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 8


 245              		.loc 1 168 1 is_stmt 0 view .LVU40
 246 003a 08BD     		pop	{r3, pc}
 247              	.L19:
 147:Src/stm32f1xx_it.c ****     hdma_usart1_rx.XferCpltCallback(&hdma_usart1_rx);
 248              		.loc 1 147 5 is_stmt 1 view .LVU41
 147:Src/stm32f1xx_it.c ****     hdma_usart1_rx.XferCpltCallback(&hdma_usart1_rx);
 249              		.loc 1 147 23 is_stmt 0 view .LVU42
 250 003c 064B     		ldr	r3, .L21
 251 003e 0122     		movs	r2, #1
 252 0040 1A70     		strb	r2, [r3]
 148:Src/stm32f1xx_it.c ****   }
 253              		.loc 1 148 5 is_stmt 1 view .LVU43
 148:Src/stm32f1xx_it.c ****   }
 254              		.loc 1 148 19 is_stmt 0 view .LVU44
 255 0042 0748     		ldr	r0, .L21+8
 256 0044 836A     		ldr	r3, [r0, #40]
 148:Src/stm32f1xx_it.c ****   }
 257              		.loc 1 148 5 view .LVU45
 258 0046 9847     		blx	r3
 259              	.LVL1:
 260 0048 E0E7     		b	.L14
 261              	.L20:
 157:Src/stm32f1xx_it.c ****     hdma_usart2_rx.XferCpltCallback(&hdma_usart2_rx);
 262              		.loc 1 157 5 is_stmt 1 view .LVU46
 157:Src/stm32f1xx_it.c ****     hdma_usart2_rx.XferCpltCallback(&hdma_usart2_rx);
 263              		.loc 1 157 23 is_stmt 0 view .LVU47
 264 004a 044B     		ldr	r3, .L21+4
 265 004c 0122     		movs	r2, #1
 266 004e 1A70     		strb	r2, [r3]
 158:Src/stm32f1xx_it.c ****   }
 267              		.loc 1 158 5 is_stmt 1 view .LVU48
 158:Src/stm32f1xx_it.c ****   }
 268              		.loc 1 158 19 is_stmt 0 view .LVU49
 269 0050 0448     		ldr	r0, .L21+12
 270 0052 836A     		ldr	r3, [r0, #40]
 158:Src/stm32f1xx_it.c ****   }
 271              		.loc 1 158 5 view .LVU50
 272 0054 9847     		blx	r3
 273              	.LVL2:
 274 0056 E6E7     		b	.L16
 275              	.L22:
 276              		.align	2
 277              	.L21:
 278 0058 00000000 		.word	dma_uart1_rx
 279 005c 00000000 		.word	dma_uart2_rx
 280 0060 00000000 		.word	hdma_usart1_rx
 281 0064 00000000 		.word	hdma_usart2_rx
 282              		.cfi_endproc
 283              	.LFE205:
 285              		.section	.text.USB_LP_CAN1_RX0_IRQHandler,"ax",%progbits
 286              		.align	1
 287              		.global	USB_LP_CAN1_RX0_IRQHandler
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 292              	USB_LP_CAN1_RX0_IRQHandler:
 293              	.LFB206:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 9


 169:Src/stm32f1xx_it.c **** 
 170:Src/stm32f1xx_it.c **** /******************************************************************************/
 171:Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 172:Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 173:Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 174:Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 175:Src/stm32f1xx_it.c **** /******************************************************************************/
 176:Src/stm32f1xx_it.c **** 
 177:Src/stm32f1xx_it.c **** /**
 178:Src/stm32f1xx_it.c ****   * @brief This function handles USB low priority or CAN RX0 interrupts.
 179:Src/stm32f1xx_it.c ****   */
 180:Src/stm32f1xx_it.c **** void USB_LP_CAN1_RX0_IRQHandler(void)
 181:Src/stm32f1xx_it.c **** {
 294              		.loc 1 181 1 is_stmt 1 view -0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298 0000 08B5     		push	{r3, lr}
 299              	.LCFI1:
 300              		.cfi_def_cfa_offset 8
 301              		.cfi_offset 3, -8
 302              		.cfi_offset 14, -4
 182:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 0 */
 183:Src/stm32f1xx_it.c **** 
 184:Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 0 */
 185:Src/stm32f1xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 303              		.loc 1 185 3 view .LVU52
 304 0002 0248     		ldr	r0, .L25
 305 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 306              	.LVL3:
 186:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 1 */
 187:Src/stm32f1xx_it.c **** 
 188:Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 1 */
 189:Src/stm32f1xx_it.c **** }
 307              		.loc 1 189 1 is_stmt 0 view .LVU53
 308 0008 08BD     		pop	{r3, pc}
 309              	.L26:
 310 000a 00BF     		.align	2
 311              	.L25:
 312 000c 00000000 		.word	hpcd_USB_FS
 313              		.cfi_endproc
 314              	.LFE206:
 316              		.section	.text.USART1_IRQHandler,"ax",%progbits
 317              		.align	1
 318              		.global	USART1_IRQHandler
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 323              	USART1_IRQHandler:
 324              	.LFB207:
 190:Src/stm32f1xx_it.c **** 
 191:Src/stm32f1xx_it.c **** void USART1_IRQHandler(void)
 192:Src/stm32f1xx_it.c **** {
 325              		.loc 1 192 1 is_stmt 1 view -0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 8
 328              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 10


 329 0000 00B5     		push	{lr}
 330              	.LCFI2:
 331              		.cfi_def_cfa_offset 4
 332              		.cfi_offset 14, -4
 333 0002 83B0     		sub	sp, sp, #12
 334              	.LCFI3:
 335              		.cfi_def_cfa_offset 16
 193:Src/stm32f1xx_it.c ****   if (LL_USART_IsActiveFlag_IDLE(USART1))
 336              		.loc 1 193 3 view .LVU55
 337              	.LVL4:
 338              	.LBB10:
 339              	.LBI10:
 340              		.file 2 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Dri
   1:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
   2:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   ******************************************************************************
   3:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @file    stm32f1xx_ll_usart.h
   4:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @author  MCD Application Team
   5:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief   Header file of USART LL module.
   6:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   ******************************************************************************
   7:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @attention
   8:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *
   9:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * All rights reserved.</center></h2>
  11:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *
  12:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * the "License"; You may not use this file except in compliance with the
  14:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * License. You may obtain a copy of the License at:
  15:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *
  17:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   ******************************************************************************
  18:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
  19:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  20:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #ifndef __STM32F1xx_LL_USART_H
  22:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define __STM32F1xx_LL_USART_H
  23:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  24:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #ifdef __cplusplus
  25:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** extern "C" {
  26:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #endif
  27:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  28:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /* Includes ------------------------------------------------------------------*/
  29:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #include "stm32f1xx.h"
  30:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  31:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @addtogroup STM32F1xx_LL_Driver
  32:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
  33:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
  34:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  35:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (UART4) || defined (UART5)
  36:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  37:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL USART
  38:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
  39:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
  40:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  41:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /* Private types -------------------------------------------------------------*/
  42:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /* Private variables ---------------------------------------------------------*/
  43:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  44:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /* Private constants ---------------------------------------------------------*/
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 11


  45:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_Private_Constants USART Private Constants
  46:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
  47:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
  48:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  49:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /* Defines used for the bit position in the register and perform offsets*/
  50:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define USART_POSITION_GTPR_GT                  USART_GTPR_GT_Pos
  51:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
  52:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
  53:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
  54:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  55:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /* Private macros ------------------------------------------------------------*/
  56:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  57:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_Private_Macros USART Private Macros
  58:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
  59:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
  60:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
  61:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
  62:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
  63:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
  64:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  65:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /* Exported types ------------------------------------------------------------*/
  66:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  67:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_ES_INIT USART Exported Init structures
  68:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
  69:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
  70:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  71:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
  72:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief LL USART Init Structure definition
  73:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
  74:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** typedef struct
  75:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
  76:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   uint32_t BaudRate;                  /*!< This field defines expected Usart communication baud rat
  77:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  78:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  79:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  80:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
  81:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DATAWI
  82:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  83:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  84:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  85:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
  86:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_STOPBI
  87:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  88:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  89:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  90:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
  91:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PARITY
  92:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  93:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  94:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  95:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
  96:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DIRECT
  97:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
  98:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  99:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 100:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
 101:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_HWCONT
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 12


 102:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 103:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 104:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 105:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   uint32_t OverSampling;              /*!< Specifies whether USART oversampling mode is 16 or 8.
 106:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_OVERSA
 107:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 108:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 109:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 110:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** } LL_USART_InitTypeDef;
 111:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 112:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 113:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief LL USART Clock Init Structure definition
 114:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 115:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** typedef struct
 116:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 117:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   uint32_t ClockOutput;               /*!< Specifies whether the USART clock is enabled or disabled
 118:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_CLOCK.
 119:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 120:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 121:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            @ref LL_USART_EnableSCLKOutput() or @ref LL_USART_Disabl
 122:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            For more details, refer to description of this function.
 123:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 124:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   uint32_t ClockPolarity;             /*!< Specifies the steady state of the serial clock.
 125:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_POLARI
 126:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 127:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 128:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            For more details, refer to description of this function.
 129:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 130:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   uint32_t ClockPhase;                /*!< Specifies the clock transition on which the bit capture 
 131:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PHASE.
 132:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 133:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 134:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            For more details, refer to description of this function.
 135:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 136:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   uint32_t LastBitClockPulse;         /*!< Specifies whether the clock pulse corresponding to the l
 137:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            data bit (MSB) has to be output on the SCLK pin in synch
 138:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_LASTCL
 139:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 140:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 141:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                            For more details, refer to description of this function.
 142:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 143:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** } LL_USART_ClockInitTypeDef;
 144:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 145:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 146:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 147:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 148:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #endif /* USE_FULL_LL_DRIVER */
 149:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 150:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /* Exported constants --------------------------------------------------------*/
 151:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Constants USART Exported Constants
 152:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 153:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 154:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 155:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_GET_FLAG Get Flags Defines
 156:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_ReadReg function
 157:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 158:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 13


 159:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_SR_PE                          USART_SR_PE                   /*!< Parity error fla
 160:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_SR_FE                          USART_SR_FE                   /*!< Framing error fl
 161:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_SR_NE                          USART_SR_NE                   /*!< Noise detected f
 162:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_SR_ORE                         USART_SR_ORE                  /*!< Overrun error fl
 163:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_SR_IDLE                        USART_SR_IDLE                 /*!< Idle line detect
 164:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_SR_RXNE                        USART_SR_RXNE                 /*!< Read data regist
 165:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_SR_TC                          USART_SR_TC                   /*!< Transmission com
 166:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_SR_TXE                         USART_SR_TXE                  /*!< Transmit data re
 167:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_SR_LBD                         USART_SR_LBD                  /*!< LIN break detect
 168:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_SR_CTS                         USART_SR_CTS                  /*!< CTS flag */
 169:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 170:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 171:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 172:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 173:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_IT IT Defines
 174:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief    IT defines which can be used with LL_USART_ReadReg and  LL_USART_WriteReg functions
 175:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 176:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 177:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_CR1_IDLEIE                     USART_CR1_IDLEIE              /*!< IDLE interrupt e
 178:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE                     USART_CR1_RXNEIE              /*!< Read data regist
 179:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_CR1_TCIE                       USART_CR1_TCIE                /*!< Transmission com
 180:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_CR1_TXEIE                      USART_CR1_TXEIE               /*!< Transmit data re
 181:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_CR1_PEIE                       USART_CR1_PEIE                /*!< Parity error */
 182:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_CR2_LBDIE                      USART_CR2_LBDIE               /*!< LIN break detect
 183:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_CR3_EIE                        USART_CR3_EIE                 /*!< Error interrupt 
 184:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_CR3_CTSIE                      USART_CR3_CTSIE               /*!< CTS interrupt en
 185:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 186:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 187:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 188:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 189:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_DIRECTION Communication Direction
 190:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 191:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 192:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_DIRECTION_NONE                 0x00000000U                        /*!< Transmitter
 193:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_DIRECTION_RX                   USART_CR1_RE                       /*!< Transmitter
 194:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_DIRECTION_TX                   USART_CR1_TE                       /*!< Transmitter
 195:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_DIRECTION_TX_RX                (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter
 196:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 197:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 198:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 199:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 200:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_PARITY Parity Control
 201:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 202:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 203:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_PARITY_NONE                    0x00000000U                          /*!< Parity co
 204:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_PARITY_EVEN                    USART_CR1_PCE                        /*!< Parity co
 205:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_PARITY_ODD                     (USART_CR1_PCE | USART_CR1_PS)       /*!< Parity co
 206:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 207:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 208:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 209:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 210:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP Wakeup
 211:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 212:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 213:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_WAKEUP_IDLELINE                0x00000000U           /*!<  USART wake up from Mute
 214:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_WAKEUP_ADDRESSMARK             USART_CR1_WAKE        /*!<  USART wake up from Mute
 215:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 14


 216:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 217:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 218:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 219:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_DATAWIDTH Datawidth
 220:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 221:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 222:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 223:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M             /*!< 9 bits word length : S
 224:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 225:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 226:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 227:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 228:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_OVERSAMPLING Oversampling
 229:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 230:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 231:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_16                0x00000000U            /*!< Oversampling by 16 */
 232:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #if  defined(USART_CR1_OVER8)
 233:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_8                 USART_CR1_OVER8        /*!< Oversampling by 8 */
 234:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #endif /* USART_OverSampling_Feature */
 235:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 236:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 237:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 238:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 239:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
 240:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLOCK Clock Signal
 241:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 242:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 243:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 244:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_CLOCK_DISABLE                  0x00000000U            /*!< Clock signal not provid
 245:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_CLOCK_ENABLE                   USART_CR2_CLKEN        /*!< Clock signal provided *
 246:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 247:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 248:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 249:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
 250:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 251:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_LASTCLKPULSE Last Clock Pulse
 252:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 253:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 254:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_NO_OUTPUT         0x00000000U           /*!< The clock pulse of the l
 255:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_OUTPUT            USART_CR2_LBCL        /*!< The clock pulse of the l
 256:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 257:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 258:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 259:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 260:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_PHASE Clock Phase
 261:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 262:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 263:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_PHASE_1EDGE                    0x00000000U           /*!< The first clock transiti
 264:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_PHASE_2EDGE                    USART_CR2_CPHA        /*!< The second clock transit
 265:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 266:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 267:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 268:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 269:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_POLARITY Clock Polarity
 270:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 271:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 272:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_POLARITY_LOW                   0x00000000U           /*!< Steady low value on SCLK
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 15


 273:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_POLARITY_HIGH                  USART_CR2_CPOL        /*!< Steady high value on SCL
 274:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 275:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 276:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 277:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 278:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_STOPBITS Stop Bits
 279:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 280:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 281:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_STOPBITS_0_5                   USART_CR2_STOP_0                           /*!< 0.5
 282:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_STOPBITS_1                     0x00000000U                                /*!< 1 s
 283:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_STOPBITS_1_5                   (USART_CR2_STOP_0 | USART_CR2_STOP_1)      /*!< 1.5
 284:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_STOPBITS_2                     USART_CR2_STOP_1                           /*!< 2 s
 285:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 286:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 287:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 288:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 289:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_HWCONTROL Hardware Control
 290:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 291:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 292:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_HWCONTROL_NONE                 0x00000000U                          /*!< CTS and R
 293:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS                  USART_CR3_RTSE                       /*!< RTS outpu
 294:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_HWCONTROL_CTS                  USART_CR3_CTSE                       /*!< CTS mode 
 295:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS_CTS              (USART_CR3_RTSE | USART_CR3_CTSE)    /*!< CTS and R
 296:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 297:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 298:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 299:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 300:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_IRDA_POWER IrDA Power
 301:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 302:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 303:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_IRDA_POWER_NORMAL              0x00000000U           /*!< IrDA normal power mode *
 304:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_IRDA_POWER_LOW                 USART_CR3_IRLP        /*!< IrDA low power mode */
 305:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 306:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 307:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 308:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 309:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_LINBREAK_DETECT LIN Break Detection Length
 310:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 311:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 312:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_10B            0x00000000U           /*!< 10-bit break detection m
 313:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_11B            USART_CR2_LBDL        /*!< 11-bit break detection m
 314:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 315:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 316:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 317:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 318:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 319:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 320:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 321:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 322:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /* Exported macro ------------------------------------------------------------*/
 323:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Macros USART Exported Macros
 324:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 325:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 326:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 327:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EM_WRITE_READ Common Write and read registers Macros
 328:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 329:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 16


 330:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 331:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 332:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Write a value in USART register
 333:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 334:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  __REG__ Register to be written
 335:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  __VALUE__ Value to be written in the register
 336:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 337:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 338:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VAL
 339:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 340:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 341:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Read a value in USART register
 342:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 343:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  __REG__ Register to be read
 344:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Register value
 345:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 346:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define LL_USART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 347:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 348:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 349:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 350:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 351:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EM_Exported_Macros_Helper Exported_Macros_Helper
 352:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 353:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 354:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 355:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 356:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 357:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         expected Baud Rate in 8 bits sampling mode (32 bits value of USARTDIV is returned)
 358:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 359:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 360:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_8 case
 361:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 362:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8_100(__PERIPHCLK__, __BAUDRATE__)      (((__PERIPHCLK__)*25)/(2*(__
 363:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define __LL_USART_DIVMANT_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)      (__LL_USART_DIV_SAMPLING8_10
 364:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define __LL_USART_DIVFRAQ_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)      (((__LL_USART_DIV_SAMPLING8_
 365:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /* UART BRR = mantissa + overflow + fraction
 366:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****             = (UART DIVMANT << 4) + ((UART DIVFRAQ & 0xF8) << 1) + (UART DIVFRAQ & 0x07) */
 367:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)             (((__LL_USART_DIVMANT_SAM
 368:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                                                            ((__LL_USART_DIVFRAQ_SAM
 369:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                                                            (__LL_USART_DIVFRAQ_SAMP
 370:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 371:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 372:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 373:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         expected Baud Rate in 16 bits sampling mode (32 bits value of USARTDIV is returned)
 374:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 375:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 376:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_16 case
 377:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 378:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16_100(__PERIPHCLK__, __BAUDRATE__)     (((__PERIPHCLK__)*25)/(4*(__
 379:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define __LL_USART_DIVMANT_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)     (__LL_USART_DIV_SAMPLING16_1
 380:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define __LL_USART_DIVFRAQ_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)     ((((__LL_USART_DIV_SAMPLING1
 381:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /* USART BRR = mantissa + overflow + fraction
 382:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****             = (USART DIVMANT << 4) + (USART DIVFRAQ & 0xF0) + (USART DIVFRAQ & 0x0F) */
 383:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)            (((__LL_USART_DIVMANT_SAM
 384:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                                                            (__LL_USART_DIVFRAQ_SAMP
 385:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                                                            (__LL_USART_DIVFRAQ_SAMP
 386:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 17


 387:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 388:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 389:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 390:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 391:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 392:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
 393:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 394:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 395:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /* Exported functions --------------------------------------------------------*/
 396:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 397:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Functions USART Exported Functions
 398:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 399:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 400:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 401:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration Configuration functions
 402:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
 403:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 404:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 405:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 406:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  USART Enable
 407:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Enable
 408:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 409:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 410:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 411:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
 412:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 413:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UE);
 414:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 415:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 416:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 417:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  USART Disable (all USART prescalers and outputs are disabled)
 418:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   When USART is disabled, USART prescalers and outputs are stopped immediately,
 419:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         and current operations are discarded. The configuration of the USART is kept, but all t
 420:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         flags, in the USARTx_SR are set to their default values.
 421:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Disable
 422:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 423:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 424:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 425:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Disable(USART_TypeDef *USARTx)
 426:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 427:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 428:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 429:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 430:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 431:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Indicate if USART is enabled
 432:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_IsEnabled
 433:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 434:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 435:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 436:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabled(USART_TypeDef *USARTx)
 437:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 438:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE));
 439:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 440:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 441:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 442:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 443:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_EnableDirectionRx
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 18


 444:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 445:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 446:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 447:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionRx(USART_TypeDef *USARTx)
 448:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 449:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_RE);
 450:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 451:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 452:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 453:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Receiver Disable
 454:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_DisableDirectionRx
 455:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 456:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 457:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 458:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionRx(USART_TypeDef *USARTx)
 459:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 460:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_RE);
 461:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 462:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 463:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 464:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Transmitter Enable
 465:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_EnableDirectionTx
 466:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 467:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 468:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 469:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionTx(USART_TypeDef *USARTx)
 470:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 471:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_TE);
 472:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 473:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 474:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 475:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Transmitter Disable
 476:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_DisableDirectionTx
 477:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 478:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 479:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 480:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionTx(USART_TypeDef *USARTx)
 481:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 482:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_TE);
 483:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 484:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 485:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 486:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Configure simultaneously enabled/disabled states
 487:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         of Transmitter and Receiver
 488:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_SetTransferDirection\n
 489:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR1          TE            LL_USART_SetTransferDirection
 490:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 491:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 492:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 493:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 494:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 495:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 496:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 497:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 498:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferDirection(USART_TypeDef *USARTx, uint32_t TransferDirectio
 499:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 500:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 19


 501:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 502:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 503:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 504:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
 505:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_GetTransferDirection\n
 506:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR1          TE            LL_USART_GetTransferDirection
 507:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 508:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 509:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 510:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 511:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 512:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 513:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 514:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferDirection(USART_TypeDef *USARTx)
 515:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 516:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_RE | USART_CR1_TE));
 517:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 518:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 519:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 520:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled).
 521:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
 522:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
 523:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         (9th or 8th bit depending on data width) and parity is checked on the received data.
 524:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_SetParity\n
 525:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR1          PCE           LL_USART_SetParity
 526:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 527:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 528:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 529:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 530:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 531:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 532:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 533:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetParity(USART_TypeDef *USARTx, uint32_t Parity)
 534:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 535:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
 536:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 537:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 538:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 539:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
 540:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_GetParity\n
 541:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR1          PCE           LL_USART_GetParity
 542:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 543:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 544:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 545:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 546:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 547:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 548:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetParity(USART_TypeDef *USARTx)
 549:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 550:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
 551:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 552:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 553:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 554:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
 555:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_SetWakeUpMethod
 556:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 557:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  Method This parameter can be one of the following values:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 20


 558:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 559:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 560:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 561:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 562:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWakeUpMethod(USART_TypeDef *USARTx, uint32_t Method)
 563:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 564:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_WAKE, Method);
 565:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 566:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 567:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 568:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
 569:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_GetWakeUpMethod
 570:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 571:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 572:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 573:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 574:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 575:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWakeUpMethod(USART_TypeDef *USARTx)
 576:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 577:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_WAKE));
 578:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 579:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 580:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 581:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Set Word length (i.e. nb of data bits, excluding start and stop bits)
 582:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          M             LL_USART_SetDataWidth
 583:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 584:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 585:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 586:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 587:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 588:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 589:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDataWidth(USART_TypeDef *USARTx, uint32_t DataWidth)
 590:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 591:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_M, DataWidth);
 592:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 593:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 594:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 595:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
 596:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          M             LL_USART_GetDataWidth
 597:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 598:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 599:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 600:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 601:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 602:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDataWidth(USART_TypeDef *USARTx)
 603:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 604:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_M));
 605:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 606:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 607:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #if defined(USART_CR1_OVER8)
 608:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 609:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Set Oversampling to 8-bit or 16-bit mode
 610:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_SetOverSampling
 611:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 612:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
 613:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 614:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 21


 615:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 616:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 617:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetOverSampling(USART_TypeDef *USARTx, uint32_t OverSampling)
 618:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 619:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_OVER8, OverSampling);
 620:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 621:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 622:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 623:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Return Oversampling mode
 624:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_GetOverSampling
 625:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 626:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 627:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 628:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 629:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 630:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetOverSampling(USART_TypeDef *USARTx)
 631:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 632:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_OVER8));
 633:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 634:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 635:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #endif /* USART_OverSampling_Feature */
 636:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 637:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Configure if Clock pulse of the last data bit is output to the SCLK pin or not
 638:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 639:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 640:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_SetLastClkPulseOutput
 641:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 642:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  LastBitClockPulse This parameter can be one of the following values:
 643:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 644:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 645:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 646:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 647:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLastClkPulseOutput(USART_TypeDef *USARTx, uint32_t LastBitClockPul
 648:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 649:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBCL, LastBitClockPulse);
 650:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 651:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 652:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 653:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Retrieve Clock pulse of the last data bit output configuration
 654:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         (Last bit Clock pulse output to the SCLK pin or not)
 655:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 656:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 657:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_GetLastClkPulseOutput
 658:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 659:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 660:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 661:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 662:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 663:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLastClkPulseOutput(USART_TypeDef *USARTx)
 664:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 665:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBCL));
 666:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 667:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 668:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 669:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Select the phase of the clock output on the SCLK pin in synchronous mode
 670:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 671:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 22


 672:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_SetClockPhase
 673:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 674:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  ClockPhase This parameter can be one of the following values:
 675:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 676:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 677:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 678:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 679:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPhase(USART_TypeDef *USARTx, uint32_t ClockPhase)
 680:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 681:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA, ClockPhase);
 682:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 683:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 684:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 685:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Return phase of the clock output on the SCLK pin in synchronous mode
 686:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 687:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 688:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_GetClockPhase
 689:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 690:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 691:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 692:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 693:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 694:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPhase(USART_TypeDef *USARTx)
 695:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 696:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPHA));
 697:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 698:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 699:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 700:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Select the polarity of the clock output on the SCLK pin in synchronous mode
 701:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 702:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 703:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_SetClockPolarity
 704:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 705:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 706:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 707:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 708:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 709:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 710:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPolarity(USART_TypeDef *USARTx, uint32_t ClockPolarity)
 711:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 712:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPOL, ClockPolarity);
 713:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 714:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 715:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 716:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Return polarity of the clock output on the SCLK pin in synchronous mode
 717:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 718:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 719:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_GetClockPolarity
 720:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 721:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 722:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 723:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 724:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 725:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPolarity(USART_TypeDef *USARTx)
 726:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 727:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPOL));
 728:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 23


 729:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 730:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 731:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Configure Clock signal format (Phase Polarity and choice about output of last bit clock
 732:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 733:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 734:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 735:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clock Phase configuration using @ref LL_USART_SetClockPhase() function
 736:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clock Polarity configuration using @ref LL_USART_SetClockPolarity() function
 737:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Output of Last bit Clock pulse configuration using @ref LL_USART_SetLastClkPulseOutpu
 738:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_ConfigClock\n
 739:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR2          CPOL          LL_USART_ConfigClock\n
 740:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR2          LBCL          LL_USART_ConfigClock
 741:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 742:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  Phase This parameter can be one of the following values:
 743:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 744:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 745:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
 746:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 747:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 748:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  LBCPOutput This parameter can be one of the following values:
 749:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 750:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 751:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 752:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 753:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigClock(USART_TypeDef *USARTx, uint32_t Phase, uint32_t Polarity,
 754:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 755:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL, Phase | Polarity | LBCP
 756:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 757:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 758:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 759:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Enable Clock output on SCLK pin
 760:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 761:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 762:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_EnableSCLKOutput
 763:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 764:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 765:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 766:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSCLKOutput(USART_TypeDef *USARTx)
 767:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 768:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
 769:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 770:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 771:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 772:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Disable Clock output on SCLK pin
 773:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 774:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 775:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_DisableSCLKOutput
 776:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 777:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 778:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 779:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSCLKOutput(USART_TypeDef *USARTx)
 780:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 781:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
 782:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 783:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 784:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 785:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Indicate if Clock output on SCLK pin is enabled
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 24


 786:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 787:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 788:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_IsEnabledSCLKOutput
 789:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 790:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 791:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 792:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSCLKOutput(USART_TypeDef *USARTx)
 793:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 794:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_CLKEN) == (USART_CR2_CLKEN));
 795:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 796:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 797:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 798:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Set the length of the stop bits
 799:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_SetStopBitsLength
 800:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 801:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
 802:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
 803:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 804:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 805:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
 806:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 807:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 808:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetStopBitsLength(USART_TypeDef *USARTx, uint32_t StopBits)
 809:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 810:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 811:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 812:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 813:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 814:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Retrieve the length of the stop bits
 815:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_GetStopBitsLength
 816:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 817:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 818:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
 819:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 820:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 821:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
 822:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 823:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetStopBitsLength(USART_TypeDef *USARTx)
 824:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 825:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_STOP));
 826:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 827:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 828:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 829:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
 830:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 831:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Data Width configuration using @ref LL_USART_SetDataWidth() function
 832:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Parity Control and mode configuration using @ref LL_USART_SetParity() function
 833:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Stop bits configuration using @ref LL_USART_SetStopBitsLength() function
 834:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_ConfigCharacter\n
 835:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR1          PCE           LL_USART_ConfigCharacter\n
 836:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR1          M             LL_USART_ConfigCharacter\n
 837:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigCharacter
 838:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 839:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 840:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 841:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 842:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 25


 843:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 844:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 845:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 846:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
 847:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
 848:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 849:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 850:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
 851:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 852:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 853:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigCharacter(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t P
 854:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                               uint32_t StopBits)
 855:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 856:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
 857:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 858:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 859:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 860:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 861:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Set Address of the USART node.
 862:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
 863:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         for wake up with address mark detection.
 864:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_SetNodeAddress
 865:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 866:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  NodeAddress 4 bit Address of the USART node.
 867:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 868:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 869:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetNodeAddress(USART_TypeDef *USARTx, uint32_t NodeAddress)
 870:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 871:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ADD, (NodeAddress & USART_CR2_ADD));
 872:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 873:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 874:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 875:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Return 4 bit Address of the USART node as set in ADD field of CR2.
 876:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
 877:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_GetNodeAddress
 878:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 879:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Address of the USART node (Value between Min_Data=0 and Max_Data=255)
 880:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 881:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddress(USART_TypeDef *USARTx)
 882:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 883:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADD));
 884:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 885:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 886:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 887:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Enable RTS HW Flow Control
 888:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 889:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 890:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_EnableRTSHWFlowCtrl
 891:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 892:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 893:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 894:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef *USARTx)
 895:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 896:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_RTSE);
 897:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 898:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 899:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 26


 900:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Disable RTS HW Flow Control
 901:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 902:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 903:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_DisableRTSHWFlowCtrl
 904:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 905:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 906:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 907:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef *USARTx)
 908:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 909:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_RTSE);
 910:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 911:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 912:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 913:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Enable CTS HW Flow Control
 914:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 915:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 916:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_EnableCTSHWFlowCtrl
 917:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 918:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 919:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 920:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef *USARTx)
 921:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 922:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSE);
 923:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 924:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 925:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 926:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Disable CTS HW Flow Control
 927:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 928:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 929:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_DisableCTSHWFlowCtrl
 930:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 931:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 932:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 933:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef *USARTx)
 934:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 935:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSE);
 936:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 937:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 938:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 939:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
 940:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 941:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 942:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_SetHWFlowCtrl\n
 943:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_SetHWFlowCtrl
 944:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 945:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
 946:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
 947:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
 948:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
 949:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
 950:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 951:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 952:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetHWFlowCtrl(USART_TypeDef *USARTx, uint32_t HardwareFlowControl)
 953:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 954:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
 955:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 956:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 27


 957:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 958:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
 959:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 960:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 961:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_GetHWFlowCtrl\n
 962:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_GetHWFlowCtrl
 963:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 964:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 965:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
 966:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
 967:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
 968:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
 969:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 970:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetHWFlowCtrl(USART_TypeDef *USARTx)
 971:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 972:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
 973:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 974:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 975:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #if defined(USART_CR3_ONEBIT)
 976:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 977:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Enable One bit sampling method
 978:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_EnableOneBitSamp
 979:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 980:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 981:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 982:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOneBitSamp(USART_TypeDef *USARTx)
 983:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 984:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_ONEBIT);
 985:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 986:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 987:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 988:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Disable One bit sampling method
 989:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_DisableOneBitSamp
 990:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 991:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
 992:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
 993:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOneBitSamp(USART_TypeDef *USARTx)
 994:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 995:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_ONEBIT);
 996:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 997:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
 998:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
 999:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Indicate if One bit sampling method is enabled
1000:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_IsEnabledOneBitSamp
1001:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1002:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1003:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1004:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOneBitSamp(USART_TypeDef *USARTx)
1005:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1006:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_ONEBIT) == (USART_CR3_ONEBIT));
1007:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1008:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #endif /* USART_OneBitSampling_Feature */
1009:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1010:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #if defined(USART_CR1_OVER8)
1011:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1012:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1013:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 28


1014:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1015:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1016:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         (Baud rate value != 0)
1017:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1018:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1019:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1020:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1021:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1022:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1023:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1024:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1025:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1026:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t OverS
1027:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****                                           uint32_t BaudRate)
1028:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1029:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1030:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   {
1031:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, BaudRate));
1032:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   }
1033:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   else
1034:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   {
1035:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
1036:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   }
1037:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1038:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1039:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1040:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Return current Baud Rate value, according to USARTDIV present in BRR register
1041:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         (full BRR content), and to used Peripheral Clock and Oversampling mode values
1042:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
1043:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_GetBaudRate
1044:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1045:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1046:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1047:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1048:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1049:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Baud Rate
1050:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1051:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t O
1052:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1053:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   uint32_t usartdiv = 0x0U;
1054:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   uint32_t brrresult = 0x0U;
1055:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1056:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   usartdiv = USARTx->BRR;
1057:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1058:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1059:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   {
1060:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****     if ((usartdiv & 0xFFF7U) != 0U)
1061:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****     {
1062:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****       usartdiv = (uint16_t)((usartdiv & 0xFFF0U) | ((usartdiv & 0x0007U) << 1U)) ;
1063:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****       brrresult = (PeriphClk * 2U) / usartdiv;
1064:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****     }
1065:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   }
1066:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   else
1067:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   {
1068:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****     if ((usartdiv & 0xFFFFU) != 0U)
1069:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****     {
1070:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****       brrresult = PeriphClk / usartdiv;
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 29


1071:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****     }
1072:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   }
1073:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (brrresult);
1074:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1075:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #else
1076:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1077:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1078:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1079:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1080:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1081:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         (Baud rate value != 0)
1082:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1083:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1084:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1085:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1086:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1087:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1088:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudR
1089:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1090:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
1091:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1092:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1093:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1094:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Return current Baud Rate value, according to USARTDIV present in BRR register
1095:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         (full BRR content), and to used Peripheral Clock and Oversampling mode values
1096:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
1097:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_GetBaudRate
1098:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1099:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1100:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Baud Rate
1101:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1102:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk)
1103:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1104:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   uint32_t usartdiv = 0x0U;
1105:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   uint32_t brrresult = 0x0U;
1106:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1107:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   usartdiv = USARTx->BRR;
1108:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1109:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   if ((usartdiv & 0xFFFFU) != 0U)
1110:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   {
1111:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****     brrresult = PeriphClk / usartdiv;
1112:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   }
1113:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (brrresult);
1114:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1115:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** #endif /* USART_OverSampling_Feature */
1116:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1117:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1118:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
1119:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1120:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1121:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_IRDA Configuration functions related to Irda feature
1122:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
1123:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1124:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1125:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1126:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Enable IrDA mode
1127:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 30


1128:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1129:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_EnableIrda
1130:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1131:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1132:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1133:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIrda(USART_TypeDef *USARTx)
1134:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1135:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
1136:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1137:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1138:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1139:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Disable IrDA mode
1140:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1141:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1142:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_DisableIrda
1143:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1144:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1145:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1146:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIrda(USART_TypeDef *USARTx)
1147:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1148:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_IREN);
1149:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1150:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1151:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1152:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Indicate if IrDA mode is enabled
1153:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1154:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1155:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_IsEnabledIrda
1156:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1157:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1158:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1159:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIrda(USART_TypeDef *USARTx)
1160:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1161:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_IREN) == (USART_CR3_IREN));
1162:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1163:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1164:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1165:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Configure IrDA Power Mode (Normal or Low Power)
1166:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1167:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1168:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_SetIrdaPowerMode
1169:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1170:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  PowerMode This parameter can be one of the following values:
1171:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1172:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_LOW
1173:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1174:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1175:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPowerMode(USART_TypeDef *USARTx, uint32_t PowerMode)
1176:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1177:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_IRLP, PowerMode);
1178:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1179:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1180:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1181:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Retrieve IrDA Power Mode configuration (Normal or Low Power)
1182:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1183:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1184:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_GetIrdaPowerMode
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 31


1185:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1186:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1187:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1188:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1189:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1190:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPowerMode(USART_TypeDef *USARTx)
1191:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1192:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_IRLP));
1193:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1194:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1195:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1196:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Set Irda prescaler value, used for dividing the USART clock source
1197:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1198:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1199:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1200:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetIrdaPrescaler
1201:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1202:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0x00 and Max_Data=0xFF
1203:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1204:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1205:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1206:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1207:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, PrescalerValue);
1208:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1209:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1210:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1211:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Return Irda prescaler value, used for dividing the USART clock source
1212:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1213:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1214:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1215:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetIrdaPrescaler
1216:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1217:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Irda prescaler value (Value between Min_Data=0x00 and Max_Data=0xFF)
1218:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1219:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPrescaler(USART_TypeDef *USARTx)
1220:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1221:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1222:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1223:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1224:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1225:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
1226:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1227:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1228:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_Smartcard Configuration functions related to Smartcard feat
1229:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
1230:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1231:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1232:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1233:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Enable Smartcard NACK transmission
1234:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1235:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1236:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_EnableSmartcardNACK
1237:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1238:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1239:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1240:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcardNACK(USART_TypeDef *USARTx)
1241:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 32


1242:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_NACK);
1243:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1244:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1245:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1246:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Disable Smartcard NACK transmission
1247:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1248:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1249:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_DisableSmartcardNACK
1250:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1251:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1252:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1253:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcardNACK(USART_TypeDef *USARTx)
1254:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1255:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_NACK);
1256:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1257:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1258:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1259:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Indicate if Smartcard NACK transmission is enabled
1260:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1261:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1262:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_IsEnabledSmartcardNACK
1263:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1264:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1265:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1266:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcardNACK(USART_TypeDef *USARTx)
1267:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1268:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_NACK) == (USART_CR3_NACK));
1269:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1270:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1271:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1272:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Enable Smartcard mode
1273:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1274:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1275:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_EnableSmartcard
1276:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1277:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1278:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1279:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcard(USART_TypeDef *USARTx)
1280:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1281:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
1282:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1283:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1284:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1285:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Disable Smartcard mode
1286:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1287:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1288:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_DisableSmartcard
1289:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1290:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1291:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1292:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcard(USART_TypeDef *USARTx)
1293:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1294:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_SCEN);
1295:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1296:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1297:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1298:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Indicate if Smartcard mode is enabled
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 33


1299:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1300:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1301:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_IsEnabledSmartcard
1302:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1303:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1304:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1305:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcard(USART_TypeDef *USARTx)
1306:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1307:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_SCEN) == (USART_CR3_SCEN));
1308:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1309:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1310:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1311:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Set Smartcard prescaler value, used for dividing the USART clock
1312:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1313:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1314:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1315:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetSmartcardPrescaler
1316:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1317:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0 and Max_Data=31
1318:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1319:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1320:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1321:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1322:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, PrescalerValue);
1323:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1324:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1325:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1326:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Return Smartcard prescaler value, used for dividing the USART clock
1327:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1328:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1329:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1330:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetSmartcardPrescaler
1331:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1332:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Smartcard prescaler value (Value between Min_Data=0 and Max_Data=31)
1333:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1334:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardPrescaler(USART_TypeDef *USARTx)
1335:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1336:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1337:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1338:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1339:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1340:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Set Smartcard Guard time value, expressed in nb of baud clocks periods
1341:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1342:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1343:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1344:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_SetSmartcardGuardTime
1345:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1346:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  GuardTime Value between Min_Data=0x00 and Max_Data=0xFF
1347:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1348:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1349:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardGuardTime(USART_TypeDef *USARTx, uint32_t GuardTime)
1350:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1351:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_GT, GuardTime << USART_POSITION_GTPR_GT);
1352:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1353:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1354:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1355:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Return Smartcard Guard time value, expressed in nb of baud clocks periods
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 34


1356:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1357:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1358:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1359:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_GetSmartcardGuardTime
1360:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1361:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Smartcard Guard time value (Value between Min_Data=0x00 and Max_Data=0xFF)
1362:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1363:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardGuardTime(USART_TypeDef *USARTx)
1364:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1365:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_GT) >> USART_POSITION_GTPR_GT);
1366:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1367:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1368:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1369:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
1370:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1371:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1372:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_HalfDuplex Configuration functions related to Half Duplex f
1373:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
1374:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1375:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1376:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1377:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Enable Single Wire Half-Duplex mode
1378:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1379:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1380:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_EnableHalfDuplex
1381:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1382:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1383:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1384:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableHalfDuplex(USART_TypeDef *USARTx)
1385:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1386:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
1387:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1388:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1389:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1390:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Disable Single Wire Half-Duplex mode
1391:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1392:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1393:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_DisableHalfDuplex
1394:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1395:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1396:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1397:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableHalfDuplex(USART_TypeDef *USARTx)
1398:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1399:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
1400:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1401:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1402:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1403:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Indicate if Single Wire Half-Duplex mode is enabled
1404:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1405:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1406:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_IsEnabledHalfDuplex
1407:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1408:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1409:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1410:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledHalfDuplex(USART_TypeDef *USARTx)
1411:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1412:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_HDSEL) == (USART_CR3_HDSEL));
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 35


1413:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1414:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1415:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1416:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
1417:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1418:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1419:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_LIN Configuration functions related to LIN feature
1420:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
1421:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1422:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1423:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1424:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Set LIN Break Detection Length
1425:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1426:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1427:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_SetLINBrkDetectionLen
1428:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1429:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  LINBDLength This parameter can be one of the following values:
1430:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
1431:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
1432:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1433:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1434:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLINBrkDetectionLen(USART_TypeDef *USARTx, uint32_t LINBDLength)
1435:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1436:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBDL, LINBDLength);
1437:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1438:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1439:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1440:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Return LIN Break Detection Length
1441:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1442:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1443:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_GetLINBrkDetectionLen
1444:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1445:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1446:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
1447:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
1448:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1449:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLINBrkDetectionLen(USART_TypeDef *USARTx)
1450:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1451:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBDL));
1452:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1453:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1454:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1455:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Enable LIN mode
1456:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1457:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1458:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_EnableLIN
1459:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1460:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1461:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1462:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableLIN(USART_TypeDef *USARTx)
1463:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1464:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
1465:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1466:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1467:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1468:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Disable LIN mode
1469:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 36


1470:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1471:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_DisableLIN
1472:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1473:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1474:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1475:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableLIN(USART_TypeDef *USARTx)
1476:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1477:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LINEN);
1478:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1479:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1480:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1481:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Indicate if LIN mode is enabled
1482:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1483:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1484:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_IsEnabledLIN
1485:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1486:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1487:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1488:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledLIN(USART_TypeDef *USARTx)
1489:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1490:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_LINEN) == (USART_CR2_LINEN));
1491:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1492:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1493:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1494:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
1495:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1496:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1497:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_AdvancedConfiguration Advanced Configurations services
1498:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
1499:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1500:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1501:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1502:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Asynchronous Mode (UART)
1503:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   In UART mode, the following bits must be kept cleared:
1504:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1505:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
1506:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1507:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1508:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1509:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1510:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1511:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1512:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1513:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1514:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1515:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Asynchronous Mode
1516:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
1517:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         dedicated functions
1518:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigAsyncMode\n
1519:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigAsyncMode\n
1520:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigAsyncMode\n
1521:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigAsyncMode\n
1522:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigAsyncMode
1523:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1524:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1525:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1526:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigAsyncMode(USART_TypeDef *USARTx)
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 37


1527:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1528:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   /* In Asynchronous mode, the following bits must be kept cleared:
1529:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   - LINEN, CLKEN bits in the USART_CR2 register,
1530:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.*/
1531:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1532:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
1533:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1534:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1535:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1536:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Synchronous Mode
1537:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   In Synchronous mode, the following bits must be kept cleared:
1538:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1539:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1540:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1541:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1542:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         This function also sets the USART in Synchronous mode.
1543:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1544:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1545:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1546:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1547:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1548:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1549:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1550:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
1551:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Synchronous Mode
1552:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, Clock Polarity, ...) should be set using
1553:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         dedicated functions
1554:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSyncMode\n
1555:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSyncMode\n
1556:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSyncMode\n
1557:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigSyncMode\n
1558:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSyncMode
1559:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1560:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1561:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1562:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSyncMode(USART_TypeDef *USARTx)
1563:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1564:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   /* In Synchronous mode, the following bits must be kept cleared:
1565:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
1566:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.*/
1567:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
1568:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
1569:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   /* set the UART/USART in Synchronous mode */
1570:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
1571:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1572:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1573:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1574:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in LIN Mode
1575:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   In LIN mode, the following bits must be kept cleared:
1576:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
1577:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1578:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1579:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1580:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         This function also set the UART/USART in LIN mode.
1581:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1582:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1583:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 38


1584:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1585:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
1586:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1587:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1588:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1589:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Set LINEN in CR2 using @ref LL_USART_EnableLIN() function
1590:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Other remaining configurations items related to LIN Mode
1591:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         (as Baud Rate, Word length, LIN Break Detection Length, ...) should be set using
1592:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         dedicated functions
1593:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_ConfigLINMode\n
1594:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigLINMode\n
1595:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR2          LINEN         LL_USART_ConfigLINMode\n
1596:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigLINMode\n
1597:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigLINMode\n
1598:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigLINMode
1599:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1600:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1601:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1602:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigLINMode(USART_TypeDef *USARTx)
1603:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1604:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   /* In LIN mode, the following bits must be kept cleared:
1605:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   - STOP and CLKEN bits in the USART_CR2 register,
1606:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.*/
1607:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_CLKEN | USART_CR2_STOP));
1608:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_SCEN | USART_CR3_HDSEL));
1609:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   /* Set the UART/USART in LIN mode */
1610:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
1611:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1612:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1613:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1614:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Half Duplex Mode
1615:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   In Half Duplex mode, the following bits must be kept cleared:
1616:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1617:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
1618:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1619:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1620:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         This function also sets the UART/USART in Half Duplex mode.
1621:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1622:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1623:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1624:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1625:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1626:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1627:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1628:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Set HDSEL in CR3 using @ref LL_USART_EnableHalfDuplex() function
1629:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Half Duplex Mode
1630:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
1631:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         dedicated functions
1632:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigHalfDuplexMode\n
1633:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigHalfDuplexMode\n
1634:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigHalfDuplexMode\n
1635:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigHalfDuplexMode\n
1636:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigHalfDuplexMode
1637:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1638:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1639:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1640:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigHalfDuplexMode(USART_TypeDef *USARTx)
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 39


1641:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1642:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   /* In Half Duplex mode, the following bits must be kept cleared:
1643:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
1644:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   - SCEN and IREN bits in the USART_CR3 register.*/
1645:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1646:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN));
1647:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   /* set the UART/USART in Half Duplex mode */
1648:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
1649:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1650:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1651:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1652:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Smartcard Mode
1653:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   In Smartcard mode, the following bits must be kept cleared:
1654:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1655:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1656:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1657:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         This function also configures Stop bits to 1.5 bits and
1658:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         sets the USART in Smartcard mode (SCEN bit).
1659:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Clock Output is also enabled (CLKEN).
1660:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1661:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1662:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1663:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1664:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1665:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1666:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
1667:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
1668:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Set SCEN in CR3 using @ref LL_USART_EnableSmartcard() function
1669:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Smartcard Mode
1670:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
1671:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         dedicated functions
1672:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSmartcardMode\n
1673:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigSmartcardMode\n
1674:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSmartcardMode\n
1675:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSmartcardMode\n
1676:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSmartcardMode
1677:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1678:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1679:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1680:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSmartcardMode(USART_TypeDef *USARTx)
1681:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1682:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   /* In Smartcard mode, the following bits must be kept cleared:
1683:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
1684:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   - IREN and HDSEL bits in the USART_CR3 register.*/
1685:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
1686:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_HDSEL));
1687:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   /* Configure Stop bits to 1.5 bits */
1688:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   /* Synchronous mode is activated by default */
1689:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR2, (USART_CR2_STOP_0 | USART_CR2_STOP_1 | USART_CR2_CLKEN));
1690:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   /* set the UART/USART in Smartcard mode */
1691:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
1692:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1693:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1694:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1695:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Irda Mode
1696:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   In IRDA mode, the following bits must be kept cleared:
1697:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 40


1698:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
1699:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1700:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1701:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         This function also sets the UART/USART in IRDA mode (IREN bit).
1702:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1703:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1704:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1705:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1706:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1707:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1708:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1709:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
1710:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Set IREN in CR3 using @ref LL_USART_EnableIrda() function
1711:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Irda Mode
1712:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         (as Baud Rate, Word length, Power mode, ...) should be set using
1713:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         dedicated functions
1714:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigIrdaMode\n
1715:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigIrdaMode\n
1716:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigIrdaMode\n
1717:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigIrdaMode\n
1718:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigIrdaMode\n
1719:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigIrdaMode
1720:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1721:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1722:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1723:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigIrdaMode(USART_TypeDef *USARTx)
1724:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1725:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   /* In IRDA mode, the following bits must be kept cleared:
1726:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   - LINEN, STOP and CLKEN bits in the USART_CR2 register,
1727:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   - SCEN and HDSEL bits in the USART_CR3 register.*/
1728:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN | USART_CR2_STOP));
1729:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
1730:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   /* set the UART/USART in IRDA mode */
1731:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
1732:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1733:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1734:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1735:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Multi processor Mode
1736:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         (several USARTs connected in a network, one of the USARTs can be the master,
1737:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         its TX output connected to the RX inputs of the other slaves USARTs).
1738:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   In MultiProcessor mode, the following bits must be kept cleared:
1739:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1740:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
1741:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1742:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1743:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1744:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1745:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1746:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1747:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1748:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1749:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1750:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Multi processor Mode
1751:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         (as Baud Rate, Wake Up Method, Node address, ...) should be set using
1752:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         dedicated functions
1753:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigMultiProcessMode\n
1754:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigMultiProcessMode\n
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 41


1755:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigMultiProcessMode\n
1756:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigMultiProcessMode\n
1757:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigMultiProcessMode
1758:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1759:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1760:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1761:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigMultiProcessMode(USART_TypeDef *USARTx)
1762:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1763:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   /* In Multi Processor mode, the following bits must be kept cleared:
1764:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
1765:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.*/
1766:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1767:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
1768:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1769:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1770:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1771:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @}
1772:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1773:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1774:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_FLAG_Management FLAG_Management
1775:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @{
1776:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1777:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1778:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1779:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Check if the USART Parity Error Flag is set or not
1780:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll SR           PE            LL_USART_IsActiveFlag_PE
1781:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1782:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1783:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1784:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_PE(USART_TypeDef *USARTx)
1785:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1786:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_PE) == (USART_SR_PE));
1787:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1788:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1789:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1790:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Check if the USART Framing Error Flag is set or not
1791:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll SR           FE            LL_USART_IsActiveFlag_FE
1792:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1793:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1794:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1795:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_FE(USART_TypeDef *USARTx)
1796:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1797:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_FE) == (USART_SR_FE));
1798:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1799:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1800:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1801:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Check if the USART Noise error detected Flag is set or not
1802:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll SR           NF            LL_USART_IsActiveFlag_NE
1803:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1804:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1805:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1806:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_NE(USART_TypeDef *USARTx)
1807:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1808:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_NE) == (USART_SR_NE));
1809:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1810:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1811:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 42


1812:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Check if the USART OverRun Error Flag is set or not
1813:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll SR           ORE           LL_USART_IsActiveFlag_ORE
1814:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1815:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1816:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1817:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ORE(USART_TypeDef *USARTx)
1818:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1819:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_ORE) == (USART_SR_ORE));
1820:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1821:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1822:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1823:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Check if the USART IDLE line detected Flag is set or not
1824:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll SR           IDLE          LL_USART_IsActiveFlag_IDLE
1825:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1826:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1827:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1828:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_IDLE(USART_TypeDef *USARTx)
 341              		.loc 2 1828 26 view .LVU56
 342              	.LBB11:
1829:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1830:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_IDLE) == (USART_SR_IDLE));
 343              		.loc 2 1830 3 view .LVU57
 344              		.loc 2 1830 11 is_stmt 0 view .LVU58
 345 0004 0A4B     		ldr	r3, .L30
 346 0006 1B68     		ldr	r3, [r3]
 347              	.LVL5:
 348              		.loc 2 1830 11 view .LVU59
 349              	.LBE11:
 350              	.LBE10:
 351              		.loc 1 193 6 view .LVU60
 352 0008 13F0100F 		tst	r3, #16
 353 000c 0AD0     		beq	.L28
 194:Src/stm32f1xx_it.c ****   {
 195:Src/stm32f1xx_it.c ****     /* Clear IDLE line flag */
 196:Src/stm32f1xx_it.c ****     LL_USART_ClearFlag_IDLE(USART1);
 354              		.loc 1 196 5 is_stmt 1 view .LVU61
 355              	.LVL6:
 356              	.LBB12:
 357              	.LBI12:
1831:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1832:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1833:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1834:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Check if the USART Read Data Register Not Empty Flag is set or not
1835:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll SR           RXNE          LL_USART_IsActiveFlag_RXNE
1836:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1837:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1838:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1839:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXNE(USART_TypeDef *USARTx)
1840:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1841:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_RXNE) == (USART_SR_RXNE));
1842:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1843:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1844:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1845:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Check if the USART Transmission Complete Flag is set or not
1846:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll SR           TC            LL_USART_IsActiveFlag_TC
1847:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1848:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 43


1849:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1850:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TC(USART_TypeDef *USARTx)
1851:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1852:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_TC) == (USART_SR_TC));
1853:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1854:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1855:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1856:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Check if the USART Transmit Data Register Empty Flag is set or not
1857:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll SR           TXE           LL_USART_IsActiveFlag_TXE
1858:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1859:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1860:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1861:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXE(USART_TypeDef *USARTx)
1862:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1863:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_TXE) == (USART_SR_TXE));
1864:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1865:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1866:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1867:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Check if the USART LIN Break Detection Flag is set or not
1868:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1869:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1870:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll SR           LBD           LL_USART_IsActiveFlag_LBD
1871:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1872:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1873:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1874:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_LBD(USART_TypeDef *USARTx)
1875:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1876:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_LBD) == (USART_SR_LBD));
1877:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1878:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1879:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1880:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Check if the USART CTS Flag is set or not
1881:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1882:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1883:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll SR           CTS           LL_USART_IsActiveFlag_nCTS
1884:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1885:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1886:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1887:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_nCTS(USART_TypeDef *USARTx)
1888:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1889:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_CTS) == (USART_SR_CTS));
1890:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1891:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1892:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1893:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Check if the USART Send Break Flag is set or not
1894:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          SBK           LL_USART_IsActiveFlag_SBK
1895:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1896:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1897:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1898:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_SBK(USART_TypeDef *USARTx)
1899:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1900:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_SBK) == (USART_CR1_SBK));
1901:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1902:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1903:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1904:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Check if the USART Receive Wake Up from mute mode Flag is set or not
1905:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll CR1          RWU           LL_USART_IsActiveFlag_RWU
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 44


1906:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1907:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1908:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1909:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RWU(USART_TypeDef *USARTx)
1910:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1911:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_RWU) == (USART_CR1_RWU));
1912:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1913:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1914:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1915:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Clear Parity Error Flag
1916:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
1917:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1918:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as
1919:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         NE, FE, ORE, IDLE would also be cleared.
1920:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll SR           PE            LL_USART_ClearFlag_PE
1921:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1922:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1923:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1924:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_PE(USART_TypeDef *USARTx)
1925:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1926:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   __IO uint32_t tmpreg;
1927:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   tmpreg = USARTx->SR;
1928:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   (void) tmpreg;
1929:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   tmpreg = USARTx->DR;
1930:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   (void) tmpreg;
1931:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1932:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1933:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1934:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Clear Framing Error Flag
1935:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
1936:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1937:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as
1938:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         PE, NE, ORE, IDLE would also be cleared.
1939:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll SR           FE            LL_USART_ClearFlag_FE
1940:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1941:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1942:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1943:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_FE(USART_TypeDef *USARTx)
1944:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1945:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   __IO uint32_t tmpreg;
1946:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   tmpreg = USARTx->SR;
1947:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   (void) tmpreg;
1948:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   tmpreg = USARTx->DR;
1949:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   (void) tmpreg;
1950:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1951:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1952:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1953:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Clear Noise detected Flag
1954:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
1955:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1956:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as
1957:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         PE, FE, ORE, IDLE would also be cleared.
1958:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll SR           NF            LL_USART_ClearFlag_NE
1959:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1960:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1961:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1962:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_NE(USART_TypeDef *USARTx)
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 45


1963:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1964:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   __IO uint32_t tmpreg;
1965:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   tmpreg = USARTx->SR;
1966:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   (void) tmpreg;
1967:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   tmpreg = USARTx->DR;
1968:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   (void) tmpreg;
1969:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1970:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1971:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1972:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Clear OverRun Error Flag
1973:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
1974:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1975:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as
1976:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         PE, NE, FE, IDLE would also be cleared.
1977:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll SR           ORE           LL_USART_ClearFlag_ORE
1978:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1979:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1980:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
1981:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_ORE(USART_TypeDef *USARTx)
1982:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
1983:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   __IO uint32_t tmpreg;
1984:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   tmpreg = USARTx->SR;
1985:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   (void) tmpreg;
1986:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   tmpreg = USARTx->DR;
1987:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   (void) tmpreg;
1988:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
1989:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** 
1990:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** /**
1991:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @brief  Clear IDLE line detected Flag
1992:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
1993:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1994:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as
1995:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   *         PE, NE, FE, ORE would also be cleared.
1996:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @rmtoll SR           IDLE          LL_USART_ClearFlag_IDLE
1997:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1998:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   * @retval None
1999:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   */
2000:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_IDLE(USART_TypeDef *USARTx)
 358              		.loc 2 2000 22 view .LVU62
 359              	.LBB13:
2001:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
2002:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   __IO uint32_t tmpreg;
 360              		.loc 2 2002 3 view .LVU63
2003:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   tmpreg = USARTx->SR;
 361              		.loc 2 2003 3 view .LVU64
 362              		.loc 2 2003 18 is_stmt 0 view .LVU65
 363 000e 084B     		ldr	r3, .L30
 364 0010 1A68     		ldr	r2, [r3]
 365              		.loc 2 2003 10 view .LVU66
 366 0012 0192     		str	r2, [sp, #4]
2004:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   (void) tmpreg;
 367              		.loc 2 2004 3 is_stmt 1 view .LVU67
 368 0014 019A     		ldr	r2, [sp, #4]
2005:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   tmpreg = USARTx->DR;
 369              		.loc 2 2005 3 view .LVU68
 370              		.loc 2 2005 18 is_stmt 0 view .LVU69
 371 0016 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 46


 372              		.loc 2 2005 10 view .LVU70
 373 0018 0193     		str	r3, [sp, #4]
2006:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   (void) tmpreg;
 374              		.loc 2 2006 3 is_stmt 1 view .LVU71
 375 001a 019B     		ldr	r3, [sp, #4]
 376              	.LVL7:
 377              		.loc 2 2006 3 is_stmt 0 view .LVU72
 378              	.LBE13:
 379              	.LBE12:
 197:Src/stm32f1xx_it.c ****     /* Sart DMA timer */
 198:Src/stm32f1xx_it.c ****     dma_uart1_rx.timer = 2;
 380              		.loc 1 198 5 is_stmt 1 view .LVU73
 381              		.loc 1 198 24 is_stmt 0 view .LVU74
 382 001c 054B     		ldr	r3, .L30+4
 383 001e 0222     		movs	r2, #2
 384 0020 A3F80424 		strh	r2, [r3, #1028]	@ movhi
 385              	.L28:
 199:Src/stm32f1xx_it.c ****   }
 200:Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 386              		.loc 1 200 3 is_stmt 1 view .LVU75
 387 0024 0448     		ldr	r0, .L30+8
 388 0026 FFF7FEFF 		bl	HAL_UART_IRQHandler
 389              	.LVL8:
 201:Src/stm32f1xx_it.c **** }
 390              		.loc 1 201 1 is_stmt 0 view .LVU76
 391 002a 03B0     		add	sp, sp, #12
 392              	.LCFI4:
 393              		.cfi_def_cfa_offset 4
 394              		@ sp needed
 395 002c 5DF804FB 		ldr	pc, [sp], #4
 396              	.L31:
 397              		.align	2
 398              	.L30:
 399 0030 00380140 		.word	1073821696
 400 0034 00000000 		.word	dma_uart1_rx
 401 0038 00000000 		.word	huart1
 402              		.cfi_endproc
 403              	.LFE207:
 405              		.section	.text.USART2_IRQHandler,"ax",%progbits
 406              		.align	1
 407              		.global	USART2_IRQHandler
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 412              	USART2_IRQHandler:
 413              	.LFB208:
 202:Src/stm32f1xx_it.c **** 
 203:Src/stm32f1xx_it.c **** void USART2_IRQHandler(void)
 204:Src/stm32f1xx_it.c **** {
 414              		.loc 1 204 1 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 8
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418 0000 00B5     		push	{lr}
 419              	.LCFI5:
 420              		.cfi_def_cfa_offset 4
 421              		.cfi_offset 14, -4
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 47


 422 0002 83B0     		sub	sp, sp, #12
 423              	.LCFI6:
 424              		.cfi_def_cfa_offset 16
 205:Src/stm32f1xx_it.c ****   if (LL_USART_IsActiveFlag_IDLE(USART2))
 425              		.loc 1 205 3 view .LVU78
 426              	.LVL9:
 427              	.LBB14:
 428              	.LBI14:
1828:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 429              		.loc 2 1828 26 view .LVU79
 430              	.LBB15:
1830:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 431              		.loc 2 1830 3 view .LVU80
1830:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 432              		.loc 2 1830 11 is_stmt 0 view .LVU81
 433 0004 0A4B     		ldr	r3, .L35
 434 0006 1B68     		ldr	r3, [r3]
 435              	.LVL10:
1830:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** }
 436              		.loc 2 1830 11 view .LVU82
 437              	.LBE15:
 438              	.LBE14:
 439              		.loc 1 205 6 view .LVU83
 440 0008 13F0100F 		tst	r3, #16
 441 000c 0AD0     		beq	.L33
 206:Src/stm32f1xx_it.c ****   {
 207:Src/stm32f1xx_it.c ****     /* Clear IDLE line flag */
 208:Src/stm32f1xx_it.c ****     LL_USART_ClearFlag_IDLE(USART2);
 442              		.loc 1 208 5 is_stmt 1 view .LVU84
 443              	.LVL11:
 444              	.LBB16:
 445              	.LBI16:
2000:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h **** {
 446              		.loc 2 2000 22 view .LVU85
 447              	.LBB17:
2002:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   tmpreg = USARTx->SR;
 448              		.loc 2 2002 3 view .LVU86
2003:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   (void) tmpreg;
 449              		.loc 2 2003 3 view .LVU87
2003:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   (void) tmpreg;
 450              		.loc 2 2003 18 is_stmt 0 view .LVU88
 451 000e 084B     		ldr	r3, .L35
 452 0010 1A68     		ldr	r2, [r3]
2003:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   (void) tmpreg;
 453              		.loc 2 2003 10 view .LVU89
 454 0012 0192     		str	r2, [sp, #4]
2004:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   tmpreg = USARTx->DR;
 455              		.loc 2 2004 3 is_stmt 1 view .LVU90
 456 0014 019A     		ldr	r2, [sp, #4]
2005:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   (void) tmpreg;
 457              		.loc 2 2005 3 view .LVU91
2005:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   (void) tmpreg;
 458              		.loc 2 2005 18 is_stmt 0 view .LVU92
 459 0016 5B68     		ldr	r3, [r3, #4]
2005:c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Driver/Inc\stm32f1xx_ll_usart.h ****   (void) tmpreg;
 460              		.loc 2 2005 10 view .LVU93
 461 0018 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 48


 462              		.loc 2 2006 3 is_stmt 1 view .LVU94
 463 001a 019B     		ldr	r3, [sp, #4]
 464              	.LVL12:
 465              		.loc 2 2006 3 is_stmt 0 view .LVU95
 466              	.LBE17:
 467              	.LBE16:
 209:Src/stm32f1xx_it.c ****     /* Sart DMA timer */
 210:Src/stm32f1xx_it.c ****     dma_uart2_rx.timer = 2;
 468              		.loc 1 210 5 is_stmt 1 view .LVU96
 469              		.loc 1 210 24 is_stmt 0 view .LVU97
 470 001c 054B     		ldr	r3, .L35+4
 471 001e 0222     		movs	r2, #2
 472 0020 A3F80424 		strh	r2, [r3, #1028]	@ movhi
 473              	.L33:
 211:Src/stm32f1xx_it.c ****   }
 212:Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 474              		.loc 1 212 3 is_stmt 1 view .LVU98
 475 0024 0448     		ldr	r0, .L35+8
 476 0026 FFF7FEFF 		bl	HAL_UART_IRQHandler
 477              	.LVL13:
 213:Src/stm32f1xx_it.c **** }
 478              		.loc 1 213 1 is_stmt 0 view .LVU99
 479 002a 03B0     		add	sp, sp, #12
 480              	.LCFI7:
 481              		.cfi_def_cfa_offset 4
 482              		@ sp needed
 483 002c 5DF804FB 		ldr	pc, [sp], #4
 484              	.L36:
 485              		.align	2
 486              	.L35:
 487 0030 00440040 		.word	1073759232
 488 0034 00000000 		.word	dma_uart2_rx
 489 0038 00000000 		.word	huart2
 490              		.cfi_endproc
 491              	.LFE208:
 493              		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 494              		.align	1
 495              		.global	DMA1_Channel5_IRQHandler
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 500              	DMA1_Channel5_IRQHandler:
 501              	.LFB209:
 214:Src/stm32f1xx_it.c **** 
 215:Src/stm32f1xx_it.c **** void DMA1_Channel5_IRQHandler(void)
 216:Src/stm32f1xx_it.c **** {
 502              		.loc 1 216 1 is_stmt 1 view -0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506 0000 08B5     		push	{r3, lr}
 507              	.LCFI8:
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 3, -8
 510              		.cfi_offset 14, -4
 217:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */
 218:Src/stm32f1xx_it.c **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 49


 219:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 0 */
 220:Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 511              		.loc 1 220 3 view .LVU101
 512 0002 0248     		ldr	r0, .L39
 513 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 514              	.LVL14:
 221:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */
 222:Src/stm32f1xx_it.c **** 
 223:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 1 */
 224:Src/stm32f1xx_it.c **** }
 515              		.loc 1 224 1 is_stmt 0 view .LVU102
 516 0008 08BD     		pop	{r3, pc}
 517              	.L40:
 518 000a 00BF     		.align	2
 519              	.L39:
 520 000c 00000000 		.word	hdma_usart1_rx
 521              		.cfi_endproc
 522              	.LFE209:
 524              		.section	.text.DMA1_Channel6_IRQHandler,"ax",%progbits
 525              		.align	1
 526              		.global	DMA1_Channel6_IRQHandler
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 531              	DMA1_Channel6_IRQHandler:
 532              	.LFB210:
 225:Src/stm32f1xx_it.c **** 
 226:Src/stm32f1xx_it.c **** /**
 227:Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel5 global interrupt.
 228:Src/stm32f1xx_it.c ****   */
 229:Src/stm32f1xx_it.c **** void DMA1_Channel6_IRQHandler(void)
 230:Src/stm32f1xx_it.c **** {
 533              		.loc 1 230 1 is_stmt 1 view -0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537 0000 08B5     		push	{r3, lr}
 538              	.LCFI9:
 539              		.cfi_def_cfa_offset 8
 540              		.cfi_offset 3, -8
 541              		.cfi_offset 14, -4
 231:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */
 232:Src/stm32f1xx_it.c **** 
 233:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 0 */
 234:Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_rx);
 542              		.loc 1 234 3 view .LVU104
 543 0002 0248     		ldr	r0, .L43
 544 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 545              	.LVL15:
 235:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */
 236:Src/stm32f1xx_it.c **** 
 237:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 1 */
 238:Src/stm32f1xx_it.c **** }
 546              		.loc 1 238 1 is_stmt 0 view .LVU105
 547 0008 08BD     		pop	{r3, pc}
 548              	.L44:
 549 000a 00BF     		.align	2
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 50


 550              	.L43:
 551 000c 00000000 		.word	hdma_usart2_rx
 552              		.cfi_endproc
 553              	.LFE210:
 555              		.text
 556              	.Letext0:
 557              		.file 3 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
 558              		.file 4 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 559              		.file 5 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/CMSIS/Device/ST/S
 560              		.file 6 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Dri
 561              		.file 7 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Dri
 562              		.file 8 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Dri
 563              		.file 9 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Dri
 564              		.file 10 "c:/Users/Black_Life/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.4/Drivers/STM32F1xx_HAL_Dr
 565              		.file 11 "User/Modbus/usart.h"
 566              		.file 12 "Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s 			page 51


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:18     .text.NMI_Handler:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:38     .text.HardFault_Handler:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:44     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:61     .text.MemManage_Handler:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:67     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:84     .text.BusFault_Handler:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:90     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:107    .text.UsageFault_Handler:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:113    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:130    .text.SVC_Handler:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:136    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:149    .text.DebugMon_Handler:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:155    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:168    .text.PendSV_Handler:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:174    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:187    .text.SysTick_Handler:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:193    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:278    .text.SysTick_Handler:00000058 $d
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:286    .text.USB_LP_CAN1_RX0_IRQHandler:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:292    .text.USB_LP_CAN1_RX0_IRQHandler:00000000 USB_LP_CAN1_RX0_IRQHandler
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:312    .text.USB_LP_CAN1_RX0_IRQHandler:0000000c $d
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:317    .text.USART1_IRQHandler:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:323    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:399    .text.USART1_IRQHandler:00000030 $d
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:406    .text.USART2_IRQHandler:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:412    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:487    .text.USART2_IRQHandler:00000030 $d
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:494    .text.DMA1_Channel5_IRQHandler:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:500    .text.DMA1_Channel5_IRQHandler:00000000 DMA1_Channel5_IRQHandler
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:520    .text.DMA1_Channel5_IRQHandler:0000000c $d
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:525    .text.DMA1_Channel6_IRQHandler:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:531    .text.DMA1_Channel6_IRQHandler:00000000 DMA1_Channel6_IRQHandler
C:\Users\BLACK_~1\AppData\Local\Temp\cc7mYEXg.s:551    .text.DMA1_Channel6_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
dma_uart1_rx
dma_uart2_rx
hdma_usart1_rx
hdma_usart2_rx
HAL_PCD_IRQHandler
hpcd_USB_FS
HAL_UART_IRQHandler
huart1
huart2
HAL_DMA_IRQHandler
