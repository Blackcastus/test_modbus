ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mbfuncholding.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.eMBFuncWriteHoldingRegister,"ax",%progbits
  18              		.align	1
  19              		.global	eMBFuncWriteHoldingRegister
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	eMBFuncWriteHoldingRegister:
  25              	.LVL0:
  26              	.LFB65:
  27              		.file 1 "FreeModbus/functions/mbfuncholding.c"
   1:FreeModbus/functions/mbfuncholding.c **** /* 
   2:FreeModbus/functions/mbfuncholding.c ****  * FreeModbus Libary: A portable Modbus implementation for Modbus ASCII/RTU.
   3:FreeModbus/functions/mbfuncholding.c ****  * Copyright (c) 2006-2018 Christian Walter <cwalter@embedded-solutions.at>
   4:FreeModbus/functions/mbfuncholding.c ****  * All rights reserved.
   5:FreeModbus/functions/mbfuncholding.c ****  *
   6:FreeModbus/functions/mbfuncholding.c ****  * Redistribution and use in source and binary forms, with or without
   7:FreeModbus/functions/mbfuncholding.c ****  * modification, are permitted provided that the following conditions
   8:FreeModbus/functions/mbfuncholding.c ****  * are met:
   9:FreeModbus/functions/mbfuncholding.c ****  * 1. Redistributions of source code must retain the above copyright
  10:FreeModbus/functions/mbfuncholding.c ****  *    notice, this list of conditions and the following disclaimer.
  11:FreeModbus/functions/mbfuncholding.c ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:FreeModbus/functions/mbfuncholding.c ****  *    notice, this list of conditions and the following disclaimer in the
  13:FreeModbus/functions/mbfuncholding.c ****  *    documentation and/or other materials provided with the distribution.
  14:FreeModbus/functions/mbfuncholding.c ****  * 3. The name of the author may not be used to endorse or promote products
  15:FreeModbus/functions/mbfuncholding.c ****  *    derived from this software without specific prior written permission.
  16:FreeModbus/functions/mbfuncholding.c ****  *
  17:FreeModbus/functions/mbfuncholding.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  18:FreeModbus/functions/mbfuncholding.c ****  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  19:FreeModbus/functions/mbfuncholding.c ****  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  20:FreeModbus/functions/mbfuncholding.c ****  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
  21:FreeModbus/functions/mbfuncholding.c ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  22:FreeModbus/functions/mbfuncholding.c ****  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  23:FreeModbus/functions/mbfuncholding.c ****  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  24:FreeModbus/functions/mbfuncholding.c ****  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  25:FreeModbus/functions/mbfuncholding.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  26:FreeModbus/functions/mbfuncholding.c ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  27:FreeModbus/functions/mbfuncholding.c ****  *
  28:FreeModbus/functions/mbfuncholding.c ****  * File: $Id: mbfuncholding.c,v 1.12 2007/02/18 23:48:22 wolti Exp $
  29:FreeModbus/functions/mbfuncholding.c ****  */
  30:FreeModbus/functions/mbfuncholding.c **** 
  31:FreeModbus/functions/mbfuncholding.c **** /* ----------------------- System includes ----------------------------------*/
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 2


  32:FreeModbus/functions/mbfuncholding.c **** #include "stdlib.h"
  33:FreeModbus/functions/mbfuncholding.c **** #include "string.h"
  34:FreeModbus/functions/mbfuncholding.c **** 
  35:FreeModbus/functions/mbfuncholding.c **** /* ----------------------- Platform includes --------------------------------*/
  36:FreeModbus/functions/mbfuncholding.c **** #include "port.h"
  37:FreeModbus/functions/mbfuncholding.c **** 
  38:FreeModbus/functions/mbfuncholding.c **** /* ----------------------- Modbus includes ----------------------------------*/
  39:FreeModbus/functions/mbfuncholding.c **** #include "mb.h"
  40:FreeModbus/functions/mbfuncholding.c **** #include "mbframe.h"
  41:FreeModbus/functions/mbfuncholding.c **** #include "mbproto.h"
  42:FreeModbus/functions/mbfuncholding.c **** #include "mbconfig.h"
  43:FreeModbus/functions/mbfuncholding.c **** 
  44:FreeModbus/functions/mbfuncholding.c **** /* ----------------------- Defines ------------------------------------------*/
  45:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_READ_ADDR_OFF               ( MB_PDU_DATA_OFF + 0)
  46:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_READ_REGCNT_OFF             ( MB_PDU_DATA_OFF + 2 )
  47:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_READ_SIZE                   ( 4 )
  48:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_READ_REGCNT_MAX             ( 0x007D )
  49:FreeModbus/functions/mbfuncholding.c **** 
  50:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_WRITE_ADDR_OFF              ( MB_PDU_DATA_OFF + 0)
  51:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_WRITE_VALUE_OFF             ( MB_PDU_DATA_OFF + 2 )
  52:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_WRITE_SIZE                  ( 4 )
  53:FreeModbus/functions/mbfuncholding.c **** 
  54:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_WRITE_MUL_ADDR_OFF          ( MB_PDU_DATA_OFF + 0 )
  55:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_WRITE_MUL_REGCNT_OFF        ( MB_PDU_DATA_OFF + 2 )
  56:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_WRITE_MUL_BYTECNT_OFF       ( MB_PDU_DATA_OFF + 4 )
  57:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_WRITE_MUL_VALUES_OFF        ( MB_PDU_DATA_OFF + 5 )
  58:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_WRITE_MUL_SIZE_MIN          ( 5 )
  59:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_WRITE_MUL_REGCNT_MAX        ( 0x0078 )
  60:FreeModbus/functions/mbfuncholding.c **** 
  61:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_READWRITE_READ_ADDR_OFF     ( MB_PDU_DATA_OFF + 0 )
  62:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_READWRITE_READ_REGCNT_OFF   ( MB_PDU_DATA_OFF + 2 )
  63:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_READWRITE_WRITE_ADDR_OFF    ( MB_PDU_DATA_OFF + 4 )
  64:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_READWRITE_WRITE_REGCNT_OFF  ( MB_PDU_DATA_OFF + 6 )
  65:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_READWRITE_BYTECNT_OFF       ( MB_PDU_DATA_OFF + 8 )
  66:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_READWRITE_WRITE_VALUES_OFF  ( MB_PDU_DATA_OFF + 9 )
  67:FreeModbus/functions/mbfuncholding.c **** #define MB_PDU_FUNC_READWRITE_SIZE_MIN          ( 9 )
  68:FreeModbus/functions/mbfuncholding.c **** 
  69:FreeModbus/functions/mbfuncholding.c **** /* ----------------------- Static functions ---------------------------------*/
  70:FreeModbus/functions/mbfuncholding.c **** eMBException    prveMBError2Exception( eMBErrorCode eErrorCode );
  71:FreeModbus/functions/mbfuncholding.c **** 
  72:FreeModbus/functions/mbfuncholding.c **** /* ----------------------- Start implementation -----------------------------*/
  73:FreeModbus/functions/mbfuncholding.c **** 
  74:FreeModbus/functions/mbfuncholding.c **** #if MB_FUNC_WRITE_HOLDING_ENABLED > 0
  75:FreeModbus/functions/mbfuncholding.c **** 
  76:FreeModbus/functions/mbfuncholding.c **** eMBException
  77:FreeModbus/functions/mbfuncholding.c **** eMBFuncWriteHoldingRegister( UCHAR * pucFrame, USHORT * usLen )
  78:FreeModbus/functions/mbfuncholding.c **** {
  28              		.loc 1 78 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 78 1 is_stmt 0 view .LVU1
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 3


  79:FreeModbus/functions/mbfuncholding.c ****     USHORT          usRegAddress;
  38              		.loc 1 79 5 is_stmt 1 view .LVU2
  80:FreeModbus/functions/mbfuncholding.c ****     eMBException    eStatus = MB_EX_NONE;
  39              		.loc 1 80 5 view .LVU3
  40              	.LVL1:
  81:FreeModbus/functions/mbfuncholding.c ****     eMBErrorCode    eRegStatus;
  41              		.loc 1 81 5 view .LVU4
  82:FreeModbus/functions/mbfuncholding.c **** 
  83:FreeModbus/functions/mbfuncholding.c ****     if( *usLen == ( MB_PDU_FUNC_WRITE_SIZE + MB_PDU_SIZE_MIN ) )
  42              		.loc 1 83 5 view .LVU5
  43              		.loc 1 83 9 is_stmt 0 view .LVU6
  44 0002 0B88     		ldrh	r3, [r1]
  45              		.loc 1 83 7 view .LVU7
  46 0004 052B     		cmp	r3, #5
  47 0006 01D0     		beq	.L5
  84:FreeModbus/functions/mbfuncholding.c ****     {
  85:FreeModbus/functions/mbfuncholding.c ****         usRegAddress = ( USHORT )( pucFrame[MB_PDU_FUNC_WRITE_ADDR_OFF] << 8 );
  86:FreeModbus/functions/mbfuncholding.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_WRITE_ADDR_OFF + 1] );
  87:FreeModbus/functions/mbfuncholding.c ****         usRegAddress++;
  88:FreeModbus/functions/mbfuncholding.c **** 
  89:FreeModbus/functions/mbfuncholding.c ****         /* Make callback to update the value. */
  90:FreeModbus/functions/mbfuncholding.c ****         eRegStatus = eMBRegHoldingCB( &pucFrame[MB_PDU_FUNC_WRITE_VALUE_OFF],
  91:FreeModbus/functions/mbfuncholding.c ****                                       usRegAddress, 1, MB_REG_WRITE );
  92:FreeModbus/functions/mbfuncholding.c **** 
  93:FreeModbus/functions/mbfuncholding.c ****         /* If an error occured convert it into a Modbus exception. */
  94:FreeModbus/functions/mbfuncholding.c ****         if( eRegStatus != MB_ENOERR )
  95:FreeModbus/functions/mbfuncholding.c ****         {
  96:FreeModbus/functions/mbfuncholding.c ****             eStatus = prveMBError2Exception( eRegStatus );
  97:FreeModbus/functions/mbfuncholding.c ****         }
  98:FreeModbus/functions/mbfuncholding.c ****     }
  99:FreeModbus/functions/mbfuncholding.c ****     else
 100:FreeModbus/functions/mbfuncholding.c ****     {
 101:FreeModbus/functions/mbfuncholding.c ****         /* Can't be a valid request because the length is incorrect. */
 102:FreeModbus/functions/mbfuncholding.c ****         eStatus = MB_EX_ILLEGAL_DATA_VALUE;
  48              		.loc 1 102 17 view .LVU8
  49 0008 0320     		movs	r0, #3
  50              	.LVL2:
  51              	.L2:
 103:FreeModbus/functions/mbfuncholding.c ****     }
 104:FreeModbus/functions/mbfuncholding.c ****     return eStatus;
  52              		.loc 1 104 5 is_stmt 1 view .LVU9
 105:FreeModbus/functions/mbfuncholding.c **** }
  53              		.loc 1 105 1 is_stmt 0 view .LVU10
  54 000a 08BD     		pop	{r3, pc}
  55              	.LVL3:
  56              	.L5:
  85:FreeModbus/functions/mbfuncholding.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_WRITE_ADDR_OFF + 1] );
  57              		.loc 1 85 9 is_stmt 1 view .LVU11
  85:FreeModbus/functions/mbfuncholding.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_WRITE_ADDR_OFF + 1] );
  58              		.loc 1 85 44 is_stmt 0 view .LVU12
  59 000c 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  60              	.LVL4:
  86:FreeModbus/functions/mbfuncholding.c ****         usRegAddress++;
  61              		.loc 1 86 9 is_stmt 1 view .LVU13
  86:FreeModbus/functions/mbfuncholding.c ****         usRegAddress++;
  62              		.loc 1 86 45 is_stmt 0 view .LVU14
  63 000e 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 4


  64              	.LVL5:
  86:FreeModbus/functions/mbfuncholding.c ****         usRegAddress++;
  65              		.loc 1 86 22 view .LVU15
  66 0010 41EA0321 		orr	r1, r1, r3, lsl #8
  67              	.LVL6:
  87:FreeModbus/functions/mbfuncholding.c **** 
  68              		.loc 1 87 9 is_stmt 1 view .LVU16
  87:FreeModbus/functions/mbfuncholding.c **** 
  69              		.loc 1 87 21 is_stmt 0 view .LVU17
  70 0014 0131     		adds	r1, r1, #1
  71              	.LVL7:
  90:FreeModbus/functions/mbfuncholding.c ****                                       usRegAddress, 1, MB_REG_WRITE );
  72              		.loc 1 90 9 is_stmt 1 view .LVU18
  90:FreeModbus/functions/mbfuncholding.c ****                                       usRegAddress, 1, MB_REG_WRITE );
  73              		.loc 1 90 22 is_stmt 0 view .LVU19
  74 0016 0123     		movs	r3, #1
  75 0018 1A46     		mov	r2, r3
  76 001a 89B2     		uxth	r1, r1
  90:FreeModbus/functions/mbfuncholding.c ****                                       usRegAddress, 1, MB_REG_WRITE );
  77              		.loc 1 90 22 view .LVU20
  78 001c 0330     		adds	r0, r0, #3
  79              	.LVL8:
  90:FreeModbus/functions/mbfuncholding.c ****                                       usRegAddress, 1, MB_REG_WRITE );
  80              		.loc 1 90 22 view .LVU21
  81 001e FFF7FEFF 		bl	eMBRegHoldingCB
  82              	.LVL9:
  94:FreeModbus/functions/mbfuncholding.c ****         {
  83              		.loc 1 94 9 is_stmt 1 view .LVU22
  94:FreeModbus/functions/mbfuncholding.c ****         {
  84              		.loc 1 94 11 is_stmt 0 view .LVU23
  85 0022 0028     		cmp	r0, #0
  86 0024 F1D0     		beq	.L2
  96:FreeModbus/functions/mbfuncholding.c ****         }
  87              		.loc 1 96 13 is_stmt 1 view .LVU24
  96:FreeModbus/functions/mbfuncholding.c ****         }
  88              		.loc 1 96 23 is_stmt 0 view .LVU25
  89 0026 FFF7FEFF 		bl	prveMBError2Exception
  90              	.LVL10:
  96:FreeModbus/functions/mbfuncholding.c ****         }
  91              		.loc 1 96 23 view .LVU26
  92 002a EEE7     		b	.L2
  93              		.cfi_endproc
  94              	.LFE65:
  96              		.section	.text.eMBFuncWriteMultipleHoldingRegister,"ax",%progbits
  97              		.align	1
  98              		.global	eMBFuncWriteMultipleHoldingRegister
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 103              	eMBFuncWriteMultipleHoldingRegister:
 104              	.LVL11:
 105              	.LFB66:
 106:FreeModbus/functions/mbfuncholding.c **** #endif
 107:FreeModbus/functions/mbfuncholding.c **** 
 108:FreeModbus/functions/mbfuncholding.c **** #if MB_FUNC_WRITE_MULTIPLE_HOLDING_ENABLED > 0
 109:FreeModbus/functions/mbfuncholding.c **** eMBException
 110:FreeModbus/functions/mbfuncholding.c **** eMBFuncWriteMultipleHoldingRegister( UCHAR * pucFrame, USHORT * usLen )
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 5


 111:FreeModbus/functions/mbfuncholding.c **** {
 106              		.loc 1 111 1 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 112:FreeModbus/functions/mbfuncholding.c ****     USHORT          usRegAddress;
 110              		.loc 1 112 5 view .LVU28
 113:FreeModbus/functions/mbfuncholding.c ****     USHORT          usRegCount;
 111              		.loc 1 113 5 view .LVU29
 114:FreeModbus/functions/mbfuncholding.c ****     UCHAR           ucRegByteCount;
 112              		.loc 1 114 5 view .LVU30
 115:FreeModbus/functions/mbfuncholding.c **** 
 116:FreeModbus/functions/mbfuncholding.c ****     eMBException    eStatus = MB_EX_NONE;
 113              		.loc 1 116 5 view .LVU31
 117:FreeModbus/functions/mbfuncholding.c ****     eMBErrorCode    eRegStatus;
 114              		.loc 1 117 5 view .LVU32
 118:FreeModbus/functions/mbfuncholding.c **** 
 119:FreeModbus/functions/mbfuncholding.c ****     if( *usLen >= ( MB_PDU_FUNC_WRITE_MUL_SIZE_MIN + MB_PDU_SIZE_MIN ) )
 115              		.loc 1 119 5 view .LVU33
 116              		.loc 1 119 9 is_stmt 0 view .LVU34
 117 0000 0B88     		ldrh	r3, [r1]
 118              		.loc 1 119 7 view .LVU35
 119 0002 052B     		cmp	r3, #5
 120 0004 22D9     		bls	.L9
 111:FreeModbus/functions/mbfuncholding.c ****     USHORT          usRegAddress;
 121              		.loc 1 111 1 view .LVU36
 122 0006 10B5     		push	{r4, lr}
 123              	.LCFI1:
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 4, -8
 126              		.cfi_offset 14, -4
 127 0008 0C46     		mov	r4, r1
 120:FreeModbus/functions/mbfuncholding.c ****     {
 121:FreeModbus/functions/mbfuncholding.c ****         usRegAddress = ( USHORT )( pucFrame[MB_PDU_FUNC_WRITE_MUL_ADDR_OFF] << 8 );
 128              		.loc 1 121 9 is_stmt 1 view .LVU37
 129              		.loc 1 121 44 is_stmt 0 view .LVU38
 130 000a 4178     		ldrb	r1, [r0, #1]	@ zero_extendqisi2
 131              	.LVL12:
 122:FreeModbus/functions/mbfuncholding.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_WRITE_MUL_ADDR_OFF + 1] );
 132              		.loc 1 122 9 is_stmt 1 view .LVU39
 133              		.loc 1 122 45 is_stmt 0 view .LVU40
 134 000c 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 135              		.loc 1 122 22 view .LVU41
 136 000e 43EA0123 		orr	r3, r3, r1, lsl #8
 137              	.LVL13:
 123:FreeModbus/functions/mbfuncholding.c ****         usRegAddress++;
 138              		.loc 1 123 9 is_stmt 1 view .LVU42
 139              		.loc 1 123 21 is_stmt 0 view .LVU43
 140 0012 0133     		adds	r3, r3, #1
 141              	.LVL14:
 142              		.loc 1 123 21 view .LVU44
 143 0014 99B2     		uxth	r1, r3
 144              	.LVL15:
 124:FreeModbus/functions/mbfuncholding.c **** 
 125:FreeModbus/functions/mbfuncholding.c ****         usRegCount = ( USHORT )( pucFrame[MB_PDU_FUNC_WRITE_MUL_REGCNT_OFF] << 8 );
 145              		.loc 1 125 9 is_stmt 1 view .LVU45
 146              		.loc 1 125 42 is_stmt 0 view .LVU46
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 6


 147 0016 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 148              	.LVL16:
 126:FreeModbus/functions/mbfuncholding.c ****         usRegCount |= ( USHORT )( pucFrame[MB_PDU_FUNC_WRITE_MUL_REGCNT_OFF + 1] );
 149              		.loc 1 126 9 is_stmt 1 view .LVU47
 150              		.loc 1 126 43 is_stmt 0 view .LVU48
 151 0018 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 152              		.loc 1 126 20 view .LVU49
 153 001a 42EA0322 		orr	r2, r2, r3, lsl #8
 154              	.LVL17:
 127:FreeModbus/functions/mbfuncholding.c **** 
 128:FreeModbus/functions/mbfuncholding.c ****         ucRegByteCount = pucFrame[MB_PDU_FUNC_WRITE_MUL_BYTECNT_OFF];
 155              		.loc 1 128 9 is_stmt 1 view .LVU50
 156              		.loc 1 128 24 is_stmt 0 view .LVU51
 157 001e 90F805C0 		ldrb	ip, [r0, #5]	@ zero_extendqisi2
 158              	.LVL18:
 129:FreeModbus/functions/mbfuncholding.c **** 
 130:FreeModbus/functions/mbfuncholding.c ****         if( ( usRegCount >= 1 ) &&
 159              		.loc 1 130 9 is_stmt 1 view .LVU52
 160              		.loc 1 130 33 is_stmt 0 view .LVU53
 161 0022 531E     		subs	r3, r2, #1
 162 0024 9BB2     		uxth	r3, r3
 163              		.loc 1 130 11 view .LVU54
 164 0026 772B     		cmp	r3, #119
 165 0028 12D8     		bhi	.L10
 131:FreeModbus/functions/mbfuncholding.c ****             ( usRegCount <= MB_PDU_FUNC_WRITE_MUL_REGCNT_MAX ) &&
 132:FreeModbus/functions/mbfuncholding.c ****             ( ucRegByteCount == ( UCHAR ) ( 2 * usRegCount ) ) )
 166              		.loc 1 132 33 view .LVU55
 167 002a 5300     		lsls	r3, r2, #1
 168 002c DBB2     		uxtb	r3, r3
 131:FreeModbus/functions/mbfuncholding.c ****             ( usRegCount <= MB_PDU_FUNC_WRITE_MUL_REGCNT_MAX ) &&
 169              		.loc 1 131 64 view .LVU56
 170 002e 6345     		cmp	r3, ip
 171 0030 01D0     		beq	.L16
 133:FreeModbus/functions/mbfuncholding.c ****         {
 134:FreeModbus/functions/mbfuncholding.c ****             /* Make callback to update the register values. */
 135:FreeModbus/functions/mbfuncholding.c ****             eRegStatus =
 136:FreeModbus/functions/mbfuncholding.c ****                 eMBRegHoldingCB( &pucFrame[MB_PDU_FUNC_WRITE_MUL_VALUES_OFF],
 137:FreeModbus/functions/mbfuncholding.c ****                                  usRegAddress, usRegCount, MB_REG_WRITE );
 138:FreeModbus/functions/mbfuncholding.c **** 
 139:FreeModbus/functions/mbfuncholding.c ****             /* If an error occured convert it into a Modbus exception. */
 140:FreeModbus/functions/mbfuncholding.c ****             if( eRegStatus != MB_ENOERR )
 141:FreeModbus/functions/mbfuncholding.c ****             {
 142:FreeModbus/functions/mbfuncholding.c ****                 eStatus = prveMBError2Exception( eRegStatus );
 143:FreeModbus/functions/mbfuncholding.c ****             }
 144:FreeModbus/functions/mbfuncholding.c ****             else
 145:FreeModbus/functions/mbfuncholding.c ****             {
 146:FreeModbus/functions/mbfuncholding.c ****                 /* The response contains the function code, the starting
 147:FreeModbus/functions/mbfuncholding.c ****                  * address and the quantity of registers. We reuse the
 148:FreeModbus/functions/mbfuncholding.c ****                  * old values in the buffer because they are still valid.
 149:FreeModbus/functions/mbfuncholding.c ****                  */
 150:FreeModbus/functions/mbfuncholding.c ****                 *usLen = MB_PDU_FUNC_WRITE_MUL_BYTECNT_OFF;
 151:FreeModbus/functions/mbfuncholding.c ****             }
 152:FreeModbus/functions/mbfuncholding.c ****         }
 153:FreeModbus/functions/mbfuncholding.c ****         else
 154:FreeModbus/functions/mbfuncholding.c ****         {
 155:FreeModbus/functions/mbfuncholding.c ****             eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 172              		.loc 1 155 21 view .LVU57
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 7


 173 0032 0320     		movs	r0, #3
 174              	.LVL19:
 175              	.L7:
 156:FreeModbus/functions/mbfuncholding.c ****         }
 157:FreeModbus/functions/mbfuncholding.c ****     }
 158:FreeModbus/functions/mbfuncholding.c ****     else
 159:FreeModbus/functions/mbfuncholding.c ****     {
 160:FreeModbus/functions/mbfuncholding.c ****         /* Can't be a valid request because the length is incorrect. */
 161:FreeModbus/functions/mbfuncholding.c ****         eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 162:FreeModbus/functions/mbfuncholding.c ****     }
 163:FreeModbus/functions/mbfuncholding.c ****     return eStatus;
 176              		.loc 1 163 5 is_stmt 1 view .LVU58
 164:FreeModbus/functions/mbfuncholding.c **** }
 177              		.loc 1 164 1 is_stmt 0 view .LVU59
 178 0034 10BD     		pop	{r4, pc}
 179              	.LVL20:
 180              	.L16:
 135:FreeModbus/functions/mbfuncholding.c ****                 eMBRegHoldingCB( &pucFrame[MB_PDU_FUNC_WRITE_MUL_VALUES_OFF],
 181              		.loc 1 135 13 is_stmt 1 view .LVU60
 136:FreeModbus/functions/mbfuncholding.c ****                                  usRegAddress, usRegCount, MB_REG_WRITE );
 182              		.loc 1 136 17 is_stmt 0 view .LVU61
 183 0036 0123     		movs	r3, #1
 184 0038 0630     		adds	r0, r0, #6
 185              	.LVL21:
 136:FreeModbus/functions/mbfuncholding.c ****                                  usRegAddress, usRegCount, MB_REG_WRITE );
 186              		.loc 1 136 17 view .LVU62
 187 003a FFF7FEFF 		bl	eMBRegHoldingCB
 188              	.LVL22:
 140:FreeModbus/functions/mbfuncholding.c ****             {
 189              		.loc 1 140 13 is_stmt 1 view .LVU63
 140:FreeModbus/functions/mbfuncholding.c ****             {
 190              		.loc 1 140 15 is_stmt 0 view .LVU64
 191 003e 10B9     		cbnz	r0, .L17
 150:FreeModbus/functions/mbfuncholding.c ****             }
 192              		.loc 1 150 17 is_stmt 1 view .LVU65
 150:FreeModbus/functions/mbfuncholding.c ****             }
 193              		.loc 1 150 24 is_stmt 0 view .LVU66
 194 0040 0523     		movs	r3, #5
 195 0042 2380     		strh	r3, [r4]	@ movhi
 196 0044 F6E7     		b	.L7
 197              	.L17:
 142:FreeModbus/functions/mbfuncholding.c ****             }
 198              		.loc 1 142 17 is_stmt 1 view .LVU67
 142:FreeModbus/functions/mbfuncholding.c ****             }
 199              		.loc 1 142 27 is_stmt 0 view .LVU68
 200 0046 FFF7FEFF 		bl	prveMBError2Exception
 201              	.LVL23:
 142:FreeModbus/functions/mbfuncholding.c ****             }
 202              		.loc 1 142 27 view .LVU69
 203 004a F3E7     		b	.L7
 204              	.LVL24:
 205              	.L9:
 206              	.LCFI2:
 207              		.cfi_def_cfa_offset 0
 208              		.cfi_restore 4
 209              		.cfi_restore 14
 161:FreeModbus/functions/mbfuncholding.c ****     }
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 8


 210              		.loc 1 161 17 view .LVU70
 211 004c 0320     		movs	r0, #3
 212              	.LVL25:
 163:FreeModbus/functions/mbfuncholding.c **** }
 213              		.loc 1 163 5 is_stmt 1 view .LVU71
 214              		.loc 1 164 1 is_stmt 0 view .LVU72
 215 004e 7047     		bx	lr
 216              	.LVL26:
 217              	.L10:
 218              	.LCFI3:
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 4, -8
 221              		.cfi_offset 14, -4
 155:FreeModbus/functions/mbfuncholding.c ****         }
 222              		.loc 1 155 21 view .LVU73
 223 0050 0320     		movs	r0, #3
 224              	.LVL27:
 155:FreeModbus/functions/mbfuncholding.c ****         }
 225              		.loc 1 155 21 view .LVU74
 226 0052 EFE7     		b	.L7
 227              		.cfi_endproc
 228              	.LFE66:
 230              		.section	.text.eMBFuncReadHoldingRegister,"ax",%progbits
 231              		.align	1
 232              		.global	eMBFuncReadHoldingRegister
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 237              	eMBFuncReadHoldingRegister:
 238              	.LVL28:
 239              	.LFB67:
 165:FreeModbus/functions/mbfuncholding.c **** #endif
 166:FreeModbus/functions/mbfuncholding.c **** 
 167:FreeModbus/functions/mbfuncholding.c **** #if MB_FUNC_READ_HOLDING_ENABLED > 0
 168:FreeModbus/functions/mbfuncholding.c **** 
 169:FreeModbus/functions/mbfuncholding.c **** eMBException
 170:FreeModbus/functions/mbfuncholding.c **** eMBFuncReadHoldingRegister( UCHAR * pucFrame, USHORT * usLen )
 171:FreeModbus/functions/mbfuncholding.c **** {
 240              		.loc 1 171 1 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              		.loc 1 171 1 is_stmt 0 view .LVU76
 245 0000 38B5     		push	{r3, r4, r5, lr}
 246              	.LCFI4:
 247              		.cfi_def_cfa_offset 16
 248              		.cfi_offset 3, -16
 249              		.cfi_offset 4, -12
 250              		.cfi_offset 5, -8
 251              		.cfi_offset 14, -4
 172:FreeModbus/functions/mbfuncholding.c ****     USHORT          usRegAddress;
 252              		.loc 1 172 5 is_stmt 1 view .LVU77
 173:FreeModbus/functions/mbfuncholding.c ****     USHORT          usRegCount;
 253              		.loc 1 173 5 view .LVU78
 174:FreeModbus/functions/mbfuncholding.c ****     UCHAR          *pucFrameCur;
 254              		.loc 1 174 5 view .LVU79
 175:FreeModbus/functions/mbfuncholding.c **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 9


 176:FreeModbus/functions/mbfuncholding.c ****     eMBException    eStatus = MB_EX_NONE;
 255              		.loc 1 176 5 view .LVU80
 256              	.LVL29:
 177:FreeModbus/functions/mbfuncholding.c ****     eMBErrorCode    eRegStatus;
 257              		.loc 1 177 5 view .LVU81
 178:FreeModbus/functions/mbfuncholding.c **** 
 179:FreeModbus/functions/mbfuncholding.c ****     if( *usLen == ( MB_PDU_FUNC_READ_SIZE + MB_PDU_SIZE_MIN ) )
 258              		.loc 1 179 5 view .LVU82
 259              		.loc 1 179 9 is_stmt 0 view .LVU83
 260 0002 0B88     		ldrh	r3, [r1]
 261              		.loc 1 179 7 view .LVU84
 262 0004 052B     		cmp	r3, #5
 263 0006 01D0     		beq	.L24
 180:FreeModbus/functions/mbfuncholding.c ****     {
 181:FreeModbus/functions/mbfuncholding.c ****         usRegAddress = ( USHORT )( pucFrame[MB_PDU_FUNC_READ_ADDR_OFF] << 8 );
 182:FreeModbus/functions/mbfuncholding.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_ADDR_OFF + 1] );
 183:FreeModbus/functions/mbfuncholding.c ****         usRegAddress++;
 184:FreeModbus/functions/mbfuncholding.c **** 
 185:FreeModbus/functions/mbfuncholding.c ****         usRegCount = ( USHORT )( pucFrame[MB_PDU_FUNC_READ_REGCNT_OFF] << 8 );
 186:FreeModbus/functions/mbfuncholding.c ****         usRegCount |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_REGCNT_OFF + 1] );
 187:FreeModbus/functions/mbfuncholding.c **** 
 188:FreeModbus/functions/mbfuncholding.c ****         /* Check if the number of registers to read is valid. If not
 189:FreeModbus/functions/mbfuncholding.c ****          * return Modbus illegal data value exception. 
 190:FreeModbus/functions/mbfuncholding.c ****          */
 191:FreeModbus/functions/mbfuncholding.c ****         if( ( usRegCount >= 1 ) && ( usRegCount <= MB_PDU_FUNC_READ_REGCNT_MAX ) )
 192:FreeModbus/functions/mbfuncholding.c ****         {
 193:FreeModbus/functions/mbfuncholding.c ****             /* Set the current PDU data pointer to the beginning. */
 194:FreeModbus/functions/mbfuncholding.c ****             pucFrameCur = &pucFrame[MB_PDU_FUNC_OFF];
 195:FreeModbus/functions/mbfuncholding.c ****             *usLen = MB_PDU_FUNC_OFF;
 196:FreeModbus/functions/mbfuncholding.c **** 
 197:FreeModbus/functions/mbfuncholding.c ****             /* First byte contains the function code. */
 198:FreeModbus/functions/mbfuncholding.c ****             *pucFrameCur++ = MB_FUNC_READ_HOLDING_REGISTER;
 199:FreeModbus/functions/mbfuncholding.c ****             *usLen += 1;
 200:FreeModbus/functions/mbfuncholding.c **** 
 201:FreeModbus/functions/mbfuncholding.c ****             /* Second byte in the response contain the number of bytes. */
 202:FreeModbus/functions/mbfuncholding.c ****             *pucFrameCur++ = ( UCHAR ) ( usRegCount * 2 );
 203:FreeModbus/functions/mbfuncholding.c ****             *usLen += 1;
 204:FreeModbus/functions/mbfuncholding.c **** 
 205:FreeModbus/functions/mbfuncholding.c ****             /* Make callback to fill the buffer. */
 206:FreeModbus/functions/mbfuncholding.c ****             eRegStatus = eMBRegHoldingCB( pucFrameCur, usRegAddress, usRegCount, MB_REG_READ );
 207:FreeModbus/functions/mbfuncholding.c ****             /* If an error occured convert it into a Modbus exception. */
 208:FreeModbus/functions/mbfuncholding.c ****             if( eRegStatus != MB_ENOERR )
 209:FreeModbus/functions/mbfuncholding.c ****             {
 210:FreeModbus/functions/mbfuncholding.c ****                 eStatus = prveMBError2Exception( eRegStatus );
 211:FreeModbus/functions/mbfuncholding.c ****             }
 212:FreeModbus/functions/mbfuncholding.c ****             else
 213:FreeModbus/functions/mbfuncholding.c ****             {
 214:FreeModbus/functions/mbfuncholding.c ****                 *usLen += usRegCount * 2;
 215:FreeModbus/functions/mbfuncholding.c ****             }
 216:FreeModbus/functions/mbfuncholding.c ****         }
 217:FreeModbus/functions/mbfuncholding.c ****         else
 218:FreeModbus/functions/mbfuncholding.c ****         {
 219:FreeModbus/functions/mbfuncholding.c ****             eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 220:FreeModbus/functions/mbfuncholding.c ****         }
 221:FreeModbus/functions/mbfuncholding.c ****     }
 222:FreeModbus/functions/mbfuncholding.c ****     else
 223:FreeModbus/functions/mbfuncholding.c ****     {
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 10


 224:FreeModbus/functions/mbfuncholding.c ****         /* Can't be a valid request because the length is incorrect. */
 225:FreeModbus/functions/mbfuncholding.c ****         eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 264              		.loc 1 225 17 view .LVU85
 265 0008 0320     		movs	r0, #3
 266              	.LVL30:
 267              	.L19:
 226:FreeModbus/functions/mbfuncholding.c ****     }
 227:FreeModbus/functions/mbfuncholding.c ****     return eStatus;
 268              		.loc 1 227 5 is_stmt 1 view .LVU86
 228:FreeModbus/functions/mbfuncholding.c **** }
 269              		.loc 1 228 1 is_stmt 0 view .LVU87
 270 000a 38BD     		pop	{r3, r4, r5, pc}
 271              	.LVL31:
 272              	.L24:
 273              		.loc 1 228 1 view .LVU88
 274 000c 0C46     		mov	r4, r1
 181:FreeModbus/functions/mbfuncholding.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_ADDR_OFF + 1] );
 275              		.loc 1 181 9 is_stmt 1 view .LVU89
 181:FreeModbus/functions/mbfuncholding.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_ADDR_OFF + 1] );
 276              		.loc 1 181 44 is_stmt 0 view .LVU90
 277 000e 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 278              	.LVL32:
 182:FreeModbus/functions/mbfuncholding.c ****         usRegAddress++;
 279              		.loc 1 182 9 is_stmt 1 view .LVU91
 182:FreeModbus/functions/mbfuncholding.c ****         usRegAddress++;
 280              		.loc 1 182 45 is_stmt 0 view .LVU92
 281 0010 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 282              	.LVL33:
 182:FreeModbus/functions/mbfuncholding.c ****         usRegAddress++;
 283              		.loc 1 182 22 view .LVU93
 284 0012 41EA0321 		orr	r1, r1, r3, lsl #8
 285              	.LVL34:
 183:FreeModbus/functions/mbfuncholding.c **** 
 286              		.loc 1 183 9 is_stmt 1 view .LVU94
 183:FreeModbus/functions/mbfuncholding.c **** 
 287              		.loc 1 183 21 is_stmt 0 view .LVU95
 288 0016 0131     		adds	r1, r1, #1
 289              	.LVL35:
 183:FreeModbus/functions/mbfuncholding.c **** 
 290              		.loc 1 183 21 view .LVU96
 291 0018 89B2     		uxth	r1, r1
 292              	.LVL36:
 185:FreeModbus/functions/mbfuncholding.c ****         usRegCount |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_REGCNT_OFF + 1] );
 293              		.loc 1 185 9 is_stmt 1 view .LVU97
 185:FreeModbus/functions/mbfuncholding.c ****         usRegCount |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_REGCNT_OFF + 1] );
 294              		.loc 1 185 42 is_stmt 0 view .LVU98
 295 001a C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 296              	.LVL37:
 186:FreeModbus/functions/mbfuncholding.c **** 
 297              		.loc 1 186 9 is_stmt 1 view .LVU99
 186:FreeModbus/functions/mbfuncholding.c **** 
 298              		.loc 1 186 43 is_stmt 0 view .LVU100
 299 001c 0579     		ldrb	r5, [r0, #4]	@ zero_extendqisi2
 186:FreeModbus/functions/mbfuncholding.c **** 
 300              		.loc 1 186 20 view .LVU101
 301 001e 45EA0325 		orr	r5, r5, r3, lsl #8
 302              	.LVL38:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 11


 191:FreeModbus/functions/mbfuncholding.c ****         {
 303              		.loc 1 191 9 is_stmt 1 view .LVU102
 191:FreeModbus/functions/mbfuncholding.c ****         {
 304              		.loc 1 191 33 is_stmt 0 view .LVU103
 305 0022 6B1E     		subs	r3, r5, #1
 306 0024 9BB2     		uxth	r3, r3
 191:FreeModbus/functions/mbfuncholding.c ****         {
 307              		.loc 1 191 11 view .LVU104
 308 0026 7C2B     		cmp	r3, #124
 309 0028 01D9     		bls	.L25
 219:FreeModbus/functions/mbfuncholding.c ****         }
 310              		.loc 1 219 21 view .LVU105
 311 002a 0320     		movs	r0, #3
 312              	.LVL39:
 219:FreeModbus/functions/mbfuncholding.c ****         }
 313              		.loc 1 219 21 view .LVU106
 314 002c EDE7     		b	.L19
 315              	.LVL40:
 316              	.L25:
 194:FreeModbus/functions/mbfuncholding.c ****             *usLen = MB_PDU_FUNC_OFF;
 317              		.loc 1 194 13 is_stmt 1 view .LVU107
 195:FreeModbus/functions/mbfuncholding.c **** 
 318              		.loc 1 195 13 view .LVU108
 195:FreeModbus/functions/mbfuncholding.c **** 
 319              		.loc 1 195 20 is_stmt 0 view .LVU109
 320 002e 0023     		movs	r3, #0
 321 0030 2380     		strh	r3, [r4]	@ movhi
 198:FreeModbus/functions/mbfuncholding.c ****             *usLen += 1;
 322              		.loc 1 198 13 is_stmt 1 view .LVU110
 323              	.LVL41:
 198:FreeModbus/functions/mbfuncholding.c ****             *usLen += 1;
 324              		.loc 1 198 28 is_stmt 0 view .LVU111
 325 0032 8446     		mov	ip, r0
 326 0034 0322     		movs	r2, #3
 327 0036 0CF8022B 		strb	r2, [ip], #2
 199:FreeModbus/functions/mbfuncholding.c **** 
 328              		.loc 1 199 13 is_stmt 1 view .LVU112
 199:FreeModbus/functions/mbfuncholding.c **** 
 329              		.loc 1 199 20 is_stmt 0 view .LVU113
 330 003a 2288     		ldrh	r2, [r4]
 331 003c 0132     		adds	r2, r2, #1
 332 003e 2280     		strh	r2, [r4]	@ movhi
 202:FreeModbus/functions/mbfuncholding.c ****             *usLen += 1;
 333              		.loc 1 202 13 is_stmt 1 view .LVU114
 334              	.LVL42:
 202:FreeModbus/functions/mbfuncholding.c ****             *usLen += 1;
 335              		.loc 1 202 30 is_stmt 0 view .LVU115
 336 0040 6A00     		lsls	r2, r5, #1
 202:FreeModbus/functions/mbfuncholding.c ****             *usLen += 1;
 337              		.loc 1 202 28 view .LVU116
 338 0042 4270     		strb	r2, [r0, #1]
 203:FreeModbus/functions/mbfuncholding.c **** 
 339              		.loc 1 203 13 is_stmt 1 view .LVU117
 203:FreeModbus/functions/mbfuncholding.c **** 
 340              		.loc 1 203 20 is_stmt 0 view .LVU118
 341 0044 2288     		ldrh	r2, [r4]
 342 0046 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 12


 343 0048 2280     		strh	r2, [r4]	@ movhi
 206:FreeModbus/functions/mbfuncholding.c ****             /* If an error occured convert it into a Modbus exception. */
 344              		.loc 1 206 13 is_stmt 1 view .LVU119
 206:FreeModbus/functions/mbfuncholding.c ****             /* If an error occured convert it into a Modbus exception. */
 345              		.loc 1 206 26 is_stmt 0 view .LVU120
 346 004a 2A46     		mov	r2, r5
 347 004c 6046     		mov	r0, ip
 348              	.LVL43:
 206:FreeModbus/functions/mbfuncholding.c ****             /* If an error occured convert it into a Modbus exception. */
 349              		.loc 1 206 26 view .LVU121
 350 004e FFF7FEFF 		bl	eMBRegHoldingCB
 351              	.LVL44:
 208:FreeModbus/functions/mbfuncholding.c ****             {
 352              		.loc 1 208 13 is_stmt 1 view .LVU122
 208:FreeModbus/functions/mbfuncholding.c ****             {
 353              		.loc 1 208 15 is_stmt 0 view .LVU123
 354 0052 20B9     		cbnz	r0, .L26
 214:FreeModbus/functions/mbfuncholding.c ****             }
 355              		.loc 1 214 17 is_stmt 1 view .LVU124
 214:FreeModbus/functions/mbfuncholding.c ****             }
 356              		.loc 1 214 24 is_stmt 0 view .LVU125
 357 0054 2388     		ldrh	r3, [r4]
 358 0056 03EB4505 		add	r5, r3, r5, lsl #1
 359              	.LVL45:
 214:FreeModbus/functions/mbfuncholding.c ****             }
 360              		.loc 1 214 24 view .LVU126
 361 005a 2580     		strh	r5, [r4]	@ movhi
 362 005c D5E7     		b	.L19
 363              	.LVL46:
 364              	.L26:
 210:FreeModbus/functions/mbfuncholding.c ****             }
 365              		.loc 1 210 17 is_stmt 1 view .LVU127
 210:FreeModbus/functions/mbfuncholding.c ****             }
 366              		.loc 1 210 27 is_stmt 0 view .LVU128
 367 005e FFF7FEFF 		bl	prveMBError2Exception
 368              	.LVL47:
 210:FreeModbus/functions/mbfuncholding.c ****             }
 369              		.loc 1 210 27 view .LVU129
 370 0062 D2E7     		b	.L19
 371              		.cfi_endproc
 372              	.LFE67:
 374              		.section	.text.eMBFuncReadWriteMultipleHoldingRegister,"ax",%progbits
 375              		.align	1
 376              		.global	eMBFuncReadWriteMultipleHoldingRegister
 377              		.syntax unified
 378              		.thumb
 379              		.thumb_func
 381              	eMBFuncReadWriteMultipleHoldingRegister:
 382              	.LVL48:
 383              	.LFB68:
 229:FreeModbus/functions/mbfuncholding.c **** 
 230:FreeModbus/functions/mbfuncholding.c **** #endif
 231:FreeModbus/functions/mbfuncholding.c **** 
 232:FreeModbus/functions/mbfuncholding.c **** #if MB_FUNC_READWRITE_HOLDING_ENABLED > 0
 233:FreeModbus/functions/mbfuncholding.c **** 
 234:FreeModbus/functions/mbfuncholding.c **** eMBException
 235:FreeModbus/functions/mbfuncholding.c **** eMBFuncReadWriteMultipleHoldingRegister( UCHAR * pucFrame, USHORT * usLen )
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 13


 236:FreeModbus/functions/mbfuncholding.c **** {
 384              		.loc 1 236 1 is_stmt 1 view -0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 388              		.loc 1 236 1 is_stmt 0 view .LVU131
 389 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 390              	.LCFI5:
 391              		.cfi_def_cfa_offset 24
 392              		.cfi_offset 3, -24
 393              		.cfi_offset 4, -20
 394              		.cfi_offset 5, -16
 395              		.cfi_offset 6, -12
 396              		.cfi_offset 7, -8
 397              		.cfi_offset 14, -4
 237:FreeModbus/functions/mbfuncholding.c ****     USHORT          usRegReadAddress;
 398              		.loc 1 237 5 is_stmt 1 view .LVU132
 238:FreeModbus/functions/mbfuncholding.c ****     USHORT          usRegReadCount;
 399              		.loc 1 238 5 view .LVU133
 239:FreeModbus/functions/mbfuncholding.c ****     USHORT          usRegWriteAddress;
 400              		.loc 1 239 5 view .LVU134
 240:FreeModbus/functions/mbfuncholding.c ****     USHORT          usRegWriteCount;
 401              		.loc 1 240 5 view .LVU135
 241:FreeModbus/functions/mbfuncholding.c ****     UCHAR           ucRegWriteByteCount;
 402              		.loc 1 241 5 view .LVU136
 242:FreeModbus/functions/mbfuncholding.c ****     UCHAR          *pucFrameCur;
 403              		.loc 1 242 5 view .LVU137
 243:FreeModbus/functions/mbfuncholding.c **** 
 244:FreeModbus/functions/mbfuncholding.c ****     eMBException    eStatus = MB_EX_NONE;
 404              		.loc 1 244 5 view .LVU138
 405              	.LVL49:
 245:FreeModbus/functions/mbfuncholding.c ****     eMBErrorCode    eRegStatus;
 406              		.loc 1 245 5 view .LVU139
 246:FreeModbus/functions/mbfuncholding.c **** 
 247:FreeModbus/functions/mbfuncholding.c ****     if( *usLen >= ( MB_PDU_FUNC_READWRITE_SIZE_MIN + MB_PDU_SIZE_MIN ) )
 407              		.loc 1 247 5 view .LVU140
 408              		.loc 1 247 9 is_stmt 0 view .LVU141
 409 0002 0B88     		ldrh	r3, [r1]
 410              		.loc 1 247 7 view .LVU142
 411 0004 092B     		cmp	r3, #9
 412 0006 45D9     		bls	.L30
 413 0008 0446     		mov	r4, r0
 414 000a 0D46     		mov	r5, r1
 248:FreeModbus/functions/mbfuncholding.c ****     {
 249:FreeModbus/functions/mbfuncholding.c ****         usRegReadAddress = ( USHORT )( pucFrame[MB_PDU_FUNC_READWRITE_READ_ADDR_OFF] << 8U );
 415              		.loc 1 249 9 is_stmt 1 view .LVU143
 416              		.loc 1 249 48 is_stmt 0 view .LVU144
 417 000c 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 418              	.LVL50:
 250:FreeModbus/functions/mbfuncholding.c ****         usRegReadAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_READWRITE_READ_ADDR_OFF + 1] );
 419              		.loc 1 250 9 is_stmt 1 view .LVU145
 420              		.loc 1 250 49 is_stmt 0 view .LVU146
 421 000e 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 422              	.LVL51:
 423              		.loc 1 250 26 view .LVU147
 424 0010 41EA0321 		orr	r1, r1, r3, lsl #8
 425              	.LVL52:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 14


 251:FreeModbus/functions/mbfuncholding.c ****         usRegReadAddress++;
 426              		.loc 1 251 9 is_stmt 1 view .LVU148
 427              		.loc 1 251 25 is_stmt 0 view .LVU149
 428 0014 0131     		adds	r1, r1, #1
 429              	.LVL53:
 430              		.loc 1 251 25 view .LVU150
 431 0016 8EB2     		uxth	r6, r1
 432              	.LVL54:
 252:FreeModbus/functions/mbfuncholding.c **** 
 253:FreeModbus/functions/mbfuncholding.c ****         usRegReadCount = ( USHORT )( pucFrame[MB_PDU_FUNC_READWRITE_READ_REGCNT_OFF] << 8U );
 433              		.loc 1 253 9 is_stmt 1 view .LVU151
 434              		.loc 1 253 46 is_stmt 0 view .LVU152
 435 0018 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 436              	.LVL55:
 254:FreeModbus/functions/mbfuncholding.c ****         usRegReadCount |= ( USHORT )( pucFrame[MB_PDU_FUNC_READWRITE_READ_REGCNT_OFF + 1] );
 437              		.loc 1 254 9 is_stmt 1 view .LVU153
 438              		.loc 1 254 47 is_stmt 0 view .LVU154
 439 001a 0779     		ldrb	r7, [r0, #4]	@ zero_extendqisi2
 440              		.loc 1 254 24 view .LVU155
 441 001c 47EA0327 		orr	r7, r7, r3, lsl #8
 442              	.LVL56:
 255:FreeModbus/functions/mbfuncholding.c **** 
 256:FreeModbus/functions/mbfuncholding.c ****         usRegWriteAddress = ( USHORT )( pucFrame[MB_PDU_FUNC_READWRITE_WRITE_ADDR_OFF] << 8U );
 443              		.loc 1 256 9 is_stmt 1 view .LVU156
 444              		.loc 1 256 49 is_stmt 0 view .LVU157
 445 0020 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 446              	.LVL57:
 257:FreeModbus/functions/mbfuncholding.c ****         usRegWriteAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_READWRITE_WRITE_ADDR_OFF + 1] );
 447              		.loc 1 257 9 is_stmt 1 view .LVU158
 448              		.loc 1 257 50 is_stmt 0 view .LVU159
 449 0022 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 450              		.loc 1 257 27 view .LVU160
 451 0024 41EA0321 		orr	r1, r1, r3, lsl #8
 452              	.LVL58:
 258:FreeModbus/functions/mbfuncholding.c ****         usRegWriteAddress++;
 453              		.loc 1 258 9 is_stmt 1 view .LVU161
 454              		.loc 1 258 26 is_stmt 0 view .LVU162
 455 0028 0131     		adds	r1, r1, #1
 456              	.LVL59:
 457              		.loc 1 258 26 view .LVU163
 458 002a 89B2     		uxth	r1, r1
 459              	.LVL60:
 259:FreeModbus/functions/mbfuncholding.c **** 
 260:FreeModbus/functions/mbfuncholding.c ****         usRegWriteCount = ( USHORT )( pucFrame[MB_PDU_FUNC_READWRITE_WRITE_REGCNT_OFF] << 8U );
 460              		.loc 1 260 9 is_stmt 1 view .LVU164
 461              		.loc 1 260 47 is_stmt 0 view .LVU165
 462 002c C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 463              	.LVL61:
 261:FreeModbus/functions/mbfuncholding.c ****         usRegWriteCount |= ( USHORT )( pucFrame[MB_PDU_FUNC_READWRITE_WRITE_REGCNT_OFF + 1] );
 464              		.loc 1 261 9 is_stmt 1 view .LVU166
 465              		.loc 1 261 48 is_stmt 0 view .LVU167
 466 002e 027A     		ldrb	r2, [r0, #8]	@ zero_extendqisi2
 467              		.loc 1 261 25 view .LVU168
 468 0030 42EA0322 		orr	r2, r2, r3, lsl #8
 469              	.LVL62:
 262:FreeModbus/functions/mbfuncholding.c **** 
 263:FreeModbus/functions/mbfuncholding.c ****         ucRegWriteByteCount = pucFrame[MB_PDU_FUNC_READWRITE_BYTECNT_OFF];
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 15


 470              		.loc 1 263 9 is_stmt 1 view .LVU169
 471              		.loc 1 263 29 is_stmt 0 view .LVU170
 472 0034 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 473              	.LVL63:
 264:FreeModbus/functions/mbfuncholding.c **** 
 265:FreeModbus/functions/mbfuncholding.c ****         if( ( usRegReadCount >= 1 ) && ( usRegReadCount <= 0x7D ) &&
 474              		.loc 1 265 9 is_stmt 1 view .LVU171
 475              		.loc 1 265 37 is_stmt 0 view .LVU172
 476 0036 7B1E     		subs	r3, r7, #1
 477 0038 9BB2     		uxth	r3, r3
 478              		.loc 1 265 11 view .LVU173
 479 003a 7C2B     		cmp	r3, #124
 480 003c 2CD8     		bhi	.L31
 481              		.loc 1 265 67 discriminator 1 view .LVU174
 482 003e 6AB3     		cbz	r2, .L32
 266:FreeModbus/functions/mbfuncholding.c ****             ( usRegWriteCount >= 1 ) && ( usRegWriteCount <= 0x79 ) &&
 483              		.loc 1 266 38 view .LVU175
 484 0040 792A     		cmp	r2, #121
 485 0042 2DD8     		bhi	.L33
 486              		.loc 1 266 69 discriminator 1 view .LVU176
 487 0044 B0EB420F 		cmp	r0, r2, lsl #1
 488 0048 01D0     		beq	.L36
 267:FreeModbus/functions/mbfuncholding.c ****             ( ( 2 * usRegWriteCount ) == ucRegWriteByteCount ) )
 268:FreeModbus/functions/mbfuncholding.c ****         {
 269:FreeModbus/functions/mbfuncholding.c ****             /* Make callback to update the register values. */
 270:FreeModbus/functions/mbfuncholding.c ****             eRegStatus = eMBRegHoldingCB( &pucFrame[MB_PDU_FUNC_READWRITE_WRITE_VALUES_OFF],
 271:FreeModbus/functions/mbfuncholding.c ****                                           usRegWriteAddress, usRegWriteCount, MB_REG_WRITE );
 272:FreeModbus/functions/mbfuncholding.c **** 
 273:FreeModbus/functions/mbfuncholding.c ****             if( eRegStatus == MB_ENOERR )
 274:FreeModbus/functions/mbfuncholding.c ****             {
 275:FreeModbus/functions/mbfuncholding.c ****                 /* Set the current PDU data pointer to the beginning. */
 276:FreeModbus/functions/mbfuncholding.c ****                 pucFrameCur = &pucFrame[MB_PDU_FUNC_OFF];
 277:FreeModbus/functions/mbfuncholding.c ****                 *usLen = MB_PDU_FUNC_OFF;
 278:FreeModbus/functions/mbfuncholding.c **** 
 279:FreeModbus/functions/mbfuncholding.c ****                 /* First byte contains the function code. */
 280:FreeModbus/functions/mbfuncholding.c ****                 *pucFrameCur++ = MB_FUNC_READWRITE_MULTIPLE_REGISTERS;
 281:FreeModbus/functions/mbfuncholding.c ****                 *usLen += 1;
 282:FreeModbus/functions/mbfuncholding.c **** 
 283:FreeModbus/functions/mbfuncholding.c ****                 /* Second byte in the response contain the number of bytes. */
 284:FreeModbus/functions/mbfuncholding.c ****                 *pucFrameCur++ = ( UCHAR ) ( usRegReadCount * 2 );
 285:FreeModbus/functions/mbfuncholding.c ****                 *usLen += 1;
 286:FreeModbus/functions/mbfuncholding.c **** 
 287:FreeModbus/functions/mbfuncholding.c ****                 /* Make the read callback. */
 288:FreeModbus/functions/mbfuncholding.c ****                 eRegStatus =
 289:FreeModbus/functions/mbfuncholding.c ****                     eMBRegHoldingCB( pucFrameCur, usRegReadAddress, usRegReadCount, MB_REG_READ );
 290:FreeModbus/functions/mbfuncholding.c ****                 if( eRegStatus == MB_ENOERR )
 291:FreeModbus/functions/mbfuncholding.c ****                 {
 292:FreeModbus/functions/mbfuncholding.c ****                     *usLen += 2 * usRegReadCount;
 293:FreeModbus/functions/mbfuncholding.c ****                 }
 294:FreeModbus/functions/mbfuncholding.c ****             }
 295:FreeModbus/functions/mbfuncholding.c ****             if( eRegStatus != MB_ENOERR )
 296:FreeModbus/functions/mbfuncholding.c ****             {
 297:FreeModbus/functions/mbfuncholding.c ****                 eStatus = prveMBError2Exception( eRegStatus );
 298:FreeModbus/functions/mbfuncholding.c ****             }
 299:FreeModbus/functions/mbfuncholding.c ****         }
 300:FreeModbus/functions/mbfuncholding.c ****         else
 301:FreeModbus/functions/mbfuncholding.c ****         {
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 16


 302:FreeModbus/functions/mbfuncholding.c ****             eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 489              		.loc 1 302 21 view .LVU177
 490 004a 0320     		movs	r0, #3
 491              	.LVL64:
 492              		.loc 1 302 21 view .LVU178
 493 004c 23E0     		b	.L28
 494              	.LVL65:
 495              	.L36:
 270:FreeModbus/functions/mbfuncholding.c ****                                           usRegWriteAddress, usRegWriteCount, MB_REG_WRITE );
 496              		.loc 1 270 13 is_stmt 1 view .LVU179
 270:FreeModbus/functions/mbfuncholding.c ****                                           usRegWriteAddress, usRegWriteCount, MB_REG_WRITE );
 497              		.loc 1 270 26 is_stmt 0 view .LVU180
 498 004e 0123     		movs	r3, #1
 499 0050 04F10A00 		add	r0, r4, #10
 500              	.LVL66:
 270:FreeModbus/functions/mbfuncholding.c ****                                           usRegWriteAddress, usRegWriteCount, MB_REG_WRITE );
 501              		.loc 1 270 26 view .LVU181
 502 0054 FFF7FEFF 		bl	eMBRegHoldingCB
 503              	.LVL67:
 270:FreeModbus/functions/mbfuncholding.c ****                                           usRegWriteAddress, usRegWriteCount, MB_REG_WRITE );
 504              		.loc 1 270 26 view .LVU182
 505 0058 0346     		mov	r3, r0
 506              	.LVL68:
 273:FreeModbus/functions/mbfuncholding.c ****             {
 507              		.loc 1 273 13 is_stmt 1 view .LVU183
 273:FreeModbus/functions/mbfuncholding.c ****             {
 508              		.loc 1 273 15 is_stmt 0 view .LVU184
 509 005a 18B1     		cbz	r0, .L37
 510              	.LVL69:
 511              	.L29:
 295:FreeModbus/functions/mbfuncholding.c ****             {
 512              		.loc 1 295 13 is_stmt 1 view .LVU185
 295:FreeModbus/functions/mbfuncholding.c ****             {
 513              		.loc 1 295 15 is_stmt 0 view .LVU186
 514 005c D8B1     		cbz	r0, .L28
 297:FreeModbus/functions/mbfuncholding.c ****             }
 515              		.loc 1 297 17 is_stmt 1 view .LVU187
 297:FreeModbus/functions/mbfuncholding.c ****             }
 516              		.loc 1 297 27 is_stmt 0 view .LVU188
 517 005e FFF7FEFF 		bl	prveMBError2Exception
 518              	.LVL70:
 297:FreeModbus/functions/mbfuncholding.c ****             }
 519              		.loc 1 297 27 view .LVU189
 520 0062 18E0     		b	.L28
 521              	.LVL71:
 522              	.L37:
 276:FreeModbus/functions/mbfuncholding.c ****                 *usLen = MB_PDU_FUNC_OFF;
 523              		.loc 1 276 17 is_stmt 1 view .LVU190
 277:FreeModbus/functions/mbfuncholding.c **** 
 524              		.loc 1 277 17 view .LVU191
 277:FreeModbus/functions/mbfuncholding.c **** 
 525              		.loc 1 277 24 is_stmt 0 view .LVU192
 526 0064 2880     		strh	r0, [r5]	@ movhi
 280:FreeModbus/functions/mbfuncholding.c ****                 *usLen += 1;
 527              		.loc 1 280 17 is_stmt 1 view .LVU193
 528              	.LVL72:
 280:FreeModbus/functions/mbfuncholding.c ****                 *usLen += 1;
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 17


 529              		.loc 1 280 32 is_stmt 0 view .LVU194
 530 0066 2046     		mov	r0, r4
 531              	.LVL73:
 280:FreeModbus/functions/mbfuncholding.c ****                 *usLen += 1;
 532              		.loc 1 280 32 view .LVU195
 533 0068 1722     		movs	r2, #23
 534 006a 00F8022B 		strb	r2, [r0], #2
 281:FreeModbus/functions/mbfuncholding.c **** 
 535              		.loc 1 281 17 is_stmt 1 view .LVU196
 281:FreeModbus/functions/mbfuncholding.c **** 
 536              		.loc 1 281 24 is_stmt 0 view .LVU197
 537 006e 2A88     		ldrh	r2, [r5]
 538 0070 0132     		adds	r2, r2, #1
 539 0072 2A80     		strh	r2, [r5]	@ movhi
 284:FreeModbus/functions/mbfuncholding.c ****                 *usLen += 1;
 540              		.loc 1 284 17 is_stmt 1 view .LVU198
 541              	.LVL74:
 284:FreeModbus/functions/mbfuncholding.c ****                 *usLen += 1;
 542              		.loc 1 284 34 is_stmt 0 view .LVU199
 543 0074 7A00     		lsls	r2, r7, #1
 284:FreeModbus/functions/mbfuncholding.c ****                 *usLen += 1;
 544              		.loc 1 284 32 view .LVU200
 545 0076 6270     		strb	r2, [r4, #1]
 285:FreeModbus/functions/mbfuncholding.c **** 
 546              		.loc 1 285 17 is_stmt 1 view .LVU201
 285:FreeModbus/functions/mbfuncholding.c **** 
 547              		.loc 1 285 24 is_stmt 0 view .LVU202
 548 0078 2A88     		ldrh	r2, [r5]
 549 007a 0132     		adds	r2, r2, #1
 550 007c 2A80     		strh	r2, [r5]	@ movhi
 288:FreeModbus/functions/mbfuncholding.c ****                     eMBRegHoldingCB( pucFrameCur, usRegReadAddress, usRegReadCount, MB_REG_READ );
 551              		.loc 1 288 17 is_stmt 1 view .LVU203
 289:FreeModbus/functions/mbfuncholding.c ****                 if( eRegStatus == MB_ENOERR )
 552              		.loc 1 289 21 is_stmt 0 view .LVU204
 553 007e 3A46     		mov	r2, r7
 554 0080 3146     		mov	r1, r6
 555 0082 FFF7FEFF 		bl	eMBRegHoldingCB
 556              	.LVL75:
 290:FreeModbus/functions/mbfuncholding.c ****                 {
 557              		.loc 1 290 17 is_stmt 1 view .LVU205
 290:FreeModbus/functions/mbfuncholding.c ****                 {
 558              		.loc 1 290 19 is_stmt 0 view .LVU206
 559 0086 0028     		cmp	r0, #0
 560 0088 E8D1     		bne	.L29
 292:FreeModbus/functions/mbfuncholding.c ****                 }
 561              		.loc 1 292 21 is_stmt 1 view .LVU207
 292:FreeModbus/functions/mbfuncholding.c ****                 }
 562              		.loc 1 292 28 is_stmt 0 view .LVU208
 563 008a 2B88     		ldrh	r3, [r5]
 564 008c 03EB4707 		add	r7, r3, r7, lsl #1
 565              	.LVL76:
 292:FreeModbus/functions/mbfuncholding.c ****                 }
 566              		.loc 1 292 28 view .LVU209
 567 0090 2F80     		strh	r7, [r5]	@ movhi
 568 0092 E3E7     		b	.L29
 569              	.LVL77:
 570              	.L30:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 18


 244:FreeModbus/functions/mbfuncholding.c ****     eMBErrorCode    eRegStatus;
 571              		.loc 1 244 21 view .LVU210
 572 0094 0020     		movs	r0, #0
 573              	.LVL78:
 574              	.L28:
 303:FreeModbus/functions/mbfuncholding.c ****         }
 304:FreeModbus/functions/mbfuncholding.c ****     }
 305:FreeModbus/functions/mbfuncholding.c ****     return eStatus;
 575              		.loc 1 305 5 is_stmt 1 view .LVU211
 306:FreeModbus/functions/mbfuncholding.c **** }
 576              		.loc 1 306 1 is_stmt 0 view .LVU212
 577 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 578              	.LVL79:
 579              	.L31:
 302:FreeModbus/functions/mbfuncholding.c ****         }
 580              		.loc 1 302 21 view .LVU213
 581 0098 0320     		movs	r0, #3
 582              	.LVL80:
 302:FreeModbus/functions/mbfuncholding.c ****         }
 583              		.loc 1 302 21 view .LVU214
 584 009a FCE7     		b	.L28
 585              	.LVL81:
 586              	.L32:
 302:FreeModbus/functions/mbfuncholding.c ****         }
 587              		.loc 1 302 21 view .LVU215
 588 009c 0320     		movs	r0, #3
 589              	.LVL82:
 302:FreeModbus/functions/mbfuncholding.c ****         }
 590              		.loc 1 302 21 view .LVU216
 591 009e FAE7     		b	.L28
 592              	.LVL83:
 593              	.L33:
 302:FreeModbus/functions/mbfuncholding.c ****         }
 594              		.loc 1 302 21 view .LVU217
 595 00a0 0320     		movs	r0, #3
 596              	.LVL84:
 302:FreeModbus/functions/mbfuncholding.c ****         }
 597              		.loc 1 302 21 view .LVU218
 598 00a2 F8E7     		b	.L28
 599              		.cfi_endproc
 600              	.LFE68:
 602              		.text
 603              	.Letext0:
 604              		.file 2 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
 605              		.file 3 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 606              		.file 4 "FreeModbus/port/port.h"
 607              		.file 5 "FreeModbus/include/mbproto.h"
 608              		.file 6 "FreeModbus/include/mb.h"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 mbfuncholding.c
C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s:18     .text.eMBFuncWriteHoldingRegister:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s:24     .text.eMBFuncWriteHoldingRegister:00000000 eMBFuncWriteHoldingRegister
C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s:97     .text.eMBFuncWriteMultipleHoldingRegister:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s:103    .text.eMBFuncWriteMultipleHoldingRegister:00000000 eMBFuncWriteMultipleHoldingRegister
C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s:231    .text.eMBFuncReadHoldingRegister:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s:237    .text.eMBFuncReadHoldingRegister:00000000 eMBFuncReadHoldingRegister
C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s:375    .text.eMBFuncReadWriteMultipleHoldingRegister:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cczkTcJd.s:381    .text.eMBFuncReadWriteMultipleHoldingRegister:00000000 eMBFuncReadWriteMultipleHoldingRegister

UNDEFINED SYMBOLS
eMBRegHoldingCB
prveMBError2Exception
