ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cchtMqVm.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mbfuncdisc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.eMBFuncReadDiscreteInputs,"ax",%progbits
  18              		.align	1
  19              		.global	eMBFuncReadDiscreteInputs
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	eMBFuncReadDiscreteInputs:
  25              	.LVL0:
  26              	.LFB65:
  27              		.file 1 "FreeModbus/functions/mbfuncdisc.c"
   1:FreeModbus/functions/mbfuncdisc.c **** /* 
   2:FreeModbus/functions/mbfuncdisc.c ****  * FreeModbus Libary: A portable Modbus implementation for Modbus ASCII/RTU.
   3:FreeModbus/functions/mbfuncdisc.c ****  * Copyright (c) 2006-2018 Christian Walter <cwalter@embedded-solutions.at>
   4:FreeModbus/functions/mbfuncdisc.c ****  * All rights reserved.
   5:FreeModbus/functions/mbfuncdisc.c ****  *
   6:FreeModbus/functions/mbfuncdisc.c ****  * Redistribution and use in source and binary forms, with or without
   7:FreeModbus/functions/mbfuncdisc.c ****  * modification, are permitted provided that the following conditions
   8:FreeModbus/functions/mbfuncdisc.c ****  * are met:
   9:FreeModbus/functions/mbfuncdisc.c ****  * 1. Redistributions of source code must retain the above copyright
  10:FreeModbus/functions/mbfuncdisc.c ****  *    notice, this list of conditions and the following disclaimer.
  11:FreeModbus/functions/mbfuncdisc.c ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:FreeModbus/functions/mbfuncdisc.c ****  *    notice, this list of conditions and the following disclaimer in the
  13:FreeModbus/functions/mbfuncdisc.c ****  *    documentation and/or other materials provided with the distribution.
  14:FreeModbus/functions/mbfuncdisc.c ****  * 3. The name of the author may not be used to endorse or promote products
  15:FreeModbus/functions/mbfuncdisc.c ****  *    derived from this software without specific prior written permission.
  16:FreeModbus/functions/mbfuncdisc.c ****  *
  17:FreeModbus/functions/mbfuncdisc.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  18:FreeModbus/functions/mbfuncdisc.c ****  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  19:FreeModbus/functions/mbfuncdisc.c ****  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  20:FreeModbus/functions/mbfuncdisc.c ****  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
  21:FreeModbus/functions/mbfuncdisc.c ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  22:FreeModbus/functions/mbfuncdisc.c ****  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  23:FreeModbus/functions/mbfuncdisc.c ****  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  24:FreeModbus/functions/mbfuncdisc.c ****  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  25:FreeModbus/functions/mbfuncdisc.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  26:FreeModbus/functions/mbfuncdisc.c ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  27:FreeModbus/functions/mbfuncdisc.c ****  *
  28:FreeModbus/functions/mbfuncdisc.c ****  */
  29:FreeModbus/functions/mbfuncdisc.c **** 
  30:FreeModbus/functions/mbfuncdisc.c **** /* ----------------------- System includes ----------------------------------*/
  31:FreeModbus/functions/mbfuncdisc.c **** #include "stdlib.h"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cchtMqVm.s 			page 2


  32:FreeModbus/functions/mbfuncdisc.c **** #include "string.h"
  33:FreeModbus/functions/mbfuncdisc.c **** 
  34:FreeModbus/functions/mbfuncdisc.c **** /* ----------------------- Platform includes --------------------------------*/
  35:FreeModbus/functions/mbfuncdisc.c **** #include "port.h"
  36:FreeModbus/functions/mbfuncdisc.c **** 
  37:FreeModbus/functions/mbfuncdisc.c **** /* ----------------------- Modbus includes ----------------------------------*/
  38:FreeModbus/functions/mbfuncdisc.c **** #include "mb.h"
  39:FreeModbus/functions/mbfuncdisc.c **** #include "mbframe.h"
  40:FreeModbus/functions/mbfuncdisc.c **** #include "mbproto.h"
  41:FreeModbus/functions/mbfuncdisc.c **** #include "mbconfig.h"
  42:FreeModbus/functions/mbfuncdisc.c **** 
  43:FreeModbus/functions/mbfuncdisc.c **** /* ----------------------- Defines ------------------------------------------*/
  44:FreeModbus/functions/mbfuncdisc.c **** #define MB_PDU_FUNC_READ_ADDR_OFF           ( MB_PDU_DATA_OFF )
  45:FreeModbus/functions/mbfuncdisc.c **** #define MB_PDU_FUNC_READ_DISCCNT_OFF        ( MB_PDU_DATA_OFF + 2 )
  46:FreeModbus/functions/mbfuncdisc.c **** #define MB_PDU_FUNC_READ_SIZE               ( 4 )
  47:FreeModbus/functions/mbfuncdisc.c **** #define MB_PDU_FUNC_READ_DISCCNT_MAX        ( 0x07D0 )
  48:FreeModbus/functions/mbfuncdisc.c **** 
  49:FreeModbus/functions/mbfuncdisc.c **** /* ----------------------- Static functions ---------------------------------*/
  50:FreeModbus/functions/mbfuncdisc.c **** eMBException    prveMBError2Exception( eMBErrorCode eErrorCode );
  51:FreeModbus/functions/mbfuncdisc.c **** 
  52:FreeModbus/functions/mbfuncdisc.c **** /* ----------------------- Start implementation -----------------------------*/
  53:FreeModbus/functions/mbfuncdisc.c **** 
  54:FreeModbus/functions/mbfuncdisc.c **** #if MB_FUNC_READ_COILS_ENABLED > 0
  55:FreeModbus/functions/mbfuncdisc.c **** 
  56:FreeModbus/functions/mbfuncdisc.c **** eMBException
  57:FreeModbus/functions/mbfuncdisc.c **** eMBFuncReadDiscreteInputs( UCHAR * pucFrame, USHORT * usLen )
  58:FreeModbus/functions/mbfuncdisc.c **** {
  28              		.loc 1 58 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 58 1 is_stmt 0 view .LVU1
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  59:FreeModbus/functions/mbfuncdisc.c ****     USHORT          usRegAddress;
  40              		.loc 1 59 5 is_stmt 1 view .LVU2
  60:FreeModbus/functions/mbfuncdisc.c ****     USHORT          usDiscreteCnt;
  41              		.loc 1 60 5 view .LVU3
  61:FreeModbus/functions/mbfuncdisc.c ****     UCHAR           ucNBytes;
  42              		.loc 1 61 5 view .LVU4
  62:FreeModbus/functions/mbfuncdisc.c ****     UCHAR          *pucFrameCur;
  43              		.loc 1 62 5 view .LVU5
  63:FreeModbus/functions/mbfuncdisc.c **** 
  64:FreeModbus/functions/mbfuncdisc.c ****     eMBException    eStatus = MB_EX_NONE;
  44              		.loc 1 64 5 view .LVU6
  45              	.LVL1:
  65:FreeModbus/functions/mbfuncdisc.c ****     eMBErrorCode    eRegStatus;
  46              		.loc 1 65 5 view .LVU7
  66:FreeModbus/functions/mbfuncdisc.c **** 
  67:FreeModbus/functions/mbfuncdisc.c ****     if( *usLen == ( MB_PDU_FUNC_READ_SIZE + MB_PDU_SIZE_MIN ) )
  47              		.loc 1 67 5 view .LVU8
  48              		.loc 1 67 9 is_stmt 0 view .LVU9
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cchtMqVm.s 			page 3


  49 0002 0B88     		ldrh	r3, [r1]
  50              		.loc 1 67 7 view .LVU10
  51 0004 052B     		cmp	r3, #5
  52 0006 01D0     		beq	.L9
  68:FreeModbus/functions/mbfuncdisc.c ****     {
  69:FreeModbus/functions/mbfuncdisc.c ****         usRegAddress = ( USHORT )( pucFrame[MB_PDU_FUNC_READ_ADDR_OFF] << 8 );
  70:FreeModbus/functions/mbfuncdisc.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_ADDR_OFF + 1] );
  71:FreeModbus/functions/mbfuncdisc.c ****         usRegAddress++;
  72:FreeModbus/functions/mbfuncdisc.c **** 
  73:FreeModbus/functions/mbfuncdisc.c ****         usDiscreteCnt = ( USHORT )( pucFrame[MB_PDU_FUNC_READ_DISCCNT_OFF] << 8 );
  74:FreeModbus/functions/mbfuncdisc.c ****         usDiscreteCnt |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_DISCCNT_OFF + 1] );
  75:FreeModbus/functions/mbfuncdisc.c **** 
  76:FreeModbus/functions/mbfuncdisc.c ****         /* Check if the number of registers to read is valid. If not
  77:FreeModbus/functions/mbfuncdisc.c ****          * return Modbus illegal data value exception. 
  78:FreeModbus/functions/mbfuncdisc.c ****          */
  79:FreeModbus/functions/mbfuncdisc.c ****         if( ( usDiscreteCnt >= 1 ) &&
  80:FreeModbus/functions/mbfuncdisc.c ****             ( usDiscreteCnt < MB_PDU_FUNC_READ_DISCCNT_MAX ) )
  81:FreeModbus/functions/mbfuncdisc.c ****         {
  82:FreeModbus/functions/mbfuncdisc.c ****             /* Set the current PDU data pointer to the beginning. */
  83:FreeModbus/functions/mbfuncdisc.c ****             pucFrameCur = &pucFrame[MB_PDU_FUNC_OFF];
  84:FreeModbus/functions/mbfuncdisc.c ****             *usLen = MB_PDU_FUNC_OFF;
  85:FreeModbus/functions/mbfuncdisc.c **** 
  86:FreeModbus/functions/mbfuncdisc.c ****             /* First byte contains the function code. */
  87:FreeModbus/functions/mbfuncdisc.c ****             *pucFrameCur++ = MB_FUNC_READ_DISCRETE_INPUTS;
  88:FreeModbus/functions/mbfuncdisc.c ****             *usLen += 1;
  89:FreeModbus/functions/mbfuncdisc.c **** 
  90:FreeModbus/functions/mbfuncdisc.c ****             /* Test if the quantity of coils is a multiple of 8. If not last
  91:FreeModbus/functions/mbfuncdisc.c ****              * byte is only partially field with unused coils set to zero. */
  92:FreeModbus/functions/mbfuncdisc.c ****             if( ( usDiscreteCnt & 0x0007 ) != 0 )
  93:FreeModbus/functions/mbfuncdisc.c ****             {
  94:FreeModbus/functions/mbfuncdisc.c ****                 ucNBytes = ( UCHAR ) ( usDiscreteCnt / 8 + 1 );
  95:FreeModbus/functions/mbfuncdisc.c ****             }
  96:FreeModbus/functions/mbfuncdisc.c ****             else
  97:FreeModbus/functions/mbfuncdisc.c ****             {
  98:FreeModbus/functions/mbfuncdisc.c ****                 ucNBytes = ( UCHAR ) ( usDiscreteCnt / 8 );
  99:FreeModbus/functions/mbfuncdisc.c ****             }
 100:FreeModbus/functions/mbfuncdisc.c ****             *pucFrameCur++ = ucNBytes;
 101:FreeModbus/functions/mbfuncdisc.c ****             *usLen += 1;
 102:FreeModbus/functions/mbfuncdisc.c **** 
 103:FreeModbus/functions/mbfuncdisc.c ****             eRegStatus =
 104:FreeModbus/functions/mbfuncdisc.c ****                 eMBRegDiscreteCB( pucFrameCur, usRegAddress, usDiscreteCnt );
 105:FreeModbus/functions/mbfuncdisc.c **** 
 106:FreeModbus/functions/mbfuncdisc.c ****             /* If an error occured convert it into a Modbus exception. */
 107:FreeModbus/functions/mbfuncdisc.c ****             if( eRegStatus != MB_ENOERR )
 108:FreeModbus/functions/mbfuncdisc.c ****             {
 109:FreeModbus/functions/mbfuncdisc.c ****                 eStatus = prveMBError2Exception( eRegStatus );
 110:FreeModbus/functions/mbfuncdisc.c ****             }
 111:FreeModbus/functions/mbfuncdisc.c ****             else
 112:FreeModbus/functions/mbfuncdisc.c ****             {
 113:FreeModbus/functions/mbfuncdisc.c ****                 /* The response contains the function code, the starting address
 114:FreeModbus/functions/mbfuncdisc.c ****                  * and the quantity of registers. We reuse the old values in the 
 115:FreeModbus/functions/mbfuncdisc.c ****                  * buffer because they are still valid. */
 116:FreeModbus/functions/mbfuncdisc.c ****                 *usLen += ucNBytes;;
 117:FreeModbus/functions/mbfuncdisc.c ****             }
 118:FreeModbus/functions/mbfuncdisc.c ****         }
 119:FreeModbus/functions/mbfuncdisc.c ****         else
 120:FreeModbus/functions/mbfuncdisc.c ****         {
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cchtMqVm.s 			page 4


 121:FreeModbus/functions/mbfuncdisc.c ****             eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 122:FreeModbus/functions/mbfuncdisc.c ****         }
 123:FreeModbus/functions/mbfuncdisc.c ****     }
 124:FreeModbus/functions/mbfuncdisc.c ****     else
 125:FreeModbus/functions/mbfuncdisc.c ****     {
 126:FreeModbus/functions/mbfuncdisc.c ****         /* Can't be a valid read coil register request because the length
 127:FreeModbus/functions/mbfuncdisc.c ****          * is incorrect. */
 128:FreeModbus/functions/mbfuncdisc.c ****         eStatus = MB_EX_ILLEGAL_DATA_VALUE;
  53              		.loc 1 128 17 view .LVU11
  54 0008 0320     		movs	r0, #3
  55              	.LVL2:
  56              	.L2:
 129:FreeModbus/functions/mbfuncdisc.c ****     }
 130:FreeModbus/functions/mbfuncdisc.c ****     return eStatus;
  57              		.loc 1 130 5 is_stmt 1 view .LVU12
 131:FreeModbus/functions/mbfuncdisc.c **** }
  58              		.loc 1 131 1 is_stmt 0 view .LVU13
  59 000a 38BD     		pop	{r3, r4, r5, pc}
  60              	.LVL3:
  61              	.L9:
  62              		.loc 1 131 1 view .LVU14
  63 000c 0C46     		mov	r4, r1
  69:FreeModbus/functions/mbfuncdisc.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_ADDR_OFF + 1] );
  64              		.loc 1 69 9 is_stmt 1 view .LVU15
  69:FreeModbus/functions/mbfuncdisc.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_ADDR_OFF + 1] );
  65              		.loc 1 69 44 is_stmt 0 view .LVU16
  66 000e 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  67              	.LVL4:
  70:FreeModbus/functions/mbfuncdisc.c ****         usRegAddress++;
  68              		.loc 1 70 9 is_stmt 1 view .LVU17
  70:FreeModbus/functions/mbfuncdisc.c ****         usRegAddress++;
  69              		.loc 1 70 45 is_stmt 0 view .LVU18
  70 0010 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
  71              	.LVL5:
  70:FreeModbus/functions/mbfuncdisc.c ****         usRegAddress++;
  72              		.loc 1 70 22 view .LVU19
  73 0012 41EA0321 		orr	r1, r1, r3, lsl #8
  74              	.LVL6:
  71:FreeModbus/functions/mbfuncdisc.c **** 
  75              		.loc 1 71 9 is_stmt 1 view .LVU20
  71:FreeModbus/functions/mbfuncdisc.c **** 
  76              		.loc 1 71 21 is_stmt 0 view .LVU21
  77 0016 0131     		adds	r1, r1, #1
  78              	.LVL7:
  71:FreeModbus/functions/mbfuncdisc.c **** 
  79              		.loc 1 71 21 view .LVU22
  80 0018 89B2     		uxth	r1, r1
  81              	.LVL8:
  73:FreeModbus/functions/mbfuncdisc.c ****         usDiscreteCnt |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_DISCCNT_OFF + 1] );
  82              		.loc 1 73 9 is_stmt 1 view .LVU23
  73:FreeModbus/functions/mbfuncdisc.c ****         usDiscreteCnt |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_DISCCNT_OFF + 1] );
  83              		.loc 1 73 45 is_stmt 0 view .LVU24
  84 001a C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
  85              	.LVL9:
  74:FreeModbus/functions/mbfuncdisc.c **** 
  86              		.loc 1 74 9 is_stmt 1 view .LVU25
  74:FreeModbus/functions/mbfuncdisc.c **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cchtMqVm.s 			page 5


  87              		.loc 1 74 46 is_stmt 0 view .LVU26
  88 001c 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
  74:FreeModbus/functions/mbfuncdisc.c **** 
  89              		.loc 1 74 23 view .LVU27
  90 001e 42EA0322 		orr	r2, r2, r3, lsl #8
  91              	.LVL10:
  79:FreeModbus/functions/mbfuncdisc.c ****             ( usDiscreteCnt < MB_PDU_FUNC_READ_DISCCNT_MAX ) )
  92              		.loc 1 79 9 is_stmt 1 view .LVU28
  79:FreeModbus/functions/mbfuncdisc.c ****             ( usDiscreteCnt < MB_PDU_FUNC_READ_DISCCNT_MAX ) )
  93              		.loc 1 79 36 is_stmt 0 view .LVU29
  94 0022 531E     		subs	r3, r2, #1
  95 0024 9BB2     		uxth	r3, r3
  79:FreeModbus/functions/mbfuncdisc.c ****             ( usDiscreteCnt < MB_PDU_FUNC_READ_DISCCNT_MAX ) )
  96              		.loc 1 79 11 view .LVU30
  97 0026 40F2CE7C 		movw	ip, #1998
  98 002a 6345     		cmp	r3, ip
  99 002c 1FD8     		bhi	.L7
  83:FreeModbus/functions/mbfuncdisc.c ****             *usLen = MB_PDU_FUNC_OFF;
 100              		.loc 1 83 13 is_stmt 1 view .LVU31
 101              	.LVL11:
  84:FreeModbus/functions/mbfuncdisc.c **** 
 102              		.loc 1 84 13 view .LVU32
  84:FreeModbus/functions/mbfuncdisc.c **** 
 103              		.loc 1 84 20 is_stmt 0 view .LVU33
 104 002e 0023     		movs	r3, #0
 105 0030 2380     		strh	r3, [r4]	@ movhi
  87:FreeModbus/functions/mbfuncdisc.c ****             *usLen += 1;
 106              		.loc 1 87 13 is_stmt 1 view .LVU34
 107              	.LVL12:
  87:FreeModbus/functions/mbfuncdisc.c ****             *usLen += 1;
 108              		.loc 1 87 28 is_stmt 0 view .LVU35
 109 0032 0223     		movs	r3, #2
 110 0034 0370     		strb	r3, [r0]
  88:FreeModbus/functions/mbfuncdisc.c **** 
 111              		.loc 1 88 13 is_stmt 1 view .LVU36
  88:FreeModbus/functions/mbfuncdisc.c **** 
 112              		.loc 1 88 20 is_stmt 0 view .LVU37
 113 0036 2388     		ldrh	r3, [r4]
 114 0038 0133     		adds	r3, r3, #1
 115 003a 2380     		strh	r3, [r4]	@ movhi
  92:FreeModbus/functions/mbfuncdisc.c ****             {
 116              		.loc 1 92 13 is_stmt 1 view .LVU38
  92:FreeModbus/functions/mbfuncdisc.c ****             {
 117              		.loc 1 92 15 is_stmt 0 view .LVU39
 118 003c 12F0070F 		tst	r2, #7
 119 0040 0FD0     		beq	.L3
  94:FreeModbus/functions/mbfuncdisc.c ****             }
 120              		.loc 1 94 17 is_stmt 1 view .LVU40
  94:FreeModbus/functions/mbfuncdisc.c ****             }
 121              		.loc 1 94 28 is_stmt 0 view .LVU41
 122 0042 C2F3C703 		ubfx	r3, r2, #3, #8
  94:FreeModbus/functions/mbfuncdisc.c ****             }
 123              		.loc 1 94 26 view .LVU42
 124 0046 0133     		adds	r3, r3, #1
 125 0048 DDB2     		uxtb	r5, r3
 126              	.LVL13:
 127              	.L4:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cchtMqVm.s 			page 6


 100:FreeModbus/functions/mbfuncdisc.c ****             *usLen += 1;
 128              		.loc 1 100 13 is_stmt 1 view .LVU43
 100:FreeModbus/functions/mbfuncdisc.c ****             *usLen += 1;
 129              		.loc 1 100 28 is_stmt 0 view .LVU44
 130 004a 4570     		strb	r5, [r0, #1]
 101:FreeModbus/functions/mbfuncdisc.c **** 
 131              		.loc 1 101 13 is_stmt 1 view .LVU45
 101:FreeModbus/functions/mbfuncdisc.c **** 
 132              		.loc 1 101 20 is_stmt 0 view .LVU46
 133 004c 2388     		ldrh	r3, [r4]
 134 004e 0133     		adds	r3, r3, #1
 135 0050 2380     		strh	r3, [r4]	@ movhi
 103:FreeModbus/functions/mbfuncdisc.c ****                 eMBRegDiscreteCB( pucFrameCur, usRegAddress, usDiscreteCnt );
 136              		.loc 1 103 13 is_stmt 1 view .LVU47
 104:FreeModbus/functions/mbfuncdisc.c **** 
 137              		.loc 1 104 17 is_stmt 0 view .LVU48
 138 0052 0230     		adds	r0, r0, #2
 139              	.LVL14:
 104:FreeModbus/functions/mbfuncdisc.c **** 
 140              		.loc 1 104 17 view .LVU49
 141 0054 FFF7FEFF 		bl	eMBRegDiscreteCB
 142              	.LVL15:
 107:FreeModbus/functions/mbfuncdisc.c ****             {
 143              		.loc 1 107 13 is_stmt 1 view .LVU50
 107:FreeModbus/functions/mbfuncdisc.c ****             {
 144              		.loc 1 107 15 is_stmt 0 view .LVU51
 145 0058 30B9     		cbnz	r0, .L10
 116:FreeModbus/functions/mbfuncdisc.c ****             }
 146              		.loc 1 116 17 is_stmt 1 view .LVU52
 116:FreeModbus/functions/mbfuncdisc.c ****             }
 147              		.loc 1 116 24 is_stmt 0 view .LVU53
 148 005a 2388     		ldrh	r3, [r4]
 149 005c 2B44     		add	r3, r3, r5
 150 005e 2380     		strh	r3, [r4]	@ movhi
 151 0060 D3E7     		b	.L2
 152              	.LVL16:
 153              	.L3:
  98:FreeModbus/functions/mbfuncdisc.c ****             }
 154              		.loc 1 98 17 is_stmt 1 view .LVU54
  98:FreeModbus/functions/mbfuncdisc.c ****             }
 155              		.loc 1 98 26 is_stmt 0 view .LVU55
 156 0062 C2F3C705 		ubfx	r5, r2, #3, #8
 157              	.LVL17:
  98:FreeModbus/functions/mbfuncdisc.c ****             }
 158              		.loc 1 98 26 view .LVU56
 159 0066 F0E7     		b	.L4
 160              	.LVL18:
 161              	.L10:
 109:FreeModbus/functions/mbfuncdisc.c ****             }
 162              		.loc 1 109 17 is_stmt 1 view .LVU57
 109:FreeModbus/functions/mbfuncdisc.c ****             }
 163              		.loc 1 109 27 is_stmt 0 view .LVU58
 164 0068 FFF7FEFF 		bl	prveMBError2Exception
 165              	.LVL19:
 109:FreeModbus/functions/mbfuncdisc.c ****             }
 166              		.loc 1 109 27 view .LVU59
 167 006c CDE7     		b	.L2
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cchtMqVm.s 			page 7


 168              	.LVL20:
 169              	.L7:
 121:FreeModbus/functions/mbfuncdisc.c ****         }
 170              		.loc 1 121 21 view .LVU60
 171 006e 0320     		movs	r0, #3
 172              	.LVL21:
 121:FreeModbus/functions/mbfuncdisc.c ****         }
 173              		.loc 1 121 21 view .LVU61
 174 0070 CBE7     		b	.L2
 175              		.cfi_endproc
 176              	.LFE65:
 178              		.text
 179              	.Letext0:
 180              		.file 2 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
 181              		.file 3 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 182              		.file 4 "FreeModbus/port/port.h"
 183              		.file 5 "FreeModbus/include/mbproto.h"
 184              		.file 6 "FreeModbus/include/mb.h"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cchtMqVm.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 mbfuncdisc.c
C:\Users\BLACK_~1\AppData\Local\Temp\cchtMqVm.s:18     .text.eMBFuncReadDiscreteInputs:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cchtMqVm.s:24     .text.eMBFuncReadDiscreteInputs:00000000 eMBFuncReadDiscreteInputs

UNDEFINED SYMBOLS
eMBRegDiscreteCB
prveMBError2Exception
