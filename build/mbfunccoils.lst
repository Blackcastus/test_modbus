ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mbfunccoils.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.eMBFuncReadCoils,"ax",%progbits
  18              		.align	1
  19              		.global	eMBFuncReadCoils
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	eMBFuncReadCoils:
  25              	.LVL0:
  26              	.LFB65:
  27              		.file 1 "FreeModbus/functions/mbfunccoils.c"
   1:FreeModbus/functions/mbfunccoils.c **** /* 
   2:FreeModbus/functions/mbfunccoils.c ****  * FreeModbus Libary: A portable Modbus implementation for Modbus ASCII/RTU.
   3:FreeModbus/functions/mbfunccoils.c ****  * Copyright (c) 2006-2018 Christian Walter <cwalter@embedded-solutions.at>
   4:FreeModbus/functions/mbfunccoils.c ****  * All rights reserved.
   5:FreeModbus/functions/mbfunccoils.c ****  *
   6:FreeModbus/functions/mbfunccoils.c ****  * Redistribution and use in source and binary forms, with or without
   7:FreeModbus/functions/mbfunccoils.c ****  * modification, are permitted provided that the following conditions
   8:FreeModbus/functions/mbfunccoils.c ****  * are met:
   9:FreeModbus/functions/mbfunccoils.c ****  * 1. Redistributions of source code must retain the above copyright
  10:FreeModbus/functions/mbfunccoils.c ****  *    notice, this list of conditions and the following disclaimer.
  11:FreeModbus/functions/mbfunccoils.c ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:FreeModbus/functions/mbfunccoils.c ****  *    notice, this list of conditions and the following disclaimer in the
  13:FreeModbus/functions/mbfunccoils.c ****  *    documentation and/or other materials provided with the distribution.
  14:FreeModbus/functions/mbfunccoils.c ****  * 3. The name of the author may not be used to endorse or promote products
  15:FreeModbus/functions/mbfunccoils.c ****  *    derived from this software without specific prior written permission.
  16:FreeModbus/functions/mbfunccoils.c ****  *
  17:FreeModbus/functions/mbfunccoils.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  18:FreeModbus/functions/mbfunccoils.c ****  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  19:FreeModbus/functions/mbfunccoils.c ****  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  20:FreeModbus/functions/mbfunccoils.c ****  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
  21:FreeModbus/functions/mbfunccoils.c ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  22:FreeModbus/functions/mbfunccoils.c ****  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  23:FreeModbus/functions/mbfunccoils.c ****  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  24:FreeModbus/functions/mbfunccoils.c ****  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  25:FreeModbus/functions/mbfunccoils.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  26:FreeModbus/functions/mbfunccoils.c ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  27:FreeModbus/functions/mbfunccoils.c ****  *
  28:FreeModbus/functions/mbfunccoils.c ****  * File: $Id: mbfunccoils.c,v 1.8 2007/02/18 23:47:16 wolti Exp $
  29:FreeModbus/functions/mbfunccoils.c ****  */
  30:FreeModbus/functions/mbfunccoils.c **** 
  31:FreeModbus/functions/mbfunccoils.c **** /* ----------------------- System includes ----------------------------------*/
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s 			page 2


  32:FreeModbus/functions/mbfunccoils.c **** #include "stdlib.h"
  33:FreeModbus/functions/mbfunccoils.c **** #include "string.h"
  34:FreeModbus/functions/mbfunccoils.c **** 
  35:FreeModbus/functions/mbfunccoils.c **** /* ----------------------- Platform includes --------------------------------*/
  36:FreeModbus/functions/mbfunccoils.c **** #include "port.h"
  37:FreeModbus/functions/mbfunccoils.c **** 
  38:FreeModbus/functions/mbfunccoils.c **** /* ----------------------- Modbus includes ----------------------------------*/
  39:FreeModbus/functions/mbfunccoils.c **** #include "mb.h"
  40:FreeModbus/functions/mbfunccoils.c **** #include "mbframe.h"
  41:FreeModbus/functions/mbfunccoils.c **** #include "mbproto.h"
  42:FreeModbus/functions/mbfunccoils.c **** #include "mbconfig.h"
  43:FreeModbus/functions/mbfunccoils.c **** 
  44:FreeModbus/functions/mbfunccoils.c **** /* ----------------------- Defines ------------------------------------------*/
  45:FreeModbus/functions/mbfunccoils.c **** #define MB_PDU_FUNC_READ_ADDR_OFF           ( MB_PDU_DATA_OFF )
  46:FreeModbus/functions/mbfunccoils.c **** #define MB_PDU_FUNC_READ_COILCNT_OFF        ( MB_PDU_DATA_OFF + 2 )
  47:FreeModbus/functions/mbfunccoils.c **** #define MB_PDU_FUNC_READ_SIZE               ( 4 )
  48:FreeModbus/functions/mbfunccoils.c **** #define MB_PDU_FUNC_READ_COILCNT_MAX        ( 0x07D0 )
  49:FreeModbus/functions/mbfunccoils.c **** 
  50:FreeModbus/functions/mbfunccoils.c **** #define MB_PDU_FUNC_WRITE_ADDR_OFF          ( MB_PDU_DATA_OFF )
  51:FreeModbus/functions/mbfunccoils.c **** #define MB_PDU_FUNC_WRITE_VALUE_OFF         ( MB_PDU_DATA_OFF + 2 )
  52:FreeModbus/functions/mbfunccoils.c **** #define MB_PDU_FUNC_WRITE_SIZE              ( 4 )
  53:FreeModbus/functions/mbfunccoils.c **** 
  54:FreeModbus/functions/mbfunccoils.c **** #define MB_PDU_FUNC_WRITE_MUL_ADDR_OFF      ( MB_PDU_DATA_OFF )
  55:FreeModbus/functions/mbfunccoils.c **** #define MB_PDU_FUNC_WRITE_MUL_COILCNT_OFF   ( MB_PDU_DATA_OFF + 2 )
  56:FreeModbus/functions/mbfunccoils.c **** #define MB_PDU_FUNC_WRITE_MUL_BYTECNT_OFF   ( MB_PDU_DATA_OFF + 4 )
  57:FreeModbus/functions/mbfunccoils.c **** #define MB_PDU_FUNC_WRITE_MUL_VALUES_OFF    ( MB_PDU_DATA_OFF + 5 )
  58:FreeModbus/functions/mbfunccoils.c **** #define MB_PDU_FUNC_WRITE_MUL_SIZE_MIN      ( 5 )
  59:FreeModbus/functions/mbfunccoils.c **** #define MB_PDU_FUNC_WRITE_MUL_COILCNT_MAX   ( 0x07B0 )
  60:FreeModbus/functions/mbfunccoils.c **** 
  61:FreeModbus/functions/mbfunccoils.c **** /* ----------------------- Static functions ---------------------------------*/
  62:FreeModbus/functions/mbfunccoils.c **** eMBException    prveMBError2Exception( eMBErrorCode eErrorCode );
  63:FreeModbus/functions/mbfunccoils.c **** 
  64:FreeModbus/functions/mbfunccoils.c **** /* ----------------------- Start implementation -----------------------------*/
  65:FreeModbus/functions/mbfunccoils.c **** 
  66:FreeModbus/functions/mbfunccoils.c **** #if MB_FUNC_READ_COILS_ENABLED > 0
  67:FreeModbus/functions/mbfunccoils.c **** 
  68:FreeModbus/functions/mbfunccoils.c **** eMBException
  69:FreeModbus/functions/mbfunccoils.c **** eMBFuncReadCoils( UCHAR * pucFrame, USHORT * usLen )
  70:FreeModbus/functions/mbfunccoils.c **** {
  28              		.loc 1 70 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 70 1 is_stmt 0 view .LVU1
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  71:FreeModbus/functions/mbfunccoils.c ****     USHORT          usRegAddress;
  40              		.loc 1 71 5 is_stmt 1 view .LVU2
  72:FreeModbus/functions/mbfunccoils.c ****     USHORT          usCoilCount;
  41              		.loc 1 72 5 view .LVU3
  73:FreeModbus/functions/mbfunccoils.c ****     UCHAR           ucNBytes;
  42              		.loc 1 73 5 view .LVU4
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s 			page 3


  74:FreeModbus/functions/mbfunccoils.c ****     UCHAR          *pucFrameCur;
  43              		.loc 1 74 5 view .LVU5
  75:FreeModbus/functions/mbfunccoils.c **** 
  76:FreeModbus/functions/mbfunccoils.c ****     eMBException    eStatus = MB_EX_NONE;
  44              		.loc 1 76 5 view .LVU6
  45              	.LVL1:
  77:FreeModbus/functions/mbfunccoils.c ****     eMBErrorCode    eRegStatus;
  46              		.loc 1 77 5 view .LVU7
  78:FreeModbus/functions/mbfunccoils.c **** 
  79:FreeModbus/functions/mbfunccoils.c ****     if( *usLen == ( MB_PDU_FUNC_READ_SIZE + MB_PDU_SIZE_MIN ) )
  47              		.loc 1 79 5 view .LVU8
  48              		.loc 1 79 9 is_stmt 0 view .LVU9
  49 0002 0B88     		ldrh	r3, [r1]
  50              		.loc 1 79 7 view .LVU10
  51 0004 052B     		cmp	r3, #5
  52 0006 01D0     		beq	.L9
  80:FreeModbus/functions/mbfunccoils.c ****     {
  81:FreeModbus/functions/mbfunccoils.c ****         usRegAddress = ( USHORT )( pucFrame[MB_PDU_FUNC_READ_ADDR_OFF] << 8 );
  82:FreeModbus/functions/mbfunccoils.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_ADDR_OFF + 1] );
  83:FreeModbus/functions/mbfunccoils.c ****         usRegAddress++;
  84:FreeModbus/functions/mbfunccoils.c **** 
  85:FreeModbus/functions/mbfunccoils.c ****         usCoilCount = ( USHORT )( pucFrame[MB_PDU_FUNC_READ_COILCNT_OFF] << 8 );
  86:FreeModbus/functions/mbfunccoils.c ****         usCoilCount |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_COILCNT_OFF + 1] );
  87:FreeModbus/functions/mbfunccoils.c **** 
  88:FreeModbus/functions/mbfunccoils.c ****         /* Check if the number of registers to read is valid. If not
  89:FreeModbus/functions/mbfunccoils.c ****          * return Modbus illegal data value exception. 
  90:FreeModbus/functions/mbfunccoils.c ****          */
  91:FreeModbus/functions/mbfunccoils.c ****         if( ( usCoilCount >= 1 ) &&
  92:FreeModbus/functions/mbfunccoils.c ****             ( usCoilCount < MB_PDU_FUNC_READ_COILCNT_MAX ) )
  93:FreeModbus/functions/mbfunccoils.c ****         {
  94:FreeModbus/functions/mbfunccoils.c ****             /* Set the current PDU data pointer to the beginning. */
  95:FreeModbus/functions/mbfunccoils.c ****             pucFrameCur = &pucFrame[MB_PDU_FUNC_OFF];
  96:FreeModbus/functions/mbfunccoils.c ****             *usLen = MB_PDU_FUNC_OFF;
  97:FreeModbus/functions/mbfunccoils.c **** 
  98:FreeModbus/functions/mbfunccoils.c ****             /* First byte contains the function code. */
  99:FreeModbus/functions/mbfunccoils.c ****             *pucFrameCur++ = MB_FUNC_READ_COILS;
 100:FreeModbus/functions/mbfunccoils.c ****             *usLen += 1;
 101:FreeModbus/functions/mbfunccoils.c **** 
 102:FreeModbus/functions/mbfunccoils.c ****             /* Test if the quantity of coils is a multiple of 8. If not last
 103:FreeModbus/functions/mbfunccoils.c ****              * byte is only partially field with unused coils set to zero. */
 104:FreeModbus/functions/mbfunccoils.c ****             if( ( usCoilCount & 0x0007 ) != 0 )
 105:FreeModbus/functions/mbfunccoils.c ****             {
 106:FreeModbus/functions/mbfunccoils.c ****                 ucNBytes = ( UCHAR )( usCoilCount / 8 + 1 );
 107:FreeModbus/functions/mbfunccoils.c ****             }
 108:FreeModbus/functions/mbfunccoils.c ****             else
 109:FreeModbus/functions/mbfunccoils.c ****             {
 110:FreeModbus/functions/mbfunccoils.c ****                 ucNBytes = ( UCHAR )( usCoilCount / 8 );
 111:FreeModbus/functions/mbfunccoils.c ****             }
 112:FreeModbus/functions/mbfunccoils.c ****             *pucFrameCur++ = ucNBytes;
 113:FreeModbus/functions/mbfunccoils.c ****             *usLen += 1;
 114:FreeModbus/functions/mbfunccoils.c **** 
 115:FreeModbus/functions/mbfunccoils.c ****             eRegStatus =
 116:FreeModbus/functions/mbfunccoils.c ****                 eMBRegCoilsCB( pucFrameCur, usRegAddress, usCoilCount,
 117:FreeModbus/functions/mbfunccoils.c ****                                MB_REG_READ );
 118:FreeModbus/functions/mbfunccoils.c **** 
 119:FreeModbus/functions/mbfunccoils.c ****             /* If an error occured convert it into a Modbus exception. */
 120:FreeModbus/functions/mbfunccoils.c ****             if( eRegStatus != MB_ENOERR )
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s 			page 4


 121:FreeModbus/functions/mbfunccoils.c ****             {
 122:FreeModbus/functions/mbfunccoils.c ****                 eStatus = prveMBError2Exception( eRegStatus );
 123:FreeModbus/functions/mbfunccoils.c ****             }
 124:FreeModbus/functions/mbfunccoils.c ****             else
 125:FreeModbus/functions/mbfunccoils.c ****             {
 126:FreeModbus/functions/mbfunccoils.c ****                 /* The response contains the function code, the starting address
 127:FreeModbus/functions/mbfunccoils.c ****                  * and the quantity of registers. We reuse the old values in the 
 128:FreeModbus/functions/mbfunccoils.c ****                  * buffer because they are still valid. */
 129:FreeModbus/functions/mbfunccoils.c ****                 *usLen += ucNBytes;;
 130:FreeModbus/functions/mbfunccoils.c ****             }
 131:FreeModbus/functions/mbfunccoils.c ****         }
 132:FreeModbus/functions/mbfunccoils.c ****         else
 133:FreeModbus/functions/mbfunccoils.c ****         {
 134:FreeModbus/functions/mbfunccoils.c ****             eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 135:FreeModbus/functions/mbfunccoils.c ****         }
 136:FreeModbus/functions/mbfunccoils.c ****     }
 137:FreeModbus/functions/mbfunccoils.c ****     else
 138:FreeModbus/functions/mbfunccoils.c ****     {
 139:FreeModbus/functions/mbfunccoils.c ****         /* Can't be a valid read coil register request because the length
 140:FreeModbus/functions/mbfunccoils.c ****          * is incorrect. */
 141:FreeModbus/functions/mbfunccoils.c ****         eStatus = MB_EX_ILLEGAL_DATA_VALUE;
  53              		.loc 1 141 17 view .LVU11
  54 0008 0320     		movs	r0, #3
  55              	.LVL2:
  56              	.L2:
 142:FreeModbus/functions/mbfunccoils.c ****     }
 143:FreeModbus/functions/mbfunccoils.c ****     return eStatus;
  57              		.loc 1 143 5 is_stmt 1 view .LVU12
 144:FreeModbus/functions/mbfunccoils.c **** }
  58              		.loc 1 144 1 is_stmt 0 view .LVU13
  59 000a 38BD     		pop	{r3, r4, r5, pc}
  60              	.LVL3:
  61              	.L9:
  62              		.loc 1 144 1 view .LVU14
  63 000c 0C46     		mov	r4, r1
  81:FreeModbus/functions/mbfunccoils.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_ADDR_OFF + 1] );
  64              		.loc 1 81 9 is_stmt 1 view .LVU15
  81:FreeModbus/functions/mbfunccoils.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_ADDR_OFF + 1] );
  65              		.loc 1 81 44 is_stmt 0 view .LVU16
  66 000e 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  67              	.LVL4:
  82:FreeModbus/functions/mbfunccoils.c ****         usRegAddress++;
  68              		.loc 1 82 9 is_stmt 1 view .LVU17
  82:FreeModbus/functions/mbfunccoils.c ****         usRegAddress++;
  69              		.loc 1 82 45 is_stmt 0 view .LVU18
  70 0010 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
  71              	.LVL5:
  82:FreeModbus/functions/mbfunccoils.c ****         usRegAddress++;
  72              		.loc 1 82 22 view .LVU19
  73 0012 41EA0321 		orr	r1, r1, r3, lsl #8
  74              	.LVL6:
  83:FreeModbus/functions/mbfunccoils.c **** 
  75              		.loc 1 83 9 is_stmt 1 view .LVU20
  83:FreeModbus/functions/mbfunccoils.c **** 
  76              		.loc 1 83 21 is_stmt 0 view .LVU21
  77 0016 0131     		adds	r1, r1, #1
  78              	.LVL7:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s 			page 5


  83:FreeModbus/functions/mbfunccoils.c **** 
  79              		.loc 1 83 21 view .LVU22
  80 0018 89B2     		uxth	r1, r1
  81              	.LVL8:
  85:FreeModbus/functions/mbfunccoils.c ****         usCoilCount |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_COILCNT_OFF + 1] );
  82              		.loc 1 85 9 is_stmt 1 view .LVU23
  85:FreeModbus/functions/mbfunccoils.c ****         usCoilCount |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_COILCNT_OFF + 1] );
  83              		.loc 1 85 43 is_stmt 0 view .LVU24
  84 001a C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
  85              	.LVL9:
  86:FreeModbus/functions/mbfunccoils.c **** 
  86              		.loc 1 86 9 is_stmt 1 view .LVU25
  86:FreeModbus/functions/mbfunccoils.c **** 
  87              		.loc 1 86 44 is_stmt 0 view .LVU26
  88 001c 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
  86:FreeModbus/functions/mbfunccoils.c **** 
  89              		.loc 1 86 21 view .LVU27
  90 001e 42EA0322 		orr	r2, r2, r3, lsl #8
  91              	.LVL10:
  91:FreeModbus/functions/mbfunccoils.c ****             ( usCoilCount < MB_PDU_FUNC_READ_COILCNT_MAX ) )
  92              		.loc 1 91 9 is_stmt 1 view .LVU28
  91:FreeModbus/functions/mbfunccoils.c ****             ( usCoilCount < MB_PDU_FUNC_READ_COILCNT_MAX ) )
  93              		.loc 1 91 34 is_stmt 0 view .LVU29
  94 0022 531E     		subs	r3, r2, #1
  95 0024 9BB2     		uxth	r3, r3
  91:FreeModbus/functions/mbfunccoils.c ****             ( usCoilCount < MB_PDU_FUNC_READ_COILCNT_MAX ) )
  96              		.loc 1 91 11 view .LVU30
  97 0026 40F2CE7C 		movw	ip, #1998
  98 002a 6345     		cmp	r3, ip
  99 002c 20D8     		bhi	.L7
  95:FreeModbus/functions/mbfunccoils.c ****             *usLen = MB_PDU_FUNC_OFF;
 100              		.loc 1 95 13 is_stmt 1 view .LVU31
 101              	.LVL11:
  96:FreeModbus/functions/mbfunccoils.c **** 
 102              		.loc 1 96 13 view .LVU32
  96:FreeModbus/functions/mbfunccoils.c **** 
 103              		.loc 1 96 20 is_stmt 0 view .LVU33
 104 002e 0023     		movs	r3, #0
 105 0030 2380     		strh	r3, [r4]	@ movhi
  99:FreeModbus/functions/mbfunccoils.c ****             *usLen += 1;
 106              		.loc 1 99 13 is_stmt 1 view .LVU34
 107              	.LVL12:
  99:FreeModbus/functions/mbfunccoils.c ****             *usLen += 1;
 108              		.loc 1 99 28 is_stmt 0 view .LVU35
 109 0032 0123     		movs	r3, #1
 110 0034 0370     		strb	r3, [r0]
 100:FreeModbus/functions/mbfunccoils.c **** 
 111              		.loc 1 100 13 is_stmt 1 view .LVU36
 100:FreeModbus/functions/mbfunccoils.c **** 
 112              		.loc 1 100 20 is_stmt 0 view .LVU37
 113 0036 2388     		ldrh	r3, [r4]
 114 0038 0133     		adds	r3, r3, #1
 115 003a 2380     		strh	r3, [r4]	@ movhi
 104:FreeModbus/functions/mbfunccoils.c ****             {
 116              		.loc 1 104 13 is_stmt 1 view .LVU38
 104:FreeModbus/functions/mbfunccoils.c ****             {
 117              		.loc 1 104 15 is_stmt 0 view .LVU39
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s 			page 6


 118 003c 12F0070F 		tst	r2, #7
 119 0040 10D0     		beq	.L3
 106:FreeModbus/functions/mbfunccoils.c ****             }
 120              		.loc 1 106 17 is_stmt 1 view .LVU40
 106:FreeModbus/functions/mbfunccoils.c ****             }
 121              		.loc 1 106 28 is_stmt 0 view .LVU41
 122 0042 C2F3C703 		ubfx	r3, r2, #3, #8
 106:FreeModbus/functions/mbfunccoils.c ****             }
 123              		.loc 1 106 26 view .LVU42
 124 0046 0133     		adds	r3, r3, #1
 125 0048 DDB2     		uxtb	r5, r3
 126              	.LVL13:
 127              	.L4:
 112:FreeModbus/functions/mbfunccoils.c ****             *usLen += 1;
 128              		.loc 1 112 13 is_stmt 1 view .LVU43
 112:FreeModbus/functions/mbfunccoils.c ****             *usLen += 1;
 129              		.loc 1 112 28 is_stmt 0 view .LVU44
 130 004a 4570     		strb	r5, [r0, #1]
 113:FreeModbus/functions/mbfunccoils.c **** 
 131              		.loc 1 113 13 is_stmt 1 view .LVU45
 113:FreeModbus/functions/mbfunccoils.c **** 
 132              		.loc 1 113 20 is_stmt 0 view .LVU46
 133 004c 2388     		ldrh	r3, [r4]
 134 004e 0133     		adds	r3, r3, #1
 135 0050 2380     		strh	r3, [r4]	@ movhi
 115:FreeModbus/functions/mbfunccoils.c ****                 eMBRegCoilsCB( pucFrameCur, usRegAddress, usCoilCount,
 136              		.loc 1 115 13 is_stmt 1 view .LVU47
 116:FreeModbus/functions/mbfunccoils.c ****                                MB_REG_READ );
 137              		.loc 1 116 17 is_stmt 0 view .LVU48
 138 0052 0023     		movs	r3, #0
 139 0054 0230     		adds	r0, r0, #2
 140              	.LVL14:
 116:FreeModbus/functions/mbfunccoils.c ****                                MB_REG_READ );
 141              		.loc 1 116 17 view .LVU49
 142 0056 FFF7FEFF 		bl	eMBRegCoilsCB
 143              	.LVL15:
 120:FreeModbus/functions/mbfunccoils.c ****             {
 144              		.loc 1 120 13 is_stmt 1 view .LVU50
 120:FreeModbus/functions/mbfunccoils.c ****             {
 145              		.loc 1 120 15 is_stmt 0 view .LVU51
 146 005a 30B9     		cbnz	r0, .L10
 129:FreeModbus/functions/mbfunccoils.c ****             }
 147              		.loc 1 129 17 is_stmt 1 view .LVU52
 129:FreeModbus/functions/mbfunccoils.c ****             }
 148              		.loc 1 129 24 is_stmt 0 view .LVU53
 149 005c 2388     		ldrh	r3, [r4]
 150 005e 2B44     		add	r3, r3, r5
 151 0060 2380     		strh	r3, [r4]	@ movhi
 152 0062 D2E7     		b	.L2
 153              	.LVL16:
 154              	.L3:
 110:FreeModbus/functions/mbfunccoils.c ****             }
 155              		.loc 1 110 17 is_stmt 1 view .LVU54
 110:FreeModbus/functions/mbfunccoils.c ****             }
 156              		.loc 1 110 26 is_stmt 0 view .LVU55
 157 0064 C2F3C705 		ubfx	r5, r2, #3, #8
 158              	.LVL17:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s 			page 7


 110:FreeModbus/functions/mbfunccoils.c ****             }
 159              		.loc 1 110 26 view .LVU56
 160 0068 EFE7     		b	.L4
 161              	.LVL18:
 162              	.L10:
 122:FreeModbus/functions/mbfunccoils.c ****             }
 163              		.loc 1 122 17 is_stmt 1 view .LVU57
 122:FreeModbus/functions/mbfunccoils.c ****             }
 164              		.loc 1 122 27 is_stmt 0 view .LVU58
 165 006a FFF7FEFF 		bl	prveMBError2Exception
 166              	.LVL19:
 122:FreeModbus/functions/mbfunccoils.c ****             }
 167              		.loc 1 122 27 view .LVU59
 168 006e CCE7     		b	.L2
 169              	.LVL20:
 170              	.L7:
 134:FreeModbus/functions/mbfunccoils.c ****         }
 171              		.loc 1 134 21 view .LVU60
 172 0070 0320     		movs	r0, #3
 173              	.LVL21:
 134:FreeModbus/functions/mbfunccoils.c ****         }
 174              		.loc 1 134 21 view .LVU61
 175 0072 CAE7     		b	.L2
 176              		.cfi_endproc
 177              	.LFE65:
 179              		.section	.text.eMBFuncWriteCoil,"ax",%progbits
 180              		.align	1
 181              		.global	eMBFuncWriteCoil
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 186              	eMBFuncWriteCoil:
 187              	.LVL22:
 188              	.LFB66:
 145:FreeModbus/functions/mbfunccoils.c **** #endif
 146:FreeModbus/functions/mbfunccoils.c **** 
 147:FreeModbus/functions/mbfunccoils.c **** #if MB_FUNC_WRITE_COIL_ENABLED > 0
 148:FreeModbus/functions/mbfunccoils.c **** eMBException
 149:FreeModbus/functions/mbfunccoils.c **** eMBFuncWriteCoil( UCHAR * pucFrame, USHORT * usLen )
 150:FreeModbus/functions/mbfunccoils.c **** {
 189              		.loc 1 150 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 151:FreeModbus/functions/mbfunccoils.c ****     USHORT          usRegAddress;
 193              		.loc 1 151 5 view .LVU63
 152:FreeModbus/functions/mbfunccoils.c ****     UCHAR           ucBuf[2];
 194              		.loc 1 152 5 view .LVU64
 153:FreeModbus/functions/mbfunccoils.c **** 
 154:FreeModbus/functions/mbfunccoils.c ****     eMBException    eStatus = MB_EX_NONE;
 195              		.loc 1 154 5 view .LVU65
 155:FreeModbus/functions/mbfunccoils.c ****     eMBErrorCode    eRegStatus;
 196              		.loc 1 155 5 view .LVU66
 156:FreeModbus/functions/mbfunccoils.c **** 
 157:FreeModbus/functions/mbfunccoils.c ****     if( *usLen == ( MB_PDU_FUNC_WRITE_SIZE + MB_PDU_SIZE_MIN ) )
 197              		.loc 1 157 5 view .LVU67
 198              		.loc 1 157 9 is_stmt 0 view .LVU68
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s 			page 8


 199 0000 0B88     		ldrh	r3, [r1]
 200              		.loc 1 157 7 view .LVU69
 201 0002 052B     		cmp	r3, #5
 202 0004 01D0     		beq	.L22
 158:FreeModbus/functions/mbfunccoils.c ****     {
 159:FreeModbus/functions/mbfunccoils.c ****         usRegAddress = ( USHORT )( pucFrame[MB_PDU_FUNC_WRITE_ADDR_OFF] << 8 );
 160:FreeModbus/functions/mbfunccoils.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_WRITE_ADDR_OFF + 1] );
 161:FreeModbus/functions/mbfunccoils.c ****         usRegAddress++;
 162:FreeModbus/functions/mbfunccoils.c **** 
 163:FreeModbus/functions/mbfunccoils.c ****         if( ( pucFrame[MB_PDU_FUNC_WRITE_VALUE_OFF + 1] == 0x00 ) &&
 164:FreeModbus/functions/mbfunccoils.c ****             ( ( pucFrame[MB_PDU_FUNC_WRITE_VALUE_OFF] == 0xFF ) ||
 165:FreeModbus/functions/mbfunccoils.c ****               ( pucFrame[MB_PDU_FUNC_WRITE_VALUE_OFF] == 0x00 ) ) )
 166:FreeModbus/functions/mbfunccoils.c ****         {
 167:FreeModbus/functions/mbfunccoils.c ****             ucBuf[1] = 0;
 168:FreeModbus/functions/mbfunccoils.c ****             if( pucFrame[MB_PDU_FUNC_WRITE_VALUE_OFF] == 0xFF )
 169:FreeModbus/functions/mbfunccoils.c ****             {
 170:FreeModbus/functions/mbfunccoils.c ****                 ucBuf[0] = 1;
 171:FreeModbus/functions/mbfunccoils.c ****             }
 172:FreeModbus/functions/mbfunccoils.c ****             else
 173:FreeModbus/functions/mbfunccoils.c ****             {
 174:FreeModbus/functions/mbfunccoils.c ****                 ucBuf[0] = 0;
 175:FreeModbus/functions/mbfunccoils.c ****             }
 176:FreeModbus/functions/mbfunccoils.c ****             eRegStatus =
 177:FreeModbus/functions/mbfunccoils.c ****                 eMBRegCoilsCB( &ucBuf[0], usRegAddress, 1, MB_REG_WRITE );
 178:FreeModbus/functions/mbfunccoils.c **** 
 179:FreeModbus/functions/mbfunccoils.c ****             /* If an error occured convert it into a Modbus exception. */
 180:FreeModbus/functions/mbfunccoils.c ****             if( eRegStatus != MB_ENOERR )
 181:FreeModbus/functions/mbfunccoils.c ****             {
 182:FreeModbus/functions/mbfunccoils.c ****                 eStatus = prveMBError2Exception( eRegStatus );
 183:FreeModbus/functions/mbfunccoils.c ****             }
 184:FreeModbus/functions/mbfunccoils.c ****         }
 185:FreeModbus/functions/mbfunccoils.c ****         else
 186:FreeModbus/functions/mbfunccoils.c ****         {
 187:FreeModbus/functions/mbfunccoils.c ****             eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 188:FreeModbus/functions/mbfunccoils.c ****         }
 189:FreeModbus/functions/mbfunccoils.c ****     }
 190:FreeModbus/functions/mbfunccoils.c ****     else
 191:FreeModbus/functions/mbfunccoils.c ****     {
 192:FreeModbus/functions/mbfunccoils.c ****         /* Can't be a valid write coil register request because the length
 193:FreeModbus/functions/mbfunccoils.c ****          * is incorrect. */
 194:FreeModbus/functions/mbfunccoils.c ****         eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 203              		.loc 1 194 17 view .LVU70
 204 0006 0320     		movs	r0, #3
 205              	.LVL23:
 206              		.loc 1 194 17 view .LVU71
 207 0008 7047     		bx	lr
 208              	.LVL24:
 209              	.L22:
 159:FreeModbus/functions/mbfunccoils.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_WRITE_ADDR_OFF + 1] );
 210              		.loc 1 159 9 is_stmt 1 view .LVU72
 159:FreeModbus/functions/mbfunccoils.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_WRITE_ADDR_OFF + 1] );
 211              		.loc 1 159 44 is_stmt 0 view .LVU73
 212 000a 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 213              	.LVL25:
 160:FreeModbus/functions/mbfunccoils.c ****         usRegAddress++;
 214              		.loc 1 160 9 is_stmt 1 view .LVU74
 160:FreeModbus/functions/mbfunccoils.c ****         usRegAddress++;
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s 			page 9


 215              		.loc 1 160 45 is_stmt 0 view .LVU75
 216 000c 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 217              	.LVL26:
 160:FreeModbus/functions/mbfunccoils.c ****         usRegAddress++;
 218              		.loc 1 160 22 view .LVU76
 219 000e 41EA0321 		orr	r1, r1, r3, lsl #8
 220              	.LVL27:
 161:FreeModbus/functions/mbfunccoils.c **** 
 221              		.loc 1 161 9 is_stmt 1 view .LVU77
 161:FreeModbus/functions/mbfunccoils.c **** 
 222              		.loc 1 161 21 is_stmt 0 view .LVU78
 223 0012 0131     		adds	r1, r1, #1
 224              	.LVL28:
 161:FreeModbus/functions/mbfunccoils.c **** 
 225              		.loc 1 161 21 view .LVU79
 226 0014 89B2     		uxth	r1, r1
 227              	.LVL29:
 163:FreeModbus/functions/mbfunccoils.c ****             ( ( pucFrame[MB_PDU_FUNC_WRITE_VALUE_OFF] == 0xFF ) ||
 228              		.loc 1 163 9 is_stmt 1 view .LVU80
 163:FreeModbus/functions/mbfunccoils.c ****             ( ( pucFrame[MB_PDU_FUNC_WRITE_VALUE_OFF] == 0xFF ) ||
 229              		.loc 1 163 23 is_stmt 0 view .LVU81
 230 0016 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 163:FreeModbus/functions/mbfunccoils.c ****             ( ( pucFrame[MB_PDU_FUNC_WRITE_VALUE_OFF] == 0xFF ) ||
 231              		.loc 1 163 11 view .LVU82
 232 0018 F3B9     		cbnz	r3, .L16
 164:FreeModbus/functions/mbfunccoils.c ****               ( pucFrame[MB_PDU_FUNC_WRITE_VALUE_OFF] == 0x00 ) ) )
 233              		.loc 1 164 25 discriminator 1 view .LVU83
 234 001a C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
 164:FreeModbus/functions/mbfunccoils.c ****               ( pucFrame[MB_PDU_FUNC_WRITE_VALUE_OFF] == 0x00 ) ) )
 235              		.loc 1 164 65 discriminator 1 view .LVU84
 236 001c 531E     		subs	r3, r2, #1
 237 001e DBB2     		uxtb	r3, r3
 163:FreeModbus/functions/mbfunccoils.c ****             ( ( pucFrame[MB_PDU_FUNC_WRITE_VALUE_OFF] == 0xFF ) ||
 238              		.loc 1 163 67 discriminator 1 view .LVU85
 239 0020 FD2B     		cmp	r3, #253
 240 0022 1BD9     		bls	.L17
 150:FreeModbus/functions/mbfunccoils.c ****     USHORT          usRegAddress;
 241              		.loc 1 150 1 view .LVU86
 242 0024 00B5     		push	{lr}
 243              	.LCFI1:
 244              		.cfi_def_cfa_offset 4
 245              		.cfi_offset 14, -4
 246 0026 83B0     		sub	sp, sp, #12
 247              	.LCFI2:
 248              		.cfi_def_cfa_offset 16
 167:FreeModbus/functions/mbfunccoils.c ****             if( pucFrame[MB_PDU_FUNC_WRITE_VALUE_OFF] == 0xFF )
 249              		.loc 1 167 13 is_stmt 1 view .LVU87
 167:FreeModbus/functions/mbfunccoils.c ****             if( pucFrame[MB_PDU_FUNC_WRITE_VALUE_OFF] == 0xFF )
 250              		.loc 1 167 22 is_stmt 0 view .LVU88
 251 0028 0023     		movs	r3, #0
 252 002a 8DF80530 		strb	r3, [sp, #5]
 168:FreeModbus/functions/mbfunccoils.c ****             {
 253              		.loc 1 168 13 is_stmt 1 view .LVU89
 168:FreeModbus/functions/mbfunccoils.c ****             {
 254              		.loc 1 168 15 is_stmt 0 view .LVU90
 255 002e FF2A     		cmp	r2, #255
 256 0030 0BD0     		beq	.L23
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s 			page 10


 174:FreeModbus/functions/mbfunccoils.c ****             }
 257              		.loc 1 174 17 is_stmt 1 view .LVU91
 174:FreeModbus/functions/mbfunccoils.c ****             }
 258              		.loc 1 174 26 is_stmt 0 view .LVU92
 259 0032 0023     		movs	r3, #0
 260 0034 8DF80430 		strb	r3, [sp, #4]
 261              	.L14:
 176:FreeModbus/functions/mbfunccoils.c ****                 eMBRegCoilsCB( &ucBuf[0], usRegAddress, 1, MB_REG_WRITE );
 262              		.loc 1 176 13 is_stmt 1 view .LVU93
 177:FreeModbus/functions/mbfunccoils.c **** 
 263              		.loc 1 177 17 is_stmt 0 view .LVU94
 264 0038 0123     		movs	r3, #1
 265 003a 1A46     		mov	r2, r3
 266 003c 01A8     		add	r0, sp, #4
 267              	.LVL30:
 177:FreeModbus/functions/mbfunccoils.c **** 
 268              		.loc 1 177 17 view .LVU95
 269 003e FFF7FEFF 		bl	eMBRegCoilsCB
 270              	.LVL31:
 180:FreeModbus/functions/mbfunccoils.c ****             {
 271              		.loc 1 180 13 is_stmt 1 view .LVU96
 180:FreeModbus/functions/mbfunccoils.c ****             {
 272              		.loc 1 180 15 is_stmt 0 view .LVU97
 273 0042 30B9     		cbnz	r0, .L24
 274              	.LVL32:
 275              	.L12:
 195:FreeModbus/functions/mbfunccoils.c ****     }
 196:FreeModbus/functions/mbfunccoils.c ****     return eStatus;
 276              		.loc 1 196 5 is_stmt 1 view .LVU98
 197:FreeModbus/functions/mbfunccoils.c **** }
 277              		.loc 1 197 1 is_stmt 0 view .LVU99
 278 0044 03B0     		add	sp, sp, #12
 279              	.LCFI3:
 280              		.cfi_remember_state
 281              		.cfi_def_cfa_offset 4
 282              		@ sp needed
 283 0046 5DF804FB 		ldr	pc, [sp], #4
 284              	.LVL33:
 285              	.L23:
 286              	.LCFI4:
 287              		.cfi_restore_state
 170:FreeModbus/functions/mbfunccoils.c ****             }
 288              		.loc 1 170 17 is_stmt 1 view .LVU100
 170:FreeModbus/functions/mbfunccoils.c ****             }
 289              		.loc 1 170 26 is_stmt 0 view .LVU101
 290 004a 0123     		movs	r3, #1
 291 004c 8DF80430 		strb	r3, [sp, #4]
 292 0050 F2E7     		b	.L14
 293              	.LVL34:
 294              	.L24:
 182:FreeModbus/functions/mbfunccoils.c ****             }
 295              		.loc 1 182 17 is_stmt 1 view .LVU102
 182:FreeModbus/functions/mbfunccoils.c ****             }
 296              		.loc 1 182 27 is_stmt 0 view .LVU103
 297 0052 FFF7FEFF 		bl	prveMBError2Exception
 298              	.LVL35:
 182:FreeModbus/functions/mbfunccoils.c ****             }
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s 			page 11


 299              		.loc 1 182 27 view .LVU104
 300 0056 F5E7     		b	.L12
 301              	.LVL36:
 302              	.L16:
 303              	.LCFI5:
 304              		.cfi_def_cfa_offset 0
 305              		.cfi_restore 14
 187:FreeModbus/functions/mbfunccoils.c ****         }
 306              		.loc 1 187 21 view .LVU105
 307 0058 0320     		movs	r0, #3
 308              	.LVL37:
 187:FreeModbus/functions/mbfunccoils.c ****         }
 309              		.loc 1 187 21 view .LVU106
 310 005a 7047     		bx	lr
 311              	.LVL38:
 312              	.L17:
 187:FreeModbus/functions/mbfunccoils.c ****         }
 313              		.loc 1 187 21 view .LVU107
 314 005c 0320     		movs	r0, #3
 315              	.LVL39:
 196:FreeModbus/functions/mbfunccoils.c **** }
 316              		.loc 1 196 5 is_stmt 1 view .LVU108
 317              		.loc 1 197 1 is_stmt 0 view .LVU109
 318 005e 7047     		bx	lr
 319              		.cfi_endproc
 320              	.LFE66:
 322              		.section	.text.eMBFuncWriteMultipleCoils,"ax",%progbits
 323              		.align	1
 324              		.global	eMBFuncWriteMultipleCoils
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 329              	eMBFuncWriteMultipleCoils:
 330              	.LVL40:
 331              	.LFB67:
 198:FreeModbus/functions/mbfunccoils.c **** 
 199:FreeModbus/functions/mbfunccoils.c **** #endif
 200:FreeModbus/functions/mbfunccoils.c **** 
 201:FreeModbus/functions/mbfunccoils.c **** #if MB_FUNC_WRITE_MULTIPLE_COILS_ENABLED > 0
 202:FreeModbus/functions/mbfunccoils.c **** eMBException
 203:FreeModbus/functions/mbfunccoils.c **** eMBFuncWriteMultipleCoils( UCHAR * pucFrame, USHORT * usLen )
 204:FreeModbus/functions/mbfunccoils.c **** {
 332              		.loc 1 204 1 is_stmt 1 view -0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 205:FreeModbus/functions/mbfunccoils.c ****     USHORT          usRegAddress;
 336              		.loc 1 205 5 view .LVU111
 206:FreeModbus/functions/mbfunccoils.c ****     USHORT          usCoilCnt;
 337              		.loc 1 206 5 view .LVU112
 207:FreeModbus/functions/mbfunccoils.c ****     UCHAR           ucByteCount;
 338              		.loc 1 207 5 view .LVU113
 208:FreeModbus/functions/mbfunccoils.c ****     UCHAR           ucByteCountVerify;
 339              		.loc 1 208 5 view .LVU114
 209:FreeModbus/functions/mbfunccoils.c **** 
 210:FreeModbus/functions/mbfunccoils.c ****     eMBException    eStatus = MB_EX_NONE;
 340              		.loc 1 210 5 view .LVU115
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s 			page 12


 211:FreeModbus/functions/mbfunccoils.c ****     eMBErrorCode    eRegStatus;
 341              		.loc 1 211 5 view .LVU116
 212:FreeModbus/functions/mbfunccoils.c **** 
 213:FreeModbus/functions/mbfunccoils.c ****     if( *usLen > ( MB_PDU_FUNC_WRITE_SIZE + MB_PDU_SIZE_MIN ) )
 342              		.loc 1 213 5 view .LVU117
 343              		.loc 1 213 9 is_stmt 0 view .LVU118
 344 0000 0B88     		ldrh	r3, [r1]
 345              		.loc 1 213 7 view .LVU119
 346 0002 052B     		cmp	r3, #5
 347 0004 2DD9     		bls	.L30
 204:FreeModbus/functions/mbfunccoils.c ****     USHORT          usRegAddress;
 348              		.loc 1 204 1 view .LVU120
 349 0006 10B5     		push	{r4, lr}
 350              	.LCFI6:
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 4, -8
 353              		.cfi_offset 14, -4
 354 0008 0C46     		mov	r4, r1
 214:FreeModbus/functions/mbfunccoils.c ****     {
 215:FreeModbus/functions/mbfunccoils.c ****         usRegAddress = ( USHORT )( pucFrame[MB_PDU_FUNC_WRITE_MUL_ADDR_OFF] << 8 );
 355              		.loc 1 215 9 is_stmt 1 view .LVU121
 356              		.loc 1 215 44 is_stmt 0 view .LVU122
 357 000a 4178     		ldrb	r1, [r0, #1]	@ zero_extendqisi2
 358              	.LVL41:
 216:FreeModbus/functions/mbfunccoils.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_WRITE_MUL_ADDR_OFF + 1] );
 359              		.loc 1 216 9 is_stmt 1 view .LVU123
 360              		.loc 1 216 45 is_stmt 0 view .LVU124
 361 000c 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 362              		.loc 1 216 22 view .LVU125
 363 000e 43EA0123 		orr	r3, r3, r1, lsl #8
 364              	.LVL42:
 217:FreeModbus/functions/mbfunccoils.c ****         usRegAddress++;
 365              		.loc 1 217 9 is_stmt 1 view .LVU126
 366              		.loc 1 217 21 is_stmt 0 view .LVU127
 367 0012 0133     		adds	r3, r3, #1
 368              	.LVL43:
 369              		.loc 1 217 21 view .LVU128
 370 0014 99B2     		uxth	r1, r3
 371              	.LVL44:
 218:FreeModbus/functions/mbfunccoils.c **** 
 219:FreeModbus/functions/mbfunccoils.c ****         usCoilCnt = ( USHORT )( pucFrame[MB_PDU_FUNC_WRITE_MUL_COILCNT_OFF] << 8 );
 372              		.loc 1 219 9 is_stmt 1 view .LVU129
 373              		.loc 1 219 41 is_stmt 0 view .LVU130
 374 0016 C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
 375              	.LVL45:
 220:FreeModbus/functions/mbfunccoils.c ****         usCoilCnt |= ( USHORT )( pucFrame[MB_PDU_FUNC_WRITE_MUL_COILCNT_OFF + 1] );
 376              		.loc 1 220 9 is_stmt 1 view .LVU131
 377              		.loc 1 220 42 is_stmt 0 view .LVU132
 378 0018 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 379              		.loc 1 220 19 view .LVU133
 380 001a 43EA0222 		orr	r2, r3, r2, lsl #8
 381              	.LVL46:
 221:FreeModbus/functions/mbfunccoils.c **** 
 222:FreeModbus/functions/mbfunccoils.c ****         ucByteCount = pucFrame[MB_PDU_FUNC_WRITE_MUL_BYTECNT_OFF];
 382              		.loc 1 222 9 is_stmt 1 view .LVU134
 383              		.loc 1 222 21 is_stmt 0 view .LVU135
 384 001e 90F805E0 		ldrb	lr, [r0, #5]	@ zero_extendqisi2
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s 			page 13


 385              	.LVL47:
 223:FreeModbus/functions/mbfunccoils.c **** 
 224:FreeModbus/functions/mbfunccoils.c ****         /* Compute the number of expected bytes in the request. */
 225:FreeModbus/functions/mbfunccoils.c ****         if( ( usCoilCnt & 0x0007 ) != 0 )
 386              		.loc 1 225 9 is_stmt 1 view .LVU136
 387              		.loc 1 225 11 is_stmt 0 view .LVU137
 388 0022 13F0070F 		tst	r3, #7
 389 0026 0ED0     		beq	.L27
 226:FreeModbus/functions/mbfunccoils.c ****         {
 227:FreeModbus/functions/mbfunccoils.c ****             ucByteCountVerify = ( UCHAR )( usCoilCnt / 8 + 1 );
 390              		.loc 1 227 13 is_stmt 1 view .LVU138
 391              		.loc 1 227 33 is_stmt 0 view .LVU139
 392 0028 C2F3C70C 		ubfx	ip, r2, #3, #8
 393              		.loc 1 227 31 view .LVU140
 394 002c 0CF1010C 		add	ip, ip, #1
 395 0030 5FFA8CFC 		uxtb	ip, ip
 396              	.LVL48:
 397              	.L28:
 228:FreeModbus/functions/mbfunccoils.c ****         }
 229:FreeModbus/functions/mbfunccoils.c ****         else
 230:FreeModbus/functions/mbfunccoils.c ****         {
 231:FreeModbus/functions/mbfunccoils.c ****             ucByteCountVerify = ( UCHAR )( usCoilCnt / 8 );
 232:FreeModbus/functions/mbfunccoils.c ****         }
 233:FreeModbus/functions/mbfunccoils.c **** 
 234:FreeModbus/functions/mbfunccoils.c ****         if( ( usCoilCnt >= 1 ) &&
 398              		.loc 1 234 9 is_stmt 1 view .LVU141
 399              		.loc 1 234 32 is_stmt 0 view .LVU142
 400 0034 531E     		subs	r3, r2, #1
 401 0036 9BB2     		uxth	r3, r3
 402              		.loc 1 234 11 view .LVU143
 403 0038 B3F5F66F 		cmp	r3, #1968
 404 003c 13D2     		bcs	.L31
 235:FreeModbus/functions/mbfunccoils.c ****             ( usCoilCnt <= MB_PDU_FUNC_WRITE_MUL_COILCNT_MAX ) &&
 405              		.loc 1 235 64 view .LVU144
 406 003e F445     		cmp	ip, lr
 407 0040 04D0     		beq	.L37
 236:FreeModbus/functions/mbfunccoils.c ****             ( ucByteCountVerify == ucByteCount ) )
 237:FreeModbus/functions/mbfunccoils.c ****         {
 238:FreeModbus/functions/mbfunccoils.c ****             eRegStatus =
 239:FreeModbus/functions/mbfunccoils.c ****                 eMBRegCoilsCB( &pucFrame[MB_PDU_FUNC_WRITE_MUL_VALUES_OFF],
 240:FreeModbus/functions/mbfunccoils.c ****                                usRegAddress, usCoilCnt, MB_REG_WRITE );
 241:FreeModbus/functions/mbfunccoils.c **** 
 242:FreeModbus/functions/mbfunccoils.c ****             /* If an error occured convert it into a Modbus exception. */
 243:FreeModbus/functions/mbfunccoils.c ****             if( eRegStatus != MB_ENOERR )
 244:FreeModbus/functions/mbfunccoils.c ****             {
 245:FreeModbus/functions/mbfunccoils.c ****                 eStatus = prveMBError2Exception( eRegStatus );
 246:FreeModbus/functions/mbfunccoils.c ****             }
 247:FreeModbus/functions/mbfunccoils.c ****             else
 248:FreeModbus/functions/mbfunccoils.c ****             {
 249:FreeModbus/functions/mbfunccoils.c ****                 /* The response contains the function code, the starting address
 250:FreeModbus/functions/mbfunccoils.c ****                  * and the quantity of registers. We reuse the old values in the 
 251:FreeModbus/functions/mbfunccoils.c ****                  * buffer because they are still valid. */
 252:FreeModbus/functions/mbfunccoils.c ****                 *usLen = MB_PDU_FUNC_WRITE_MUL_BYTECNT_OFF;
 253:FreeModbus/functions/mbfunccoils.c ****             }
 254:FreeModbus/functions/mbfunccoils.c ****         }
 255:FreeModbus/functions/mbfunccoils.c ****         else
 256:FreeModbus/functions/mbfunccoils.c ****         {
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s 			page 14


 257:FreeModbus/functions/mbfunccoils.c ****             eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 408              		.loc 1 257 21 view .LVU145
 409 0042 0320     		movs	r0, #3
 410              	.LVL49:
 411              	.L26:
 258:FreeModbus/functions/mbfunccoils.c ****         }
 259:FreeModbus/functions/mbfunccoils.c ****     }
 260:FreeModbus/functions/mbfunccoils.c ****     else
 261:FreeModbus/functions/mbfunccoils.c ****     {
 262:FreeModbus/functions/mbfunccoils.c ****         /* Can't be a valid write coil register request because the length
 263:FreeModbus/functions/mbfunccoils.c ****          * is incorrect. */
 264:FreeModbus/functions/mbfunccoils.c ****         eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 265:FreeModbus/functions/mbfunccoils.c ****     }
 266:FreeModbus/functions/mbfunccoils.c ****     return eStatus;
 412              		.loc 1 266 5 is_stmt 1 view .LVU146
 267:FreeModbus/functions/mbfunccoils.c **** }
 413              		.loc 1 267 1 is_stmt 0 view .LVU147
 414 0044 10BD     		pop	{r4, pc}
 415              	.LVL50:
 416              	.L27:
 231:FreeModbus/functions/mbfunccoils.c ****         }
 417              		.loc 1 231 13 is_stmt 1 view .LVU148
 231:FreeModbus/functions/mbfunccoils.c ****         }
 418              		.loc 1 231 31 is_stmt 0 view .LVU149
 419 0046 C2F3C70C 		ubfx	ip, r2, #3, #8
 420              	.LVL51:
 231:FreeModbus/functions/mbfunccoils.c ****         }
 421              		.loc 1 231 31 view .LVU150
 422 004a F3E7     		b	.L28
 423              	.L37:
 238:FreeModbus/functions/mbfunccoils.c ****                 eMBRegCoilsCB( &pucFrame[MB_PDU_FUNC_WRITE_MUL_VALUES_OFF],
 424              		.loc 1 238 13 is_stmt 1 view .LVU151
 239:FreeModbus/functions/mbfunccoils.c ****                                usRegAddress, usCoilCnt, MB_REG_WRITE );
 425              		.loc 1 239 17 is_stmt 0 view .LVU152
 426 004c 0123     		movs	r3, #1
 427 004e 0630     		adds	r0, r0, #6
 428              	.LVL52:
 239:FreeModbus/functions/mbfunccoils.c ****                                usRegAddress, usCoilCnt, MB_REG_WRITE );
 429              		.loc 1 239 17 view .LVU153
 430 0050 FFF7FEFF 		bl	eMBRegCoilsCB
 431              	.LVL53:
 243:FreeModbus/functions/mbfunccoils.c ****             {
 432              		.loc 1 243 13 is_stmt 1 view .LVU154
 243:FreeModbus/functions/mbfunccoils.c ****             {
 433              		.loc 1 243 15 is_stmt 0 view .LVU155
 434 0054 10B9     		cbnz	r0, .L38
 252:FreeModbus/functions/mbfunccoils.c ****             }
 435              		.loc 1 252 17 is_stmt 1 view .LVU156
 252:FreeModbus/functions/mbfunccoils.c ****             }
 436              		.loc 1 252 24 is_stmt 0 view .LVU157
 437 0056 0523     		movs	r3, #5
 438 0058 2380     		strh	r3, [r4]	@ movhi
 439 005a F3E7     		b	.L26
 440              	.L38:
 245:FreeModbus/functions/mbfunccoils.c ****             }
 441              		.loc 1 245 17 is_stmt 1 view .LVU158
 245:FreeModbus/functions/mbfunccoils.c ****             }
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s 			page 15


 442              		.loc 1 245 27 is_stmt 0 view .LVU159
 443 005c FFF7FEFF 		bl	prveMBError2Exception
 444              	.LVL54:
 245:FreeModbus/functions/mbfunccoils.c ****             }
 445              		.loc 1 245 27 view .LVU160
 446 0060 F0E7     		b	.L26
 447              	.LVL55:
 448              	.L30:
 449              	.LCFI7:
 450              		.cfi_def_cfa_offset 0
 451              		.cfi_restore 4
 452              		.cfi_restore 14
 264:FreeModbus/functions/mbfunccoils.c ****     }
 453              		.loc 1 264 17 view .LVU161
 454 0062 0320     		movs	r0, #3
 455              	.LVL56:
 266:FreeModbus/functions/mbfunccoils.c **** }
 456              		.loc 1 266 5 is_stmt 1 view .LVU162
 457              		.loc 1 267 1 is_stmt 0 view .LVU163
 458 0064 7047     		bx	lr
 459              	.LVL57:
 460              	.L31:
 461              	.LCFI8:
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 4, -8
 464              		.cfi_offset 14, -4
 257:FreeModbus/functions/mbfunccoils.c ****         }
 465              		.loc 1 257 21 view .LVU164
 466 0066 0320     		movs	r0, #3
 467              	.LVL58:
 257:FreeModbus/functions/mbfunccoils.c ****         }
 468              		.loc 1 257 21 view .LVU165
 469 0068 ECE7     		b	.L26
 470              		.cfi_endproc
 471              	.LFE67:
 473              		.text
 474              	.Letext0:
 475              		.file 2 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
 476              		.file 3 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 477              		.file 4 "FreeModbus/port/port.h"
 478              		.file 5 "FreeModbus/include/mbproto.h"
 479              		.file 6 "FreeModbus/include/mb.h"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 mbfunccoils.c
C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s:18     .text.eMBFuncReadCoils:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s:24     .text.eMBFuncReadCoils:00000000 eMBFuncReadCoils
C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s:180    .text.eMBFuncWriteCoil:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s:186    .text.eMBFuncWriteCoil:00000000 eMBFuncWriteCoil
C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s:323    .text.eMBFuncWriteMultipleCoils:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cccfL5Nj.s:329    .text.eMBFuncWriteMultipleCoils:00000000 eMBFuncWriteMultipleCoils

UNDEFINED SYMBOLS
eMBRegCoilsCB
prveMBError2Exception
