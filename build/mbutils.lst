ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccISC6xd.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mbutils.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.xMBUtilSetBits,"ax",%progbits
  18              		.align	1
  19              		.global	xMBUtilSetBits
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	xMBUtilSetBits:
  25              	.LVL0:
  26              	.LFB65:
  27              		.file 1 "FreeModbus/functions/mbutils.c"
   1:FreeModbus/functions/mbutils.c **** /* 
   2:FreeModbus/functions/mbutils.c ****  * FreeModbus Libary: A portable Modbus implementation for Modbus ASCII/RTU.
   3:FreeModbus/functions/mbutils.c ****  * Copyright (c) 2006-2018 Christian Walter <cwalter@embedded-solutions.at>
   4:FreeModbus/functions/mbutils.c ****  * All rights reserved.
   5:FreeModbus/functions/mbutils.c ****  *
   6:FreeModbus/functions/mbutils.c ****  * Redistribution and use in source and binary forms, with or without
   7:FreeModbus/functions/mbutils.c ****  * modification, are permitted provided that the following conditions
   8:FreeModbus/functions/mbutils.c ****  * are met:
   9:FreeModbus/functions/mbutils.c ****  * 1. Redistributions of source code must retain the above copyright
  10:FreeModbus/functions/mbutils.c ****  *    notice, this list of conditions and the following disclaimer.
  11:FreeModbus/functions/mbutils.c ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:FreeModbus/functions/mbutils.c ****  *    notice, this list of conditions and the following disclaimer in the
  13:FreeModbus/functions/mbutils.c ****  *    documentation and/or other materials provided with the distribution.
  14:FreeModbus/functions/mbutils.c ****  * 3. The name of the author may not be used to endorse or promote products
  15:FreeModbus/functions/mbutils.c ****  *    derived from this software without specific prior written permission.
  16:FreeModbus/functions/mbutils.c ****  *
  17:FreeModbus/functions/mbutils.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  18:FreeModbus/functions/mbutils.c ****  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  19:FreeModbus/functions/mbutils.c ****  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  20:FreeModbus/functions/mbutils.c ****  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
  21:FreeModbus/functions/mbutils.c ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  22:FreeModbus/functions/mbutils.c ****  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  23:FreeModbus/functions/mbutils.c ****  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  24:FreeModbus/functions/mbutils.c ****  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  25:FreeModbus/functions/mbutils.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  26:FreeModbus/functions/mbutils.c ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  27:FreeModbus/functions/mbutils.c ****  *
  28:FreeModbus/functions/mbutils.c ****  * File: $Id: mbutils.c,v 1.6 2007/02/18 23:49:07 wolti Exp $
  29:FreeModbus/functions/mbutils.c ****  */
  30:FreeModbus/functions/mbutils.c **** 
  31:FreeModbus/functions/mbutils.c **** /* ----------------------- System includes ----------------------------------*/
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccISC6xd.s 			page 2


  32:FreeModbus/functions/mbutils.c **** #include "stdlib.h"
  33:FreeModbus/functions/mbutils.c **** #include "string.h"
  34:FreeModbus/functions/mbutils.c **** 
  35:FreeModbus/functions/mbutils.c **** /* ----------------------- Platform includes --------------------------------*/
  36:FreeModbus/functions/mbutils.c **** #include "port.h"
  37:FreeModbus/functions/mbutils.c **** 
  38:FreeModbus/functions/mbutils.c **** /* ----------------------- Modbus includes ----------------------------------*/
  39:FreeModbus/functions/mbutils.c **** #include "mb.h"
  40:FreeModbus/functions/mbutils.c **** #include "mbproto.h"
  41:FreeModbus/functions/mbutils.c **** 
  42:FreeModbus/functions/mbutils.c **** /* ----------------------- Defines ------------------------------------------*/
  43:FreeModbus/functions/mbutils.c **** #define BITS_UCHAR      8U
  44:FreeModbus/functions/mbutils.c **** 
  45:FreeModbus/functions/mbutils.c **** /* ----------------------- Start implementation -----------------------------*/
  46:FreeModbus/functions/mbutils.c **** void
  47:FreeModbus/functions/mbutils.c **** xMBUtilSetBits( UCHAR * ucByteBuf, USHORT usBitOffset, UCHAR ucNBits,
  48:FreeModbus/functions/mbutils.c ****                 UCHAR ucValue )
  49:FreeModbus/functions/mbutils.c **** {
  28              		.loc 1 49 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 49 1 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  50:FreeModbus/functions/mbutils.c ****     USHORT          usWordBuf;
  38              		.loc 1 50 5 is_stmt 1 view .LVU2
  51:FreeModbus/functions/mbutils.c ****     USHORT          usMask;
  39              		.loc 1 51 5 view .LVU3
  52:FreeModbus/functions/mbutils.c ****     USHORT          usByteOffset;
  40              		.loc 1 52 5 view .LVU4
  53:FreeModbus/functions/mbutils.c ****     USHORT          usNPreBits;
  41              		.loc 1 53 5 view .LVU5
  54:FreeModbus/functions/mbutils.c ****     USHORT          usValue = ucValue;
  42              		.loc 1 54 5 view .LVU6
  43              	.LVL1:
  55:FreeModbus/functions/mbutils.c **** 
  56:FreeModbus/functions/mbutils.c ****     assert_param( ucNBits <= 8 );
  44              		.loc 1 56 5 view .LVU7
  57:FreeModbus/functions/mbutils.c ****     assert_param( ( size_t )BITS_UCHAR == sizeof( UCHAR ) * 8 );
  45              		.loc 1 57 5 view .LVU8
  58:FreeModbus/functions/mbutils.c **** 
  59:FreeModbus/functions/mbutils.c ****     /* Calculate byte offset for first byte containing the bit values starting
  60:FreeModbus/functions/mbutils.c ****      * at usBitOffset. */
  61:FreeModbus/functions/mbutils.c ****     usByteOffset = ( USHORT )( ( usBitOffset ) / BITS_UCHAR );
  46              		.loc 1 61 5 view .LVU9
  47              		.loc 1 61 18 is_stmt 0 view .LVU10
  48 0002 4FEAD10E 		lsr	lr, r1, #3
  49              	.LVL2:
  62:FreeModbus/functions/mbutils.c **** 
  63:FreeModbus/functions/mbutils.c ****     /* How many bits precede our bits to set. */
  64:FreeModbus/functions/mbutils.c ****     usNPreBits = ( USHORT )( usBitOffset - usByteOffset * BITS_UCHAR );
  50              		.loc 1 64 5 is_stmt 1 view .LVU11
  65:FreeModbus/functions/mbutils.c **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccISC6xd.s 			page 3


  66:FreeModbus/functions/mbutils.c ****     /* Move bit field into position over bits to set */
  67:FreeModbus/functions/mbutils.c ****     usValue <<= usNPreBits;
  51              		.loc 1 67 5 view .LVU12
  52              		.loc 1 67 13 is_stmt 0 view .LVU13
  53 0006 01F00704 		and	r4, r1, #7
  54 000a 03FA04F4 		lsl	r4, r3, r4
  55              	.LVL3:
  68:FreeModbus/functions/mbutils.c **** 
  69:FreeModbus/functions/mbutils.c ****     /* Prepare a mask for setting the new bits. */
  70:FreeModbus/functions/mbutils.c ****     usMask = ( USHORT )( ( 1 << ( USHORT ) ucNBits ) - 1 );
  56              		.loc 1 70 5 is_stmt 1 view .LVU14
  57              		.loc 1 70 30 is_stmt 0 view .LVU15
  58 000e 4FF0010C 		mov	ip, #1
  59 0012 0CFA02F3 		lsl	r3, ip, r2
  60              	.LVL4:
  61              		.loc 1 70 14 view .LVU16
  62 0016 9BB2     		uxth	r3, r3
  63              		.loc 1 70 12 view .LVU17
  64 0018 013B     		subs	r3, r3, #1
  65 001a 9BB2     		uxth	r3, r3
  66              	.LVL5:
  71:FreeModbus/functions/mbutils.c ****     usMask <<= usBitOffset - usByteOffset * BITS_UCHAR;
  67              		.loc 1 71 5 is_stmt 1 view .LVU18
  68              		.loc 1 71 28 is_stmt 0 view .LVU19
  69 001c 01F00701 		and	r1, r1, #7
  70              	.LVL6:
  71              		.loc 1 71 12 view .LVU20
  72 0020 03FA01F1 		lsl	r1, r3, r1
  73              	.LVL7:
  72:FreeModbus/functions/mbutils.c **** 
  73:FreeModbus/functions/mbutils.c ****     /* copy bits into temporary storage. */
  74:FreeModbus/functions/mbutils.c ****     usWordBuf = ucByteBuf[usByteOffset];
  74              		.loc 1 74 5 is_stmt 1 view .LVU21
  75              		.loc 1 74 26 is_stmt 0 view .LVU22
  76 0024 10F80E30 		ldrb	r3, [r0, lr]	@ zero_extendqisi2
  77              	.LVL8:
  75:FreeModbus/functions/mbutils.c ****     usWordBuf |= ucByteBuf[usByteOffset + 1] << BITS_UCHAR;
  78              		.loc 1 75 5 is_stmt 1 view .LVU23
  79              		.loc 1 75 27 is_stmt 0 view .LVU24
  80 0028 0EEB0C02 		add	r2, lr, ip
  81              	.LVL9:
  82              		.loc 1 75 27 view .LVU25
  83 002c 10F802C0 		ldrb	ip, [r0, r2]	@ zero_extendqisi2
  84              		.loc 1 75 15 view .LVU26
  85 0030 43EA0C23 		orr	r3, r3, ip, lsl #8
  86              	.LVL10:
  87              		.loc 1 75 15 view .LVU27
  88 0034 1BB2     		sxth	r3, r3
  89              	.LVL11:
  76:FreeModbus/functions/mbutils.c **** 
  77:FreeModbus/functions/mbutils.c ****     /* Zero out bit field bits and then or value bits into them. */
  78:FreeModbus/functions/mbutils.c ****     usWordBuf = ( USHORT )( ( usWordBuf & ( ~usMask ) ) | usValue );
  90              		.loc 1 78 5 is_stmt 1 view .LVU28
  91              		.loc 1 78 41 is_stmt 0 view .LVU29
  92 0036 23EA0103 		bic	r3, r3, r1
  93              	.LVL12:
  94              		.loc 1 78 41 view .LVU30
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccISC6xd.s 			page 4


  95 003a 1BB2     		sxth	r3, r3
  96              		.loc 1 78 57 view .LVU31
  97 003c 2343     		orrs	r3, r3, r4
  98              	.LVL13:
  79:FreeModbus/functions/mbutils.c **** 
  80:FreeModbus/functions/mbutils.c ****     /* move bits back into storage */
  81:FreeModbus/functions/mbutils.c ****     ucByteBuf[usByteOffset] = ( UCHAR )( usWordBuf & 0xFF );
  99              		.loc 1 81 5 is_stmt 1 view .LVU32
 100              		.loc 1 81 29 is_stmt 0 view .LVU33
 101 003e 00F80E30 		strb	r3, [r0, lr]
  82:FreeModbus/functions/mbutils.c ****     ucByteBuf[usByteOffset + 1] = ( UCHAR )( usWordBuf >> BITS_UCHAR );
 102              		.loc 1 82 5 is_stmt 1 view .LVU34
 103              		.loc 1 82 35 is_stmt 0 view .LVU35
 104 0042 C3F30723 		ubfx	r3, r3, #8, #8
 105              	.LVL14:
 106              		.loc 1 82 33 view .LVU36
 107 0046 8354     		strb	r3, [r0, r2]
  83:FreeModbus/functions/mbutils.c **** }
 108              		.loc 1 83 1 view .LVU37
 109 0048 10BD     		pop	{r4, pc}
 110              		.loc 1 83 1 view .LVU38
 111              		.cfi_endproc
 112              	.LFE65:
 114              		.section	.text.xMBUtilGetBits,"ax",%progbits
 115              		.align	1
 116              		.global	xMBUtilGetBits
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	xMBUtilGetBits:
 122              	.LVL15:
 123              	.LFB66:
  84:FreeModbus/functions/mbutils.c **** 
  85:FreeModbus/functions/mbutils.c **** UCHAR
  86:FreeModbus/functions/mbutils.c **** xMBUtilGetBits( UCHAR * ucByteBuf, USHORT usBitOffset, UCHAR ucNBits )
  87:FreeModbus/functions/mbutils.c **** {
 124              		.loc 1 87 1 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
  88:FreeModbus/functions/mbutils.c ****     USHORT          usWordBuf;
 129              		.loc 1 88 5 view .LVU40
  89:FreeModbus/functions/mbutils.c ****     USHORT          usMask;
 130              		.loc 1 89 5 view .LVU41
  90:FreeModbus/functions/mbutils.c ****     USHORT          usByteOffset;
 131              		.loc 1 90 5 view .LVU42
  91:FreeModbus/functions/mbutils.c ****     USHORT          usNPreBits;
 132              		.loc 1 91 5 view .LVU43
  92:FreeModbus/functions/mbutils.c **** 
  93:FreeModbus/functions/mbutils.c ****     /* Calculate byte offset for first byte containing the bit values starting
  94:FreeModbus/functions/mbutils.c ****      * at usBitOffset. */
  95:FreeModbus/functions/mbutils.c ****     usByteOffset = ( USHORT )( ( usBitOffset ) / BITS_UCHAR );
 133              		.loc 1 95 5 view .LVU44
 134              		.loc 1 95 18 is_stmt 0 view .LVU45
 135 0000 4FEAD10C 		lsr	ip, r1, #3
 136              	.LVL16:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccISC6xd.s 			page 5


  96:FreeModbus/functions/mbutils.c **** 
  97:FreeModbus/functions/mbutils.c ****     /* How many bits precede our bits to set. */
  98:FreeModbus/functions/mbutils.c ****     usNPreBits = ( USHORT )( usBitOffset - usByteOffset * BITS_UCHAR );
 137              		.loc 1 98 5 is_stmt 1 view .LVU46
  99:FreeModbus/functions/mbutils.c **** 
 100:FreeModbus/functions/mbutils.c ****     /* Prepare a mask for setting the new bits. */
 101:FreeModbus/functions/mbutils.c ****     usMask = ( USHORT )( ( 1 << ( USHORT ) ucNBits ) - 1 );
 138              		.loc 1 101 5 view .LVU47
 139              		.loc 1 101 30 is_stmt 0 view .LVU48
 140 0004 0123     		movs	r3, #1
 141 0006 9340     		lsls	r3, r3, r2
 142              		.loc 1 101 14 view .LVU49
 143 0008 9BB2     		uxth	r3, r3
 144              		.loc 1 101 12 view .LVU50
 145 000a 013B     		subs	r3, r3, #1
 146              	.LVL17:
 102:FreeModbus/functions/mbutils.c **** 
 103:FreeModbus/functions/mbutils.c ****     /* copy bits into temporary storage. */
 104:FreeModbus/functions/mbutils.c ****     usWordBuf = ucByteBuf[usByteOffset];
 147              		.loc 1 104 5 is_stmt 1 view .LVU51
 148              		.loc 1 104 26 is_stmt 0 view .LVU52
 149 000c 10F80C20 		ldrb	r2, [r0, ip]	@ zero_extendqisi2
 150              	.LVL18:
 105:FreeModbus/functions/mbutils.c ****     usWordBuf |= ucByteBuf[usByteOffset + 1] << BITS_UCHAR;
 151              		.loc 1 105 5 is_stmt 1 view .LVU53
 152              		.loc 1 105 27 is_stmt 0 view .LVU54
 153 0010 6044     		add	r0, r0, ip
 154              	.LVL19:
 155              		.loc 1 105 27 view .LVU55
 156 0012 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 157              		.loc 1 105 15 view .LVU56
 158 0014 42EA0020 		orr	r0, r2, r0, lsl #8
 159              	.LVL20:
 106:FreeModbus/functions/mbutils.c **** 
 107:FreeModbus/functions/mbutils.c ****     /* throw away unneeded bits. */
 108:FreeModbus/functions/mbutils.c ****     usWordBuf >>= usNPreBits;
 160              		.loc 1 108 5 is_stmt 1 view .LVU57
 161              		.loc 1 108 15 is_stmt 0 view .LVU58
 162 0018 01F00701 		and	r1, r1, #7
 163              	.LVL21:
 164              		.loc 1 108 15 view .LVU59
 165 001c 0841     		asrs	r0, r0, r1
 166              	.LVL22:
 167              		.loc 1 108 15 view .LVU60
 168 001e 80B2     		uxth	r0, r0
 169              	.LVL23:
 109:FreeModbus/functions/mbutils.c **** 
 110:FreeModbus/functions/mbutils.c ****     /* mask away bits above the requested bitfield. */
 111:FreeModbus/functions/mbutils.c ****     usWordBuf &= usMask;
 170              		.loc 1 111 5 is_stmt 1 view .LVU61
 171              		.loc 1 111 15 is_stmt 0 view .LVU62
 172 0020 1840     		ands	r0, r0, r3
 173              	.LVL24:
 112:FreeModbus/functions/mbutils.c **** 
 113:FreeModbus/functions/mbutils.c ****     return ( UCHAR ) usWordBuf;
 174              		.loc 1 113 5 is_stmt 1 view .LVU63
 114:FreeModbus/functions/mbutils.c **** }
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccISC6xd.s 			page 6


 175              		.loc 1 114 1 is_stmt 0 view .LVU64
 176 0022 C0B2     		uxtb	r0, r0
 177              	.LVL25:
 178              		.loc 1 114 1 view .LVU65
 179 0024 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE66:
 183              		.section	.text.prveMBError2Exception,"ax",%progbits
 184              		.align	1
 185              		.global	prveMBError2Exception
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	prveMBError2Exception:
 191              	.LVL26:
 192              	.LFB67:
 115:FreeModbus/functions/mbutils.c **** 
 116:FreeModbus/functions/mbutils.c **** eMBException
 117:FreeModbus/functions/mbutils.c **** prveMBError2Exception( eMBErrorCode eErrorCode )
 118:FreeModbus/functions/mbutils.c **** {
 193              		.loc 1 118 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 119:FreeModbus/functions/mbutils.c ****     eMBException    eStatus;
 198              		.loc 1 119 5 view .LVU67
 120:FreeModbus/functions/mbutils.c **** 
 121:FreeModbus/functions/mbutils.c ****     switch ( eErrorCode )
 199              		.loc 1 121 5 view .LVU68
 200 0000 0128     		cmp	r0, #1
 201 0002 05D0     		beq	.L6
 202 0004 0728     		cmp	r0, #7
 203 0006 05D0     		beq	.L7
 204 0008 08B1     		cbz	r0, .L9
 122:FreeModbus/functions/mbutils.c ****     {
 123:FreeModbus/functions/mbutils.c ****         case MB_ENOERR:
 124:FreeModbus/functions/mbutils.c ****             eStatus = MB_EX_NONE;
 125:FreeModbus/functions/mbutils.c ****             break;
 126:FreeModbus/functions/mbutils.c **** 
 127:FreeModbus/functions/mbutils.c ****         case MB_ENOREG:
 128:FreeModbus/functions/mbutils.c ****             eStatus = MB_EX_ILLEGAL_DATA_ADDRESS;
 129:FreeModbus/functions/mbutils.c ****             break;
 130:FreeModbus/functions/mbutils.c **** 
 131:FreeModbus/functions/mbutils.c ****         case MB_ETIMEDOUT:
 132:FreeModbus/functions/mbutils.c ****             eStatus = MB_EX_SLAVE_BUSY;
 133:FreeModbus/functions/mbutils.c ****             break;
 134:FreeModbus/functions/mbutils.c **** 
 135:FreeModbus/functions/mbutils.c ****         default:
 136:FreeModbus/functions/mbutils.c ****             eStatus = MB_EX_SLAVE_DEVICE_FAILURE;
 205              		.loc 1 136 21 is_stmt 0 view .LVU69
 206 000a 0420     		movs	r0, #4
 207              	.LVL27:
 137:FreeModbus/functions/mbutils.c ****             break;
 138:FreeModbus/functions/mbutils.c ****     }
 139:FreeModbus/functions/mbutils.c **** 
 140:FreeModbus/functions/mbutils.c ****     return eStatus;
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccISC6xd.s 			page 7


 208              		.loc 1 140 5 is_stmt 1 view .LVU70
 141:FreeModbus/functions/mbutils.c **** }
 209              		.loc 1 141 1 is_stmt 0 view .LVU71
 210 000c 7047     		bx	lr
 211              	.LVL28:
 212              	.L9:
 213              		.loc 1 141 1 view .LVU72
 214 000e 7047     		bx	lr
 215              	.L6:
 128:FreeModbus/functions/mbutils.c ****             break;
 216              		.loc 1 128 21 view .LVU73
 217 0010 0220     		movs	r0, #2
 218              	.LVL29:
 128:FreeModbus/functions/mbutils.c ****             break;
 219              		.loc 1 128 21 view .LVU74
 220 0012 7047     		bx	lr
 221              	.LVL30:
 222              	.L7:
 132:FreeModbus/functions/mbutils.c ****             break;
 223              		.loc 1 132 21 view .LVU75
 224 0014 0620     		movs	r0, #6
 225              	.LVL31:
 132:FreeModbus/functions/mbutils.c ****             break;
 226              		.loc 1 132 21 view .LVU76
 227 0016 7047     		bx	lr
 228              		.cfi_endproc
 229              	.LFE67:
 231              		.text
 232              	.Letext0:
 233              		.file 2 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
 234              		.file 3 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 235              		.file 4 "FreeModbus/port/port.h"
 236              		.file 5 "FreeModbus/include/mbproto.h"
 237              		.file 6 "FreeModbus/include/mb.h"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccISC6xd.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 mbutils.c
C:\Users\BLACK_~1\AppData\Local\Temp\ccISC6xd.s:18     .text.xMBUtilSetBits:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccISC6xd.s:24     .text.xMBUtilSetBits:00000000 xMBUtilSetBits
C:\Users\BLACK_~1\AppData\Local\Temp\ccISC6xd.s:115    .text.xMBUtilGetBits:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccISC6xd.s:121    .text.xMBUtilGetBits:00000000 xMBUtilGetBits
C:\Users\BLACK_~1\AppData\Local\Temp\ccISC6xd.s:184    .text.prveMBError2Exception:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccISC6xd.s:190    .text.prveMBError2Exception:00000000 prveMBError2Exception

NO UNDEFINED SYMBOLS
